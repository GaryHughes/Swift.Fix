public struct Fix {

    public enum Account : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdvId : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdvRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            3
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdvSide : String {

        public static var tag: Int {
            4
        }

        case Buy = "B"
        case Sell = "S"
        case Trade = "T"
        case Cross = "X"
    }

    public enum AdvTransType : String {

        public static var tag: Int {
            5
        }

        case New = "N"
        case Cancel = "C"
        case Replace = "R"
    }

    public enum AvgPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            6
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BeginSeqNo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            7
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BeginString : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            8
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BodyLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            9
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CheckSum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            10
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClOrdID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            11
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Commission : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            12
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommType : String {

        public static var tag: Int {
            13
        }

        case PerUnit = "1"
        case Percent = "2"
        case Absolute = "3"
        case PercentageWaivedCashDiscount = "4"
        case PercentageWaivedEnhancedUnits = "5"
        case PointsPerBondOrContract = "6"
        case BasisPoints = "7"
        case AmountPerContract = "8"
    }

    public enum CumQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            14
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Currency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            15
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndSeqNo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            16
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExecID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            17
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExecInst : String {

        public static var tag: Int {
            18
        }

        case StayOnOfferSide = "0"
        case NotHeld = "1"
        case Work = "2"
        case GoAlong = "3"
        case OverTheDay = "4"
        case Held = "5"
        case ParticipateDoNotInitiate = "6"
        case StrictScale = "7"
        case TryToScale = "8"
        case StayOnBidSide = "9"
        case NoCross = "A"
        case OKToCross = "B"
        case CallFirst = "C"
        case PercentOfVolume = "D"
        case DoNotIncrease = "E"
        case DoNotReduce = "F"
        case AllOrNone = "G"
        case ReinstateOnSystemFailure = "H"
        case InstitutionsOnly = "I"
        case ReinstateOnTradingHalt = "J"
        case CancelOnTradingHalt = "K"
        case LastPeg = "L"
        case MidPricePeg = "M"
        case NonNegotiable = "N"
        case OpeningPeg = "O"
        case MarketPeg = "P"
        case CancelOnSystemFailure = "Q"
        case PrimaryPeg = "R"
        case Suspend = "S"
        case FixedPegToLocalBestBidOrOfferAtTimeOfOrder = "T"
        case CustomerDisplayInstruction = "U"
        case Netting = "V"
        case PegToVWAP = "W"
        case TradeAlong = "X"
        case TryToStop = "Y"
        case CancelIfNotBest = "Z"
        case TrailingStopPeg = "a"
        case StrictLimit = "b"
        case IgnorePriceValidityChecks = "c"
        case PegToLimitPrice = "d"
        case WorkToTargetStrategy = "e"
        case IntermarketSweep = "f"
        case ExternalRoutingAllowed = "g"
        case ExternalRoutingNotAllowed = "h"
        case ImbalanceOnly = "i"
        case SingleExecutionRequestedForBlockTrade = "j"
        case BestExecution = "k"
        case SuspendOnSystemFailure = "l"
        case SuspendOnTradingHalt = "m"
        case ReinstateOnConnectionLoss = "n"
        case CancelOnConnectionLoss = "o"
        case SuspendOnConnectionLoss = "p"
        case Release = "q"
        case ExecuteAsDeltaNeutral = "r"
        case ExecuteAsDurationNeutral = "s"
        case ExecuteAsFXNeutral = "t"
        case MinGuaranteedFillEligible = "u"
        case BypassNonDisplayLiquidity = "v"
        case Lock = "w"
        case IgnoreNotionalValueChecks = "x"
        case TrdAtRefPx = "y"
        case AllowFacilitation = "z"
    }

    public enum ExecRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            19
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HandlInst : String {

        public static var tag: Int {
            21
        }

        case AutomatedExecutionNoIntervention = "1"
        case AutomatedExecutionInterventionOK = "2"
        case ManualOrder = "3"
    }

    public enum SecurityIDSource : String {

        public static var tag: Int {
            22
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum IOIID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            23
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IOIQltyInd : String {

        public static var tag: Int {
            25
        }

        case High = "H"
        case Low = "L"
        case Medium = "M"
    }

    public enum IOIRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            26
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IOIQty : String {

        public static var tag: Int {
            27
        }

        case Small = "S"
        case Medium = "M"
        case Large = "L"
        case UndisclosedQuantity = "U"
    }

    public enum IOITransType : String {

        public static var tag: Int {
            28
        }

        case New = "N"
        case Cancel = "C"
        case Replace = "R"
    }

    public enum LastCapacity : String {

        public static var tag: Int {
            29
        }

        case Agent = "1"
        case CrossAsAgent = "2"
        case CrossAsPrincipal = "3"
        case Principal = "4"
        case RisklessPrincipal = "5"
    }

    public enum LastMkt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            30
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            31
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            32
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLinesOfText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            33
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MsgSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            34
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MsgType : String {

        public static var tag: Int {
            35
        }

        case Heartbeat = "0"
        case TestRequest = "1"
        case ResendRequest = "2"
        case Reject = "3"
        case SequenceReset = "4"
        case Logout = "5"
        case IOI = "6"
        case Advertisement = "7"
        case ExecutionReport = "8"
        case OrderCancelReject = "9"
        case Logon = "A"
        case News = "B"
        case Email = "C"
        case NewOrderSingle = "D"
        case NewOrderList = "E"
        case OrderCancelRequest = "F"
        case OrderCancelReplaceRequest = "G"
        case OrderStatusRequest = "H"
        case AllocationInstruction = "J"
        case ListCancelRequest = "K"
        case ListExecute = "L"
        case ListStatusRequest = "M"
        case ListStatus = "N"
        case AllocationInstructionAck = "P"
        case DontKnowTrade = "Q"
        case QuoteRequest = "R"
        case Quote = "S"
        case SettlementInstructions = "T"
        case MarketDataRequest = "V"
        case MarketDataSnapshotFullRefresh = "W"
        case MarketDataIncrementalRefresh = "X"
        case MarketDataRequestReject = "Y"
        case QuoteCancel = "Z"
        case QuoteStatusRequest = "a"
        case MassQuoteAck = "b"
        case SecurityDefinitionRequest = "c"
        case SecurityDefinition = "d"
        case SecurityStatusRequest = "e"
        case SecurityStatus = "f"
        case TradingSessionStatusRequest = "g"
        case TradingSessionStatus = "h"
        case MassQuote = "i"
        case BusinessMessageReject = "j"
        case BidRequest = "k"
        case BidResponse = "l"
        case ListStrikePrice = "m"
        case XMLnonFIX = "n"
        case RegistrationInstructions = "o"
        case RegistrationInstructionsResponse = "p"
        case OrderMassCancelRequest = "q"
        case OrderMassCancelReport = "r"
        case NewOrderCross = "s"
        case CrossOrderCancelReplaceRequest = "t"
        case CrossOrderCancelRequest = "u"
        case SecurityTypeRequest = "v"
        case SecurityTypes = "w"
        case SecurityListRequest = "x"
        case SecurityList = "y"
        case DerivativeSecurityListRequest = "z"
        case DerivativeSecurityList = "AA"
        case NewOrderMultileg = "AB"
        case MultilegOrderCancelReplace = "AC"
        case TradeCaptureReportRequest = "AD"
        case TradeCaptureReport = "AE"
        case OrderMassStatusRequest = "AF"
        case QuoteRequestReject = "AG"
        case RFQRequest = "AH"
        case QuoteStatusReport = "AI"
        case QuoteResponse = "AJ"
        case Confirmation = "AK"
        case PositionMaintenanceRequest = "AL"
        case PositionMaintenanceReport = "AM"
        case RequestForPositions = "AN"
        case RequestForPositionsAck = "AO"
        case PositionReport = "AP"
        case TradeCaptureReportRequestAck = "AQ"
        case TradeCaptureReportAck = "AR"
        case AllocationReport = "AS"
        case AllocationReportAck = "AT"
        case ConfirmationAck = "AU"
        case SettlementInstructionRequest = "AV"
        case AssignmentReport = "AW"
        case CollateralRequest = "AX"
        case CollateralAssignment = "AY"
        case CollateralResponse = "AZ"
        case CollateralReport = "BA"
        case CollateralInquiry = "BB"
        case NetworkCounterpartySystemStatusRequest = "BC"
        case NetworkCounterpartySystemStatusResponse = "BD"
        case UserRequest = "BE"
        case UserResponse = "BF"
        case CollateralInquiryAck = "BG"
        case ConfirmationRequest = "BH"
        case ContraryIntentionReport = "BO"
        case SecurityDefinitionUpdateReport = "BP"
        case SecurityListUpdateReport = "BK"
        case AdjustedPositionReport = "BL"
        case AllocationInstructionAlert = "BM"
        case ExecutionAck = "BN"
        case TradingSessionList = "BJ"
        case TradingSessionListRequest = "BI"
        case SettlementObligationReport = "BQ"
        case DerivativeSecurityListUpdateReport = "BR"
        case TradingSessionListUpdateReport = "BS"
        case MarketDefinitionRequest = "BT"
        case MarketDefinition = "BU"
        case MarketDefinitionUpdateReport = "BV"
        case ApplicationMessageRequest = "BW"
        case ApplicationMessageRequestAck = "BX"
        case ApplicationMessageReport = "BY"
        case OrderMassActionReport = "BZ"
        case OrderMassActionRequest = "CA"
        case UserNotification = "CB"
        case StreamAssignmentRequest = "CC"
        case StreamAssignmentReport = "CD"
        case StreamAssignmentReportACK = "CE"
        case PartyDetailsListRequest = "CF"
        case PartyDetailsListReport = "CG"
        case MarginRequirementInquiry = "CH"
        case MarginRequirementInquiryAck = "CI"
        case MarginRequirementReport = "CJ"
        case PartyDetailsListUpdateReport = "CK"
        case PartyRiskLimitsRequest = "CL"
        case PartyRiskLimitsReport = "CM"
        case SecurityMassStatusRequest = "CN"
        case SecurityMassStatus = "CO"
        case AccountSummaryReport = "CQ"
        case PartyRiskLimitsUpdateReport = "CR"
        case PartyRiskLimitsDefinitionRequest = "CS"
        case PartyRiskLimitsDefinitionRequestAck = "CT"
        case PartyEntitlementsRequest = "CU"
        case PartyEntitlementsReport = "CV"
        case QuoteAck = "CW"
        case PartyDetailsDefinitionRequest = "CX"
        case PartyDetailsDefinitionRequestAck = "CY"
        case PartyEntitlementsUpdateReport = "CZ"
        case PartyEntitlementsDefinitionRequest = "DA"
        case PartyEntitlementsDefinitionRequestAck = "DB"
        case TradeMatchReport = "DC"
        case TradeMatchReportAck = "DD"
        case PartyRiskLimitsReportAck = "DE"
        case PartyRiskLimitCheckRequest = "DF"
        case PartyRiskLimitCheckRequestAck = "DG"
        case PartyActionRequest = "DH"
        case PartyActionReport = "DI"
        case MassOrder = "DJ"
        case MassOrderAck = "DK"
        case PositionTransferInstruction = "DL"
        case PositionTransferInstructionAck = "DM"
        case PositionTransferReport = "DN"
        case MarketDataStatisticsRequest = "DO"
        case MarketDataStatisticsReport = "DP"
        case CollateralReportAck = "DQ"
        case MarketDataReport = "DR"
        case CrossRequest = "DS"
        case CrossRequestAck = "DT"
        case AllocationInstructionAlertRequest = "DU"
        case AllocationInstructionAlertRequestAck = "DV"
        case TradeAggregationRequest = "DW"
        case TradeAggregationReport = "DX"
        case PayManagementReport = "EA"
        case PayManagementReportAck = "EB"
        case PayManagementRequest = "DY"
        case PayManagementRequestAck = "DZ"
    }

    public enum NewSeqNo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            36
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            37
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            38
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrdStatus : String {

        public static var tag: Int {
            39
        }

        case New = "0"
        case PartiallyFilled = "1"
        case Filled = "2"
        case DoneForDay = "3"
        case Canceled = "4"
        case Replaced = "5"
        case PendingCancel = "6"
        case Stopped = "7"
        case Rejected = "8"
        case Suspended = "9"
        case PendingNew = "A"
        case Calculated = "B"
        case Expired = "C"
        case AcceptedForBidding = "D"
        case PendingReplace = "E"
    }

    public enum OrdType : String {

        public static var tag: Int {
            40
        }

        case Market = "1"
        case Limit = "2"
        case Stop = "3"
        case StopLimit = "4"
        case MarketOnClose = "5"
        case WithOrWithout = "6"
        case LimitOrBetter = "7"
        case LimitWithOrWithout = "8"
        case OnBasis = "9"
        case OnClose = "A"
        case LimitOnClose = "B"
        case ForexMarket = "C"
        case PreviouslyQuoted = "D"
        case PreviouslyIndicated = "E"
        case ForexLimit = "F"
        case ForexSwap = "G"
        case ForexPreviouslyQuoted = "H"
        case Funari = "I"
        case MarketIfTouched = "J"
        case MarketWithLeftOverAsLimit = "K"
        case PreviousFundValuationPoint = "L"
        case NextFundValuationPoint = "M"
        case Pegged = "P"
        case CounterOrderSelection = "Q"
        case StopOnBidOrOffer = "R"
        case StopLimitOnBidOrOffer = "S"
    }

    public enum OrigClOrdID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrigTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PossDupFlag : String {

        public static var tag: Int {
            43
        }

        case OriginalTransmission = "N"
        case PossibleDuplicate = "Y"
    }

    public enum Price : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            44
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            45
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            48
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SenderCompID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            49
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SenderSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            50
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SendingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            52
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Quantity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            53
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Side : String {

        public static var tag: Int {
            54
        }

        case Buy = "1"
        case Sell = "2"
        case BuyMinus = "3"
        case SellPlus = "4"
        case SellShort = "5"
        case SellShortExempt = "6"
        case Undisclosed = "7"
        case Cross = "8"
        case CrossShort = "9"
        case CrossShortExempt = "A"
        case AsDefined = "B"
        case Opposite = "C"
        case Subscribe = "D"
        case Redeem = "E"
        case Lend = "F"
        case Borrow = "G"
        case SellUndisclosed = "H"
    }

    public enum Symbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            55
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetCompID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            56
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            57
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Text : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            58
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TimeInForce : String {

        public static var tag: Int {
            59
        }

        case Day = "0"
        case GoodTillCancel = "1"
        case AtTheOpening = "2"
        case ImmediateOrCancel = "3"
        case FillOrKill = "4"
        case GoodTillCrossing = "5"
        case GoodTillDate = "6"
        case AtTheClose = "7"
        case GoodThroughCrossing = "8"
        case AtCrossing = "9"
        case GoodForTime = "A"
        case GoodForAuction = "B"
        case GoodForMonth = "C"
    }

    public enum TransactTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            60
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Urgency : String {

        public static var tag: Int {
            61
        }

        case Normal = "0"
        case Flash = "1"
        case Background = "2"
    }

    public enum ValidUntilTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            62
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlType : String {

        public static var tag: Int {
            63
        }

        case Regular = "0"
        case Cash = "1"
        case NextDay = "2"
        case TPlus2 = "3"
        case TPlus3 = "4"
        case TPlus4 = "5"
        case Future = "6"
        case WhenAndIfIssued = "7"
        case SellersOption = "8"
        case TPlus5 = "9"
        case BrokenDate = "B"
        case FXSpotNextSettlement = "C"
    }

    public enum SettlDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            64
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SymbolSfx : String {

        public static var tag: Int {
            65
        }

        case EUCPWithLumpSumInterest = "CD"
        case WhenIssued = "WI"
    }

    public enum ListID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            66
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListSeqNo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            67
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            68
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListExecInst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            69
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            70
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocTransType : String {

        public static var tag: Int {
            71
        }

        case New = "0"
        case Replace = "1"
        case Cancel = "2"
        case Preliminary = "3"
        case Calculated = "4"
        case CalculatedWithoutPreliminary = "5"
        case Reversal = "6"
    }

    public enum RefAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            72
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            73
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AvgPxPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            74
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            75
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PositionEffect : String {

        public static var tag: Int {
            77
        }

        case Close = "C"
        case FIFO = "F"
        case Open = "O"
        case Rolled = "R"
        case CloseButNotifyOnOpen = "N"
        case Default = "D"
    }

    public enum NoAllocs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            78
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocAccount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            79
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            80
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProcessCode : String {

        public static var tag: Int {
            81
        }

        case Regular = "0"
        case SoftDollar = "1"
        case StepIn = "2"
        case StepOut = "3"
        case SoftDollarStepIn = "4"
        case SoftDollarStepOut = "5"
        case PlanSponsor = "6"
    }

    public enum NoRpts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            82
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RptSeq : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            83
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CxlQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            84
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDlvyInst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            85
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocStatus : String {

        public static var tag: Int {
            87
        }

        case Accepted = "0"
        case BlockLevelReject = "1"
        case AccountLevelReject = "2"
        case Received = "3"
        case Incomplete = "4"
        case RejectedByIntermediary = "5"
        case AllocationPending = "6"
        case Reversed = "7"
        case CancelledByIntermediary = "8"
        case Claimed = "9"
        case Refused = "10"
        case PendingGiveUpApproval = "11"
        case Cancelled = "12"
        case PendingTakeUpApproval = "13"
        case ReversalPending = "14"
    }

    public enum AllocRejCode : String {

        public static var tag: Int {
            88
        }

        case UnknownAccount = "0"
        case IncorrectQuantity = "1"
        case IncorrectAveragegPrice = "2"
        case UnknownExecutingBrokerMnemonic = "3"
        case CommissionDifference = "4"
        case UnknownOrderID = "5"
        case UnknownListID = "6"
        case OtherSeeText = "7"
        case IncorrectAllocatedQuantity = "8"
        case CalculationDifference = "9"
        case UnknownOrStaleExecID = "10"
        case MismatchedData = "11"
        case UnknownClOrdID = "12"
        case WarehouseRequestRejected = "13"
        case DuplicateOrMissingIndividualAllocId = "14"
        case TradeNotRecognized = "15"
        case DuplicateTrade = "16"
        case IncorrectOrMissingInstrument = "17"
        case IncorrectOrMissingSettlDate = "18"
        case IncorrectOrMissingFundIDOrFundName = "19"
        case IncorrectOrMissingSettlInstructions = "20"
        case IncorrectOrMissingFees = "21"
        case IncorrectOrMissingTax = "22"
        case UnknownOrMissingParty = "23"
        case IncorrectOrMissingSide = "24"
        case IncorrectOrMissingNetMoney = "25"
        case IncorrectOrMissingTradeDate = "26"
        case IncorrectOrMissingSettlCcyInstructions = "27"
        case IncorrectOrMissingProcessCode = "28"
        case Other = "99"
    }

    public enum Signature : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            89
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecureDataLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            90
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecureData : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            91
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SignatureLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            93
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EmailType : String {

        public static var tag: Int {
            94
        }

        case New = "0"
        case Reply = "1"
        case AdminReply = "2"
    }

    public enum RawDataLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            95
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RawData : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            96
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PossResend : String {

        public static var tag: Int {
            97
        }

        case OriginalTransmission = "N"
        case PossibleResend = "Y"
    }

    public enum EncryptMethod : String {

        public static var tag: Int {
            98
        }

        case None = "0"
        case PKCS = "1"
        case DES = "2"
        case PKCSDES = "3"
        case PGPDES = "4"
        case PGPDESMD5 = "5"
        case PEM = "6"
    }

    public enum StopPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            99
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExDestination : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            100
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CxlRejReason : String {

        public static var tag: Int {
            102
        }

        case TooLateToCancel = "0"
        case UnknownOrder = "1"
        case BrokerCredit = "2"
        case OrderAlreadyInPendingStatus = "3"
        case UnableToProcessOrderMassCancelRequest = "4"
        case OrigOrdModTime = "5"
        case DuplicateClOrdID = "6"
        case PriceExceedsCurrentPrice = "7"
        case PriceExceedsCurrentPriceBand = "8"
        case InvalidPriceIncrement = "18"
        case Other = "99"
    }

    public enum OrdRejReason : String {

        public static var tag: Int {
            103
        }

        case BrokerCredit = "0"
        case UnknownSymbol = "1"
        case ExchangeClosed = "2"
        case OrderExceedsLimit = "3"
        case TooLateToEnter = "4"
        case UnknownOrder = "5"
        case DuplicateOrder = "6"
        case DuplicateOfAVerballyCommunicatedOrder = "7"
        case StaleOrder = "8"
        case TradeAlongRequired = "9"
        case InvalidInvestorID = "10"
        case UnsupportedOrderCharacteristic = "11"
        case SurveillanceOption = "12"
        case IncorrectQuantity = "13"
        case IncorrectAllocatedQuantity = "14"
        case UnknownAccount = "15"
        case PriceExceedsCurrentPriceBand = "16"
        case InvalidPriceIncrement = "18"
        case ReferencePriceNotAvailable = "19"
        case NotionalValueExceedsThreshold = "20"
        case AlgorithRiskThresholdBreached = "21"
        case ShortSellNotPermitted = "22"
        case ShortSellSecurityPreBorrowRestriction = "23"
        case ShortSellAccountPreBorrowRestriction = "24"
        case InsufficientCreditLimit = "25"
        case ExceededClipSizeLimit = "26"
        case ExceededMaxNotionalOrderAmt = "27"
        case ExceededDV01PV01Limit = "28"
        case ExceededCS01Limit = "29"
        case Other = "99"
    }

    public enum IOIQualifier : String {

        public static var tag: Int {
            104
        }

        case AllOrNone = "A"
        case MarketOnClose = "B"
        case AtTheClose = "C"
        case VWAP = "D"
        case Axe = "E"
        case AxeOnBid = "F"
        case AxeOnOffer = "G"
        case ClientNaturalWorking = "H"
        case InTouchWith = "I"
        case PositionWanted = "J"
        case MarketMaking = "K"
        case Limit = "L"
        case MoreBehind = "M"
        case ClientNaturalBlock = "N"
        case AtTheOpen = "O"
        case TakingAPosition = "P"
        case AtTheMarket = "Q"
        case ReadyToTrade = "R"
        case PortfolioShown = "S"
        case ThroughTheDay = "T"
        case Unwind = "U"
        case Versus = "V"
        case Indication = "W"
        case CrossingOpportunity = "X"
        case AtTheMidpoint = "Y"
        case PreOpen = "Z"
        case QuantityNegotiable = "1"
        case AllowLateBids = "2"
        case ImmediateOrCounter = "3"
        case AutoTrade = "4"
        case AutomaticSpot = "a"
        case PlatformCalculatedSpot = "b"
        case OutsideSpread = "c"
        case DeferredSpot = "d"
        case NegotiatedSpot = "n"
    }

    public enum Issuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            106
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            107
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HeartBtInt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            108
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            110
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaxFloor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            111
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TestReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            112
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReportToExch : String {

        public static var tag: Int {
            113
        }

        case SenderReports = "N"
        case ReceiverReports = "Y"
    }

    public enum LocateReqd : String {

        public static var tag: Int {
            114
        }

        case No = "N"
        case Yes = "Y"
    }

    public enum OnBehalfOfCompID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            115
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OnBehalfOfSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            116
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            117
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NetMoney : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            118
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlCurrAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            119
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            120
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ForexReq : String {

        public static var tag: Int {
            121
        }

        case DoNotExecuteForexAfterSecurityTrade = "N"
        case ExecuteForexAfterSecurityTrade = "Y"
    }

    public enum OrigSendingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            122
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum GapFillFlag : String {

        public static var tag: Int {
            123
        }

        case SequenceReset = "N"
        case GapFillMessage = "Y"
    }

    public enum NoExecs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            124
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExpireTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            126
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DKReason : String {

        public static var tag: Int {
            127
        }

        case UnknownSymbol = "A"
        case WrongSide = "B"
        case QuantityExceedsOrder = "C"
        case NoMatchingOrder = "D"
        case PriceExceedsLimit = "E"
        case CalculationDifference = "F"
        case NoMatchingExecutionReport = "G"
        case Other = "Z"
    }

    public enum DeliverToCompID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            128
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliverToSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            129
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IOINaturalFlag : String {

        public static var tag: Int {
            130
        }

        case NotNatural = "N"
        case Natural = "Y"
    }

    public enum QuoteReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            131
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            132
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            133
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            134
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            135
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMiscFees : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            136
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            137
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeCurr : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            138
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeType : String {

        public static var tag: Int {
            139
        }

        case Regulatory = "1"
        case Tax = "2"
        case LocalCommission = "3"
        case ExchangeFees = "4"
        case Stamp = "5"
        case Levy = "6"
        case Other = "7"
        case Markup = "8"
        case ConsumptionTax = "9"
        case PerTransaction = "10"
        case Conversion = "11"
        case Agent = "12"
        case TransferFee = "13"
        case SecurityLending = "14"
        case TradeReporting = "15"
        case TaxOnPrincipalAmount = "16"
        case TaxOnAccruedInterestAmount = "17"
        case NewIssuanceFee = "18"
        case ServiceFee = "19"
        case OddLotFee = "20"
        case AuctionFee = "21"
        case ValueAddedTax = "22"
        case SalesTax = "23"
        case ExecutionFee = "24"
        case OrderEntryFee = "25"
        case OrderModificationFee = "26"
        case OrdersCancellationFee = "27"
        case MarketDataAccessFee = "28"
        case MarketDataTerminalFee = "29"
        case MarketDataVolumeFee = "30"
        case ClearingFee = "31"
        case SettlementFee = "32"
        case Rebates = "33"
        case Discounts = "34"
        case Payments = "35"
        case NonMonetaryPayments = "36"
    }

    public enum PrevClosePx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            140
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ResetSeqNumFlag : String {

        public static var tag: Int {
            141
        }

        case No = "N"
        case Yes = "Y"
    }

    public enum SenderLocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            142
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetLocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            143
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OnBehalfOfLocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            144
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliverToLocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            145
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRelatedSym : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            146
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Subject : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            147
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Headline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            148
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum URLLink : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            149
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExecType : String {

        public static var tag: Int {
            150
        }

        case New = "0"
        case DoneForDay = "3"
        case Canceled = "4"
        case Replaced = "5"
        case PendingCancel = "6"
        case Stopped = "7"
        case Rejected = "8"
        case Suspended = "9"
        case PendingNew = "A"
        case Calculated = "B"
        case Expired = "C"
        case Restated = "D"
        case PendingReplace = "E"
        case Trade = "F"
        case TradeCorrect = "G"
        case TradeCancel = "H"
        case OrderStatus = "I"
        case TradeInAClearingHold = "J"
        case TradeHasBeenReleasedToClearing = "K"
        case TriggeredOrActivatedBySystem = "L"
        case Locked = "M"
        case Released = "N"
    }

    public enum LeavesQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            151
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashOrderQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            152
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocAvgPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            153
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocNetMoney : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            154
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlCurrFxRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            155
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlCurrFxRateCalc : String {

        public static var tag: Int {
            156
        }

        case Multiply = "M"
        case Divide = "D"
    }

    public enum NumDaysInterest : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            157
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AccruedInterestRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            158
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AccruedInterestAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            159
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstMode : String {

        public static var tag: Int {
            160
        }

        case Default = "0"
        case StandingInstructionsProvided = "1"
        case SpecificAllocationAccountOverriding = "2"
        case SpecificAllocationAccountStanding = "3"
        case SpecificOrderForASingleAccount = "4"
        case RequestReject = "5"
    }

    public enum AllocText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            161
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            162
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstTransType : String {

        public static var tag: Int {
            163
        }

        case New = "N"
        case Cancel = "C"
        case Replace = "R"
        case Restate = "T"
    }

    public enum EmailThreadID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            164
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstSource : String {

        public static var tag: Int {
            165
        }

        case BrokerCredit = "1"
        case Institution = "2"
        case Investor = "3"
    }

    public enum SecurityType : String {

        public static var tag: Int {
            167
        }

        case USTreasuryNoteOld = "UST"
        case USTreasuryBillOld = "USTB"
        case EuroSupranationalCoupons = "EUSUPRA"
        case FederalAgencyCoupon = "FAC"
        case FederalAgencyDiscountNote = "FADN"
        case PrivateExportFunding = "PEF"
        case USDSupranationalCoupons = "SUPRA"
        case CorporateBond = "CORP"
        case CorporatePrivatePlacement = "CPP"
        case ConvertibleBond = "CB"
        case DualCurrency = "DUAL"
        case EuroCorporateBond = "EUCORP"
        case EuroCorporateFloatingRateNotes = "EUFRN"
        case USCorporateFloatingRateNotes = "FRN"
        case IndexedLinked = "XLINKD"
        case StructuredNotes = "STRUCT"
        case YankeeCorporateBond = "YANK"
        case ForeignExchangeContract = "FOR"
        case NonDeliverableForward = "FXNDF"
        case FXSpot = "FXSPOT"
        case FXForward = "FXFWD"
        case FXSwap = "FXSWAP"
        case NonDeliverableSwap = "FXNDS"
        case Cap = "CAP"
        case CreditDefaultSwap = "CDS"
        case Collar = "CLLR"
        case CommoditySwap = "CMDTYSWAP"
        case Exotic = "EXOTIC"
        case OptionsOnCombo = "OOC"
        case Floor = "FLR"
        case FRA = "FRA"
        case Future = "FUT"
        case DerivativeForward = "FWD"
        case InterestRateSwap = "IRS"
        case TotalReturnSwap = "TRS"
        case LoanLease = "LOANLEASE"
        case OptionsOnFutures = "OOF"
        case OptionsOnPhysical = "OOP"
        case Option = "OPT"
        case SpotForward = "SPOTFWD"
        case SwapOption = "SWAPTION"
        case Transmission = "XMISSION"
        case Index = "INDEX"
        case BondBasket = "BDBSKT"
        case ContractForDifference = "CFD"
        case CorrelationSwap = "CRLTNSWAP"
        case DiviendSwap = "DVDNDSWAP"
        case EquityBasket = "EQBSKT"
        case EquityForward = "EQFWD"
        case ReturnSwap = "RTRNSWAP"
        case VarianceSwap = "VARSWAP"
        case PortfolioSwaps = "PRTFLIOSWAP"
        case FuturesOnASwap = "FUTSWAP"
        case ForwardsOnASwap = "FWDSWAP "
        case ForwardFreightAgreement = "FWDFRTAGMT "
        case SpreadBetting = "SPREADBET"
        case ExchangeTradedCommodity = "ETC"
        case CommonStock = "CS"
        case PreferredStock = "PS"
        case DepositoryReceipts = "DR"
        case Repurchase = "REPO"
        case Forward = "FORWARD"
        case BuySellback = "BUYSELL"
        case SecuritiesLoan = "SECLOAN"
        case SecuritiesPledge = "SECPLEDGE"
        case DeliveryVersusPledge = "DVPLDG"
        case CollateralBasket = "COLLBSKT"
        case StructuredFinanceProduct = "SFP"
        case MarginLoan = "MRGNLOAN"
        case BradyBond = "BRADY"
        case CanadianTreasuryNotes = "CAN"
        case CanadianTreasuryBills = "CTB"
        case EuroSovereigns = "EUSOV"
        case CanadianProvincialBonds = "PROV"
        case TreasuryBill = "TB"
        case USTreasuryBond = "TBOND"
        case InterestStripFromAnyBondOrNote = "TINT"
        case USTreasuryBill = "TBILL"
        case TreasuryInflationProtectedSecurities = "TIPS"
        case PrincipalStripOfACallableBondOrNote = "TCAL"
        case PrincipalStripFromANonCallableBondOrNote = "TPRN"
        case USTreasuryNote = "TNOTE"
        case TermLoan = "TERM"
        case RevolverLoan = "RVLV"
        case Revolver = "RVLVTRM"
        case BridgeLoan = "BRIDGE"
        case LetterOfCredit = "LOFC"
        case SwingLineFacility = "SWING"
        case DebtorInPossession = "DINP"
        case Defaulted = "DEFLTED"
        case Withdrawn = "WITHDRN"
        case Replaced = "REPLACD"
        case Matured = "MATURED"
        case Amended = "AMENDED"
        case Retired = "RETIRED"
        case BankersAcceptance = "BA"
        case BankDepositoryNote = "BDN"
        case BankNotes = "BN"
        case BillOfExchanges = "BOX"
        case CanadianMoneyMarkets = "CAMM"
        case CertificateOfDeposit = "CD"
        case CallLoans = "CL"
        case CommercialPaper = "CP"
        case DepositNotes = "DN"
        case EuroCertificateOfDeposit = "EUCD"
        case EuroCommercialPaper = "EUCP"
        case LiquidityNote = "LQN"
        case MediumTermNotes = "MTN"
        case Overnight = "ONITE"
        case PromissoryNote = "PN"
        case ShortTermLoanNote = "STN"
        case PlazosFijos = "PZFJ"
        case SecuredLiquidityNote = "SLQN"
        case TimeDeposit = "TD"
        case TermLiquidityNote = "TLQN"
        case ExtendedCommNote = "XCN"
        case YankeeCertificateOfDeposit = "YCD"
        case AssetBackedSecurities = "ABS"
        case CanadianMortgageBonds = "CMB"
        case Corp = "CMBS"
        case CollateralizedMortgageObligation = "CMO"
        case IOETTEMortgage = "IET"
        case MortgageBackedSecurities = "MBS"
        case MortgageInterestOnly = "MIO"
        case MortgagePrincipalOnly = "MPO"
        case MortgagePrivatePlacement = "MPP"
        case MiscellaneousPassThrough = "MPT"
        case Pfandbriefe = "PFAND"
        case ToBeAnnounced = "TBA"
        case OtherAnticipationNotes = "AN"
        case CertificateOfObligation = "COFO"
        case CertificateOfParticipation = "COFP"
        case GeneralObligationBonds = "GO"
        case MandatoryTender = "MT"
        case RevenueAnticipationNote = "RAN"
        case RevenueBonds = "REV"
        case SpecialAssessment = "SPCLA"
        case SpecialObligation = "SPCLO"
        case SpecialTax = "SPCLT"
        case TaxAnticipationNote = "TAN"
        case TaxAllocation = "TAXA"
        case TaxExemptCommercialPaper = "TECP"
        case TaxableMunicipalCP = "TMCP"
        case TaxRevenueAnticipationNote = "TRAN"
        case VariableRateDemandNote = "VRDN"
        case Warrant = "WAR"
        case MutualFund = "MF"
        case MultilegInstrument = "MLEG"
        case NoSecurityType = "NONE"
        case Wildcard = "?"
        case Cash = "CASH"
        case Other = "Other"
        case ExchangeTradedNote = "ETN"
        case SecuritizedDerivative = "SECDERIV"
    }

    public enum EffectiveTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            168
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StandInstDbType : String {

        public static var tag: Int {
            169
        }

        case Other = "0"
        case DTCSID = "1"
        case ThomsonALERT = "2"
        case AGlobalCustodian = "3"
        case AccountNet = "4"
    }

    public enum StandInstDbName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            170
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StandInstDbID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            171
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlDeliveryType : String {

        public static var tag: Int {
            172
        }

        case Versus = "0"
        case Free = "1"
        case TriParty = "2"
        case HoldInCustody = "3"
    }

    public enum BidSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            188
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            189
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            190
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            191
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderQty2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            192
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlDate2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            193
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            194
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            195
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocLinkID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            196
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocLinkType : String {

        public static var tag: Int {
            197
        }

        case FXNetting = "0"
        case FXSwap = "1"
    }

    public enum SecondaryOrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            198
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoIOIQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            199
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            200
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PutOrCall : String {

        public static var tag: Int {
            201
        }

        case Put = "0"
        case Call = "1"
        case Other = "2"
        case Chooser = "3"
    }

    public enum StrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            202
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CoveredOrUncovered : String {

        public static var tag: Int {
            203
        }

        case Covered = "0"
        case Uncovered = "1"
    }

    public enum OptAttribute : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            206
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            207
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NotifyBrokerOfCredit : String {

        public static var tag: Int {
            208
        }

        case DetailsShouldNotBeCommunicated = "N"
        case DetailsShouldBeCommunicated = "Y"
    }

    public enum AllocHandlInst : String {

        public static var tag: Int {
            209
        }

        case Match = "1"
        case Forward = "2"
        case ForwardAndMatch = "3"
        case AutoClaimGiveUp = "4"
    }

    public enum MaxShow : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            210
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PegOffsetValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            211
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum XmlDataLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            212
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum XmlData : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            213
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            214
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRoutingIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            215
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RoutingType : String {

        public static var tag: Int {
            216
        }

        case TargetFirm = "1"
        case TargetList = "2"
        case BlockFirm = "3"
        case BlockList = "4"
        case TargetPerson = "5"
        case BlockPerson = "6"
    }

    public enum RoutingID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            217
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Spread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            218
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BenchmarkCurveCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            220
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BenchmarkCurveName : String {

        public static var tag: Int {
            221
        }

        case EONIA = "EONIA"
        case EUREPO = "EUREPO"
        case Euribor = "Euribor"
        case FutureSWAP = "FutureSWAP"
        case LIBID = "LIBID"
        case LIBOR = "LIBOR"
        case MuniAAA = "MuniAAA"
        case OTHER = "OTHER"
        case Pfandbriefe = "Pfandbriefe"
        case SONIA = "SONIA"
        case SWAP = "SWAP"
        case Treasury = "Treasury"
        case FedFundRateEffective = "FEDEFF"
        case FedOpen = "FEDOPEN"
        case EURIBOR = "EURIBOR"
        case AUBSW = "AUBSW"
        case BUBOR = "BUBOR"
        case CDOR = "CDOR"
        case CIBOR = "CIBOR"
        case EONIASWAP = "EONIASWAP"
        case ESTR = "ESTR"
        case EURODOLLAR = "EURODOLLAR"
        case EUROSWISS = "EUROSWISS"
        case GCFREPO = "GCFREPO"
        case ISDAFIX = "ISDAFIX"
        case JIBAR = "JIBAR"
        case MOSPRIM = "MOSPRIM"
        case NIBOR = "NIBOR"
        case PRIBOR = "PRIBOR"
        case SOFR = "SOFR"
        case STIBOR = "STIBOR"
        case TELBOR = "TELBOR"
        case TIBOR = "TIBOR"
        case WIBOR = "WIBOR"
    }

    public enum BenchmarkCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            222
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            223
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CouponPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            224
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IssueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            225
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RepurchaseTerm : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            226
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RepurchaseRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            227
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Factor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            228
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeOriginationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            229
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            230
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContractMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            231
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStipulations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            232
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StipulationType : String {

        public static var tag: Int {
            233
        }

        case AlternativeMinimumTax = "AMT"
        case AutoReinvestment = "AUTOREINV"
        case BankQualified = "BANKQUAL"
        case BargainConditions = "BGNCON"
        case CouponRange = "COUPON"
        case ISOCurrencyCode = "CURRENCY"
        case CustomStart = "CUSTOMDATE"
        case Geographics = "GEOG"
        case ValuationDiscount = "HAIRCUT"
        case Insured = "INSURED"
        case IssueDate = "ISSUE"
        case Issuer = "ISSUER"
        case IssueSizeRange = "ISSUESIZE"
        case LookbackDays = "LOOKBACK"
        case ExplicitLotIdentifier = "LOT"
        case LotVariance = "LOTVAR"
        case MaturityYearAndMonth = "MAT"
        case MaturityRange = "MATURITY"
        case MaximumSubstitutions = "MAXSUBS"
        case MinimumDenomination = "MINDNOM"
        case MinimumIncrement = "MININCR"
        case MinimumQuantity = "MINQTY"
        case PaymentFrequency = "PAYFREQ"
        case NumberOfPieces = "PIECES"
        case PoolsMaximum = "PMAX"
        case PoolsPerLot = "PPL"
        case PoolsPerMillion = "PPM"
        case PoolsPerTrade = "PPT"
        case PriceRange = "PRICE"
        case PricingFrequency = "PRICEFREQ"
        case ProductionYear = "PROD"
        case CallProtection = "PROTECT"
        case Purpose = "PURPOSE"
        case BenchmarkPriceSource = "PXSOURCE"
        case RatingSourceAndRange = "RATING"
        case TypeOfRedemption = "REDEMPTION"
        case Restricted = "RESTRICTED"
        case MarketSector = "SECTOR"
        case SecurityTypeIncludedOrExcluded = "SECTYPE"
        case Structure = "STRUCT"
        case SubstitutionsFrequency = "SUBSFREQ"
        case SubstitutionsLeft = "SUBSLEFT"
        case FreeformText = "TEXT"
        case TradeVariance = "TRDVAR"
        case WeightedAverageCoupon = "WAC"
        case WeightedAverageLifeCoupon = "WAL"
        case WeightedAverageLoanAge = "WALA"
        case WeightedAverageMaturity = "WAM"
        case WholePool = "WHOLE"
        case YieldRange = "YIELD"
        case OriginalAmount = "ORIGAMT"
        case PoolEffectiveDate = "POOLEFFDT"
        case PoolInitialFactor = "POOLINITFCTR"
        case Tranche = "TRANCHE"
        case Substitution = "SUBSTITUTION"
        case MULTEXCHFLLBCK = "MULTEXCHFLLBCK"
        case COMPSECFLLBCK = "COMPSECFLLBCK"
        case LOCLJRSDCTN = "LOCLJRSDCTN"
        case RELVJRSDCTN = "RELVJRSDCTN"
        case IncurredRecovery = "INCURRCVY"
        case AdditionalTerm = "ADDTRM"
        case ModifiedEquityDelivery = "MODEQTYDLVY"
        case NoReferenceOblication = "NOREFOBLIG"
        case UnknownReferenceObligation = "UNKREFOBLIG"
        case AllGuarantees = "ALLGUARANTEES"
        case ReferencePrice = "REFPX"
        case ReferencePolicy = "REFPOLICY"
        case SecuredList = "SECRDLIST"
        case AverageFICOScore = "AVFICO"
        case AverageLoanSize = "AVSIZE"
        case MaximumLoanBalance = "MAXBAL"
        case PoolIdentifier = "POOL"
        case TypeOfRollTrade = "ROLLTYPE"
        case ReferenceToRollingOrClosingTrade = "REFTRADE"
        case PrincipalOfRollingOrClosingTrade = "REFPRIN"
        case InterestOfRollingOrClosingTrade = "REFINT"
        case AvailableOfferQuantityToBeShownToTheStreet = "AVAILQTY"
        case BrokerCredit = "BROKERCREDIT"
        case OfferPriceToBeShownToInternalBrokers = "INTERNALPX"
        case OfferQuantityToBeShownToInternalBrokers = "INTERNALQTY"
        case TheMinimumResidualOfferQuantity = "LEAVEQTY"
        case MaximumOrderSize = "MAXORDQTY"
        case OrderQuantityIncrement = "ORDRINCR"
        case PrimaryOrSecondaryMarketIndicator = "PRIMARY"
        case BrokerSalesCreditOverride = "SALESCREDITOVR"
        case TraderCredit = "TRADERCREDIT"
        case DiscountRate = "DISCOUNT"
        case YieldToMaturity = "YTM"
        case InterestPayoffOfRollingOrAmendingTrade = "PAYOFF"
        case AbsolutePrepaymentSpeed = "ABS"
        case ConstantPrepaymentPenalty = "CPP"
        case ConstantPrepaymentRate = "CPR"
        case ConstantPrepaymentYield = "CPY"
        case FinalCPROfHomeEquityPrepaymentCurve = "HEP"
        case PercentOfManufacturedHousingPrepaymentCurve = "MHP"
        case MonthlyPrepaymentRate = "MPR"
        case PercentOfProspectusPrepaymentCurve = "PPC"
        case PercentOfBMAPrepaymentCurve = "PSA"
        case SingleMonthlyMortality = "SMM"
    }

    public enum StipulationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            234
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum YieldType : String {

        public static var tag: Int {
            235
        }

        case AfterTaxYield = "AFTERTAX"
        case AnnualYield = "ANNUAL"
        case YieldAtIssue = "ATISSUE"
        case YieldToAverageMaturity = "AVGMATURITY"
        case BookYield = "BOOK"
        case YieldToNextCall = "CALL"
        case YieldChangeSinceClose = "CHANGE"
        case ClosingYield = "CLOSE"
        case CompoundYield = "COMPOUND"
        case CurrentYield = "CURRENT"
        case GvntEquivalentYield = "GOVTEQUIV"
        case TrueGrossYield = "GROSS"
        case YieldWithInflationAssumption = "INFLATION"
        case InverseFloaterBondYield = "INVERSEFLOATER"
        case MostRecentClosingYield = "LASTCLOSE"
        case ClosingYieldMostRecentMonth = "LASTMONTH"
        case ClosingYieldMostRecentQuarter = "LASTQUARTER"
        case ClosingYieldMostRecentYear = "LASTYEAR"
        case YieldToLongestAverageLife = "LONGAVGLIFE"
        case MarkToMarketYield = "MARK"
        case YieldToMaturity = "MATURITY"
        case YieldToNextRefund = "NEXTREFUND"
        case OpenAverageYield = "OPENAVG"
        case PreviousCloseYield = "PREVCLOSE"
        case ProceedsYield = "PROCEEDS"
        case YieldToNextPut = "PUT"
        case SemiAnnualYield = "SEMIANNUAL"
        case YieldToShortestAverageLife = "SHORTAVGLIFE"
        case SimpleYield = "SIMPLE"
        case TaxEquivalentYield = "TAXEQUIV"
        case YieldToTenderDate = "TENDER"
        case TrueYield = "TRUE"
        case YieldValueOf32nds = "VALUE1_32"
        case YieldToWorst = "WORST"
    }

    public enum Yield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            236
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalTakedown : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            237
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Concession : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            238
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RepoCollateralSecurityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            239
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RedemptionDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            240
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCouponPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            241
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingIssueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            242
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRepoCollateralSecurityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            243
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRepurchaseTerm : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            244
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRepurchaseRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            245
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            246
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRedemptionDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            247
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCouponPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            248
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIssueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            249
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegRepoCollateralSecurityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            250
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegRepurchaseTerm : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            251
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegRepurchaseRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            252
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            253
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegRedemptionDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            254
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CreditRating : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            255
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCreditRating : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            256
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCreditRating : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            257
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradedFlatSwitch : String {

        public static var tag: Int {
            258
        }

        case NotTradedFlat = "N"
        case TradedFlat = "Y"
    }

    public enum BasisFeatureDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            259
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BasisFeaturePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            260
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            262
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SubscriptionRequestType : String {

        public static var tag: Int {
            263
        }

        case Snapshot = "0"
        case SnapshotAndUpdates = "1"
        case DisablePreviousSnapshot = "2"
    }

    public enum MarketDepth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            264
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDUpdateType : String {

        public static var tag: Int {
            265
        }

        case FullRefresh = "0"
        case IncrementalRefresh = "1"
    }

    public enum AggregatedBook : String {

        public static var tag: Int {
            266
        }

        case BookEntriesToBeAggregated = "Y"
        case BookEntriesShouldNotBeAggregated = "N"
    }

    public enum NoMDEntryTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            267
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMDEntries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            268
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntryType : String {

        public static var tag: Int {
            269
        }

        case Bid = "0"
        case Offer = "1"
        case Trade = "2"
        case IndexValue = "3"
        case OpeningPrice = "4"
        case ClosingPrice = "5"
        case SettlementPrice = "6"
        case TradingSessionHighPrice = "7"
        case TradingSessionLowPrice = "8"
        case TradingSessionVWAPPrice = "9"
        case Imbalance = "A"
        case TradeVolume = "B"
        case OpenInterest = "C"
        case CompositeUnderlyingPrice = "D"
        case SimulatedSellPrice = "E"
        case SimulatedBuyPrice = "F"
        case MarginRate = "G"
        case MidPrice = "H"
        case EmptyBook = "J"
        case SettleHighPrice = "K"
        case SettleLowPrice = "L"
        case PriorSettlePrice = "M"
        case SessionHighBid = "N"
        case SessionLowOffer = "O"
        case EarlyPrices = "P"
        case AuctionClearingPrice = "Q"
        case SwapValueFactor = "S"
        case DailyValueAdjustmentForLongPositions = "R"
        case CumulativeValueAdjustmentForLongPositions = "T"
        case DailyValueAdjustmentForShortPositions = "U"
        case CumulativeValueAdjustmentForShortPositions = "V"
        case FixingPrice = "W"
        case CashRate = "X"
        case RecoveryRate = "Y"
        case RecoveryRateForLong = "Z"
        case RecoveryRateForShort = "a"
        case MarketBid = "b"
        case MarketOffer = "c"
        case ShortSaleMinPrice = "d"
        case PreviousClosingPrice = "e"
    }

    public enum MDEntryPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            270
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntrySize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            271
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntryDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            272
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntryTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            273
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TickDirection : String {

        public static var tag: Int {
            274
        }

        case PlusTick = "0"
        case ZeroPlusTick = "1"
        case MinusTick = "2"
        case ZeroMinusTick = "3"
    }

    public enum MDMkt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            275
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteCondition : String {

        public static var tag: Int {
            276
        }

        case Open = "A"
        case Closed = "B"
        case ExchangeBest = "C"
        case ConsolidatedBest = "D"
        case Locked = "E"
        case Crossed = "F"
        case Depth = "G"
        case FastTrading = "H"
        case NonFirm = "I"
        case Manual = "L"
        case OutrightPrice = "J"
        case ImpliedPrice = "K"
        case DepthOnOffer = "M"
        case DepthOnBid = "N"
        case Closing = "O"
        case NewsDissemination = "P"
        case TradingRange = "Q"
        case OrderInflux = "R"
        case DueToRelated = "S"
        case NewsPending = "T"
        case AdditionalInfo = "U"
        case AdditionalInfoDueToRelated = "V"
        case Resume = "W"
        case ViewOfCommon = "X"
        case VolumeAlert = "Y"
        case OrderImbalance = "Z"
        case EquipmentChangeover = "a"
        case NoOpen = "b"
        case RegularETH = "c"
        case AutomaticExecution = "d"
        case AutomaticExecutionETH = "e"
        case FastMarketETH = "f "
        case InactiveETH = "g"
        case Rotation = "h"
        case RotationETH = "i"
        case Halt = "j"
        case HaltETH = "k"
        case DueToNewsDissemination = "l"
        case DueToNewsPending = "m"
        case TradingResume = "n"
        case OutOfSequence = "o"
        case BidSpecialist = "p"
        case OfferSpecialist = "q"
        case BidOfferSpecialist = "r"
        case EndOfDaySAM = "s"
        case ForbiddenSAM = "t"
        case FrozenSAM = "u"
        case PreOpeningSAM = "v"
        case OpeningSAM = "w"
        case OpenSAM = "x"
        case SurveillanceSAM = "y"
        case SuspendedSAM = "z"
        case ReservedSAM = "0"
        case NoActiveSAM = "1"
        case Restricted = "2"
        case RestOfBookVWAP = "3"
        case BetterPricesInConditionalOrders = "4"
        case MedianPrice = "5"
        case FullCurve = "6"
        case FlatCurve = "7"
    }

    public enum TradeCondition : String {

        public static var tag: Int {
            277
        }

        case Cash = "A"
        case AveragePriceTrade = "B"
        case CashTrade = "C"
        case NextDay = "D"
        case Opening = "E"
        case IntradayTradeDetail = "F"
        case Rule127Trade = "G"
        case Rule155Trade = "H"
        case SoldLast = "I"
        case NextDayTrade = "J"
        case Opened = "K"
        case Seller = "L"
        case Sold = "M"
        case StoppedStock = "N"
        case ImbalanceMoreBuyers = "P"
        case ImbalanceMoreSellers = "Q"
        case OpeningPrice = "R"
        case BargainCondition = "S"
        case ConvertedPriceIndicator = "T"
        case ExchangeLast = "U"
        case FinalPriceOfSession = "V"
        case ExPit = "W"
        case Crossed = "X"
        case TradesResultingFromManual = "Y"
        case TradesResultingFromIntermarketSweep = "Z"
        case VolumeOnly = "a"
        case DirectPlus = "b"
        case Acquisition = "c"
        case Bunched = "d"
        case Distribution = "e"
        case BunchedSale = "f"
        case SplitTrade = "g"
        case CancelStopped = "h"
        case CancelETH = "i"
        case CancelStoppedETH = "j"
        case OutOfSequenceETH = "k"
        case CancelLastETH = "l"
        case SoldLastSaleETH = "m"
        case CancelLast = "n"
        case SoldLastSale = "o"
        case CancelOpen = "p"
        case CancelOpenETH = "q"
        case OpenedSaleETH = "r"
        case CancelOnly = "s"
        case CancelOnlyETH = "t"
        case LateOpenETH = "u"
        case AutoExecutionETH = "v"
        case Reopen = "w"
        case ReopenETH = "x"
        case Adjusted = "y"
        case AdjustedETH = "z"
        case Spread = "AA"
        case SpreadETH = "AB"
        case Straddle = "AC"
        case StraddleETH = "AD"
        case Stopped = "AE"
        case StoppedETH = "AF"
        case RegularETH = "AG"
        case Combo = "AH"
        case ComboETH = "AI"
        case OfficialClosingPrice = "AJ"
        case PriorReferencePrice = "AK"
        case Cancel = "0"
        case StoppedSoldLast = "AL"
        case StoppedOutOfSequence = "AM"
        case OfficalClosingPrice = "AN"
        case CrossedOld = "AO"
        case FastMarket = "AP"
        case AutomaticExecution = "AQ"
        case FormT = "AR"
        case BasketIndex = "AS"
        case BurstBasket = "AT"
        case TradeThroughExempt = "AU"
        case QuoteSpread = "AV"
        case LastAuctionPrice = "AW"
        case HighPrice = "AX"
        case LowPrice = "AY"
        case SystematicInternaliser = "AZ"
        case AwayMarket = "BA"
        case MidpointPrice = "BB"
        case TradedBeforeIssueDate = "BC"
        case PreviousClosingPrice = "BD"
        case NationalBestBidOffer = "BE"
        case ImpliedTrade = "1"
        case MarketplaceEnteredTrade = "2"
        case MultiAssetClassMultilegTrade = "3"
        case MultilegToMultilegTrade = "4"
        case ShortSaleMinPrice = "5"
        case Benchmark = "6"
    }

    public enum MDEntryID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            278
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDUpdateAction : String {

        public static var tag: Int {
            279
        }

        case New = "0"
        case Change = "1"
        case Delete = "2"
        case DeleteThru = "3"
        case DeleteFrom = "4"
        case Overlay = "5"
    }

    public enum MDEntryRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            280
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDReqRejReason : String {

        public static var tag: Int {
            281
        }

        case UnknownSymbol = "0"
        case DuplicateMDReqID = "1"
        case InsufficientBandwidth = "2"
        case InsufficientPermissions = "3"
        case UnsupportedSubscriptionRequestType = "4"
        case UnsupportedMarketDepth = "5"
        case UnsupportedMDUpdateType = "6"
        case UnsupportedAggregatedBook = "7"
        case UnsupportedMDEntryType = "8"
        case UnsupportedTradingSessionID = "9"
        case UnsupportedScope = "A"
        case UnsupportedOpenCloseSettleFlag = "B"
        case UnsupportedMDImplicitDelete = "C"
        case InsufficientCredit = "D"
    }

    public enum MDEntryOriginator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            282
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            283
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeskID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            284
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeleteReason : String {

        public static var tag: Int {
            285
        }

        case Cancellation = "0"
        case Error = "1"
    }

    public enum OpenCloseSettlFlag : String {

        public static var tag: Int {
            286
        }

        case DailyOpen = "0"
        case SessionOpen = "1"
        case DeliverySettlementEntry = "2"
        case ExpectedEntry = "3"
        case EntryFromPreviousBusinessDay = "4"
        case TheoreticalPriceValue = "5"
    }

    public enum SellerDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            287
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntryBuyer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            288
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntrySeller : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            289
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntryPositionNo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            290
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FinancialStatus : String {

        public static var tag: Int {
            291
        }

        case Bankrupt = "1"
        case PendingDelisting = "2"
        case Restricted = "3"
    }

    public enum CorporateAction : String {

        public static var tag: Int {
            292
        }

        case ExDividend = "A"
        case ExDistribution = "B"
        case ExRights = "C"
        case New = "D"
        case ExInterest = "E"
        case CashDividend = "F"
        case StockDividend = "G"
        case NonIntegerStockSplit = "H"
        case ReverseStockSplit = "I"
        case StandardIntegerStockSplit = "J"
        case PositionConsolidation = "K"
        case LiquidationReorganization = "L"
        case MergerReorganization = "M"
        case RightsOffering = "N"
        case ShareholderMeeting = "O"
        case Spinoff = "P"
        case TenderOffer = "Q"
        case Warrant = "R"
        case SpecialAction = "S"
        case SymbolConversion = "T"
        case CUSIP = "U"
        case LeapRollover = "V"
        case SuccessionEvent = "W"
    }

    public enum DefBidSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            293
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DefOfferSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            294
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoQuoteEntries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            295
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoQuoteSets : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            296
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteStatus : String {

        public static var tag: Int {
            297
        }

        case Accepted = "0"
        case CancelForSymbol = "1"
        case CanceledForSecurityType = "2"
        case CanceledForUnderlying = "3"
        case CanceledAll = "4"
        case Rejected = "5"
        case RemovedFromMarket = "6"
        case Expired = "7"
        case Query = "8"
        case QuoteNotFound = "9"
        case Pending = "10"
        case Pass = "11"
        case LockedMarketWarning = "12"
        case CrossMarketWarning = "13"
        case CanceledDueToLockMarket = "14"
        case CanceledDueToCrossMarket = "15"
        case Active = "16"
        case Canceled = "17"
        case UnsolicitedQuoteReplenishment = "18"
        case PendingEndTrade = "19"
        case TooLateToEnd = "20"
        case Traded = "21"
        case TradedAndRemoved = "22"
        case ContractTerminates = "23"
    }

    public enum QuoteCancelType : String {

        public static var tag: Int {
            298
        }

        case CancelForOneOrMoreSecurities = "1"
        case CancelForSecurityType = "2"
        case CancelForUnderlyingSecurity = "3"
        case CancelAllQuotes = "4"
        case CancelSpecifiedSingleQuote = "5"
        case CancelByTypeOfQuote = "6"
        case CancelForSecurityIssuer = "7"
        case CancelForIssuerOfUnderlyingSecurity = "8"
    }

    public enum QuoteEntryID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            299
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteRejectReason : String {

        public static var tag: Int {
            300
        }

        case UnknownSymbol = "1"
        case Exchange = "2"
        case QuoteRequestExceedsLimit = "3"
        case TooLateToEnter = "4"
        case UnknownQuote = "5"
        case DuplicateQuote = "6"
        case InvalidBid = "7"
        case InvalidPrice = "8"
        case NotAuthorizedToQuoteSecurity = "9"
        case PriceExceedsCurrentPriceBand = "10"
        case QuoteLocked = "11"
        case InvalidOrUnknownSecurityIssuer = "12"
        case InvalidOrUnknownIssuerOfUnderlyingSecurity = "13"
        case NotionalValueExceedsThreshold = "14"
        case PriceExceedsCurrentPriceBandDepr = "15"
        case ReferencePriceNotAvailable = "16"
        case InsufficientCreditLimit = "17"
        case ExceededClipSizeLimit = "18"
        case ExceededMaxNotionalOrderAmt = "19"
        case ExceededDV01PV01Limit = "20"
        case ExceededCS01Limit = "21"
        case Other = "99"
    }

    public enum QuoteResponseLevel : String {

        public static var tag: Int {
            301
        }

        case NoAcknowledgement = "0"
        case AcknowledgeOnlyNegativeOrErroneousQuotes = "1"
        case AcknowledgeEachQuoteMessage = "2"
        case SummaryAcknowledgement = "3"
    }

    public enum QuoteSetID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            302
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteRequestType : String {

        public static var tag: Int {
            303
        }

        case Manual = "1"
        case Automatic = "2"
        case ConfirmQuote = "3"
    }

    public enum TotNoQuoteEntries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            304
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityIDSource : String {

        public static var tag: Int {
            305
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            306
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            307
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            308
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            309
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityType : String {

        public static var tag: Int {
            310
        }

        case USTreasuryNoteOld = "UST"
        case USTreasuryBillOld = "USTB"
        case EuroSupranationalCoupons = "EUSUPRA"
        case FederalAgencyCoupon = "FAC"
        case FederalAgencyDiscountNote = "FADN"
        case PrivateExportFunding = "PEF"
        case USDSupranationalCoupons = "SUPRA"
        case CorporateBond = "CORP"
        case CorporatePrivatePlacement = "CPP"
        case ConvertibleBond = "CB"
        case DualCurrency = "DUAL"
        case EuroCorporateBond = "EUCORP"
        case EuroCorporateFloatingRateNotes = "EUFRN"
        case USCorporateFloatingRateNotes = "FRN"
        case IndexedLinked = "XLINKD"
        case StructuredNotes = "STRUCT"
        case YankeeCorporateBond = "YANK"
        case ForeignExchangeContract = "FOR"
        case NonDeliverableForward = "FXNDF"
        case FXSpot = "FXSPOT"
        case FXForward = "FXFWD"
        case FXSwap = "FXSWAP"
        case NonDeliverableSwap = "FXNDS"
        case Cap = "CAP"
        case CreditDefaultSwap = "CDS"
        case Collar = "CLLR"
        case CommoditySwap = "CMDTYSWAP"
        case Exotic = "EXOTIC"
        case OptionsOnCombo = "OOC"
        case Floor = "FLR"
        case FRA = "FRA"
        case Future = "FUT"
        case DerivativeForward = "FWD"
        case InterestRateSwap = "IRS"
        case TotalReturnSwap = "TRS"
        case LoanLease = "LOANLEASE"
        case OptionsOnFutures = "OOF"
        case OptionsOnPhysical = "OOP"
        case Option = "OPT"
        case SpotForward = "SPOTFWD"
        case SwapOption = "SWAPTION"
        case Transmission = "XMISSION"
        case Index = "INDEX"
        case BondBasket = "BDBSKT"
        case ContractForDifference = "CFD"
        case CorrelationSwap = "CRLTNSWAP"
        case DiviendSwap = "DVDNDSWAP"
        case EquityBasket = "EQBSKT"
        case EquityForward = "EQFWD"
        case ReturnSwap = "RTRNSWAP"
        case VarianceSwap = "VARSWAP"
        case PortfolioSwaps = "PRTFLIOSWAP"
        case FuturesOnASwap = "FUTSWAP"
        case ForwardsOnASwap = "FWDSWAP "
        case ForwardFreightAgreement = "FWDFRTAGMT "
        case SpreadBetting = "SPREADBET"
        case ExchangeTradedCommodity = "ETC"
        case CommonStock = "CS"
        case PreferredStock = "PS"
        case DepositoryReceipts = "DR"
        case Repurchase = "REPO"
        case Forward = "FORWARD"
        case BuySellback = "BUYSELL"
        case SecuritiesLoan = "SECLOAN"
        case SecuritiesPledge = "SECPLEDGE"
        case DeliveryVersusPledge = "DVPLDG"
        case CollateralBasket = "COLLBSKT"
        case StructuredFinanceProduct = "SFP"
        case MarginLoan = "MRGNLOAN"
        case BradyBond = "BRADY"
        case CanadianTreasuryNotes = "CAN"
        case CanadianTreasuryBills = "CTB"
        case EuroSovereigns = "EUSOV"
        case CanadianProvincialBonds = "PROV"
        case TreasuryBill = "TB"
        case USTreasuryBond = "TBOND"
        case InterestStripFromAnyBondOrNote = "TINT"
        case USTreasuryBill = "TBILL"
        case TreasuryInflationProtectedSecurities = "TIPS"
        case PrincipalStripOfACallableBondOrNote = "TCAL"
        case PrincipalStripFromANonCallableBondOrNote = "TPRN"
        case USTreasuryNote = "TNOTE"
        case TermLoan = "TERM"
        case RevolverLoan = "RVLV"
        case Revolver = "RVLVTRM"
        case BridgeLoan = "BRIDGE"
        case LetterOfCredit = "LOFC"
        case SwingLineFacility = "SWING"
        case DebtorInPossession = "DINP"
        case Defaulted = "DEFLTED"
        case Withdrawn = "WITHDRN"
        case Replaced = "REPLACD"
        case Matured = "MATURED"
        case Amended = "AMENDED"
        case Retired = "RETIRED"
        case BankersAcceptance = "BA"
        case BankDepositoryNote = "BDN"
        case BankNotes = "BN"
        case BillOfExchanges = "BOX"
        case CanadianMoneyMarkets = "CAMM"
        case CertificateOfDeposit = "CD"
        case CallLoans = "CL"
        case CommercialPaper = "CP"
        case DepositNotes = "DN"
        case EuroCertificateOfDeposit = "EUCD"
        case EuroCommercialPaper = "EUCP"
        case LiquidityNote = "LQN"
        case MediumTermNotes = "MTN"
        case Overnight = "ONITE"
        case PromissoryNote = "PN"
        case ShortTermLoanNote = "STN"
        case PlazosFijos = "PZFJ"
        case SecuredLiquidityNote = "SLQN"
        case TimeDeposit = "TD"
        case TermLiquidityNote = "TLQN"
        case ExtendedCommNote = "XCN"
        case YankeeCertificateOfDeposit = "YCD"
        case AssetBackedSecurities = "ABS"
        case CanadianMortgageBonds = "CMB"
        case Corp = "CMBS"
        case CollateralizedMortgageObligation = "CMO"
        case IOETTEMortgage = "IET"
        case MortgageBackedSecurities = "MBS"
        case MortgageInterestOnly = "MIO"
        case MortgagePrincipalOnly = "MPO"
        case MortgagePrivatePlacement = "MPP"
        case MiscellaneousPassThrough = "MPT"
        case Pfandbriefe = "PFAND"
        case ToBeAnnounced = "TBA"
        case OtherAnticipationNotes = "AN"
        case CertificateOfObligation = "COFO"
        case CertificateOfParticipation = "COFP"
        case GeneralObligationBonds = "GO"
        case MandatoryTender = "MT"
        case RevenueAnticipationNote = "RAN"
        case RevenueBonds = "REV"
        case SpecialAssessment = "SPCLA"
        case SpecialObligation = "SPCLO"
        case SpecialTax = "SPCLT"
        case TaxAnticipationNote = "TAN"
        case TaxAllocation = "TAXA"
        case TaxExemptCommercialPaper = "TECP"
        case TaxableMunicipalCP = "TMCP"
        case TaxRevenueAnticipationNote = "TRAN"
        case VariableRateDemandNote = "VRDN"
        case Warrant = "WAR"
        case MutualFund = "MF"
        case MultilegInstrument = "MLEG"
        case NoSecurityType = "NONE"
        case Wildcard = "?"
        case Cash = "CASH"
        case Other = "Other"
        case ExchangeTradedNote = "ETN"
        case SecuritizedDerivative = "SECDERIV"
    }

    public enum UnderlyingSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            311
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSymbolSfx : String {

        public static var tag: Int {
            312
        }

        case EUCPWithLumpSumInterest = "CD"
        case WhenIssued = "WI"
    }

    public enum UnderlyingMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            313
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPutOrCall : String {

        public static var tag: Int {
            315
        }

        case Put = "0"
        case Call = "1"
        case Other = "2"
        case Chooser = "3"
    }

    public enum UnderlyingStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            316
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptAttribute : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            317
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            318
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            320
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityRequestType : String {

        public static var tag: Int {
            321
        }

        case RequestSecurityIdentityAndSpecifications = "0"
        case RequestSecurityIdentityForSpecifications = "1"
        case RequestListSecurityTypes = "2"
        case RequestListSecurities = "3"
        case Symbol = "4"
        case SecurityTypeAndOrCFICode = "5"
        case Product = "6"
        case TradingSessionID = "7"
        case AllSecurities = "8"
        case MarketIDOrMarketID = "9"
    }

    public enum SecurityResponseID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            322
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityResponseType : String {

        public static var tag: Int {
            323
        }

        case AcceptAsIs = "1"
        case AcceptWithRevisions = "2"
        case ListOfSecurityTypesReturnedPerRequest = "3"
        case ListOfSecuritiesReturnedPerRequest = "4"
        case RejectSecurityProposal = "5"
        case CannotMatchSelectionCriteria = "6"
    }

    public enum SecurityStatusReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            324
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnsolicitedIndicator : String {

        public static var tag: Int {
            325
        }

        case MessageIsBeingSentAsAResultOfAPriorRequest = "N"
        case MessageIsBeingSentUnsolicited = "Y"
    }

    public enum SecurityTradingStatus : String {

        public static var tag: Int {
            326
        }

        case OpeningDelay = "1"
        case TradingHalt = "2"
        case Resume = "3"
        case NoOpen = "4"
        case PriceIndication = "5"
        case TradingRangeIndication = "6"
        case MarketImbalanceBuy = "7"
        case MarketImbalanceSell = "8"
        case MarketOnCloseImbalanceBuy = "9"
        case MarketOnCloseImbalanceSell = "10"
        case NoMarketImbalance = "12"
        case NoMarketOnCloseImbalance = "13"
        case ITSPreOpening = "14"
        case NewPriceIndication = "15"
        case TradeDisseminationTime = "16"
        case ReadyToTrade = "17"
        case NotAvailableForTrading = "18"
        case NotTradedOnThisMarket = "19"
        case UnknownOrInvalid = "20"
        case PreOpen = "21"
        case OpeningRotation = "22"
        case FastMarket = "23"
        case PreCross = "24"
        case Cross = "25"
        case PostClose = "26"
        case NoCancel = "27"
    }

    public enum HaltReason : String {

        public static var tag: Int {
            327
        }

        case NewsDissemination = "0"
        case OrderInflux = "1"
        case OrderImbalance = "2"
        case AdditionalInformation = "3"
        case NewsPending = "4"
        case EquipmentChangeover = "5"
    }

    public enum InViewOfCommon : String {

        public static var tag: Int {
            328
        }

        case HaltWasNotRelatedToAHaltOfTheCommonStock = "N"
        case HaltWasDueToCommonStockBeingHalted = "Y"
    }

    public enum DueToRelated : String {

        public static var tag: Int {
            329
        }

        case NotRelatedToSecurityHalt = "N"
        case RelatedToSecurityHalt = "Y"
    }

    public enum BuyVolume : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            330
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SellVolume : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            331
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HighPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            332
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LowPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            333
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Adjustment : String {

        public static var tag: Int {
            334
        }

        case Cancel = "1"
        case Error = "2"
        case Correction = "3"
    }

    public enum TradSesReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            335
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradingSessionID : String {

        public static var tag: Int {
            336
        }

        case Day = "1"
        case HalfDay = "2"
        case Morning = "3"
        case Afternoon = "4"
        case Evening = "5"
        case AfterHours = "6"
        case Holiday = "7"
    }

    public enum ContraTrader : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            337
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesMethod : String {

        public static var tag: Int {
            338
        }

        case Electronic = "1"
        case OpenOutcry = "2"
        case TwoParty = "3"
        case Voice = "4"
    }

    public enum TradSesMode : String {

        public static var tag: Int {
            339
        }

        case Testing = "1"
        case Simulated = "2"
        case Production = "3"
    }

    public enum TradSesStatus : String {

        public static var tag: Int {
            340
        }

        case Unknown = "0"
        case Halted = "1"
        case Open = "2"
        case Closed = "3"
        case PreOpen = "4"
        case PreClose = "5"
        case RequestRejected = "6"
    }

    public enum TradSesStartTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            341
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesOpenTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            342
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesPreCloseTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            343
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesCloseTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            344
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesEndTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            345
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NumberOfOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            346
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MessageEncoding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            347
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            348
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            349
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            350
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            351
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedListExecInstLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            352
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedListExecInst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            353
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            354
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            355
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedSubjectLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            356
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedSubject : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            357
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedHeadlineLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            358
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedHeadline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            359
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAllocTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            360
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAllocText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            361
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            362
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            363
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            364
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            365
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            366
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteSetValidUntilTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            367
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteEntryRejectReason : String {

        public static var tag: Int {
            368
        }

        case UnknownSymbol = "1"
        case Exchange = "2"
        case QuoteRequestExceedsLimit = "3"
        case TooLateToEnter = "4"
        case UnknownQuote = "5"
        case DuplicateQuote = "6"
        case InvalidBid = "7"
        case InvalidPrice = "8"
        case NotAuthorizedToQuoteSecurity = "9"
        case PriceExceedsCurrentPriceBand = "10"
        case QuoteLocked = "11"
        case InvalidOrUnknownSecurityIssuer = "12"
        case InvalidOrUnknownIssuerOfUnderlyingSecurity = "13"
        case NotionalValueExceedsThreshold = "14"
        case PriceExceedsCurrentPriceBandDepr = "15"
        case ReferencePriceNotAvailable = "16"
        case InsufficientCreditLimit = "17"
        case ExceededClipSizeLimit = "18"
        case ExceededMaxNotionalOrderAmt = "19"
        case ExceededDV01PV01Limit = "20"
        case ExceededCS01Limit = "21"
        case Other = "99"
    }

    public enum LastMsgSeqNumProcessed : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            369
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefTagID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            371
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefMsgType : String {

        public static var tag: Int {
            372
        }

        case Heartbeat = "0"
        case TestRequest = "1"
        case ResendRequest = "2"
        case Reject = "3"
        case SequenceReset = "4"
        case Logout = "5"
        case IOI = "6"
        case Advertisement = "7"
        case ExecutionReport = "8"
        case OrderCancelReject = "9"
        case Logon = "A"
        case News = "B"
        case Email = "C"
        case NewOrderSingle = "D"
        case NewOrderList = "E"
        case OrderCancelRequest = "F"
        case OrderCancelReplaceRequest = "G"
        case OrderStatusRequest = "H"
        case AllocationInstruction = "J"
        case ListCancelRequest = "K"
        case ListExecute = "L"
        case ListStatusRequest = "M"
        case ListStatus = "N"
        case AllocationInstructionAck = "P"
        case DontKnowTrade = "Q"
        case QuoteRequest = "R"
        case Quote = "S"
        case SettlementInstructions = "T"
        case MarketDataRequest = "V"
        case MarketDataSnapshotFullRefresh = "W"
        case MarketDataIncrementalRefresh = "X"
        case MarketDataRequestReject = "Y"
        case QuoteCancel = "Z"
        case QuoteStatusRequest = "a"
        case MassQuoteAck = "b"
        case SecurityDefinitionRequest = "c"
        case SecurityDefinition = "d"
        case SecurityStatusRequest = "e"
        case SecurityStatus = "f"
        case TradingSessionStatusRequest = "g"
        case TradingSessionStatus = "h"
        case MassQuote = "i"
        case BusinessMessageReject = "j"
        case BidRequest = "k"
        case BidResponse = "l"
        case ListStrikePrice = "m"
        case XMLnonFIX = "n"
        case RegistrationInstructions = "o"
        case RegistrationInstructionsResponse = "p"
        case OrderMassCancelRequest = "q"
        case OrderMassCancelReport = "r"
        case NewOrderCross = "s"
        case CrossOrderCancelReplaceRequest = "t"
        case CrossOrderCancelRequest = "u"
        case SecurityTypeRequest = "v"
        case SecurityTypes = "w"
        case SecurityListRequest = "x"
        case SecurityList = "y"
        case DerivativeSecurityListRequest = "z"
        case DerivativeSecurityList = "AA"
        case NewOrderMultileg = "AB"
        case MultilegOrderCancelReplace = "AC"
        case TradeCaptureReportRequest = "AD"
        case TradeCaptureReport = "AE"
        case OrderMassStatusRequest = "AF"
        case QuoteRequestReject = "AG"
        case RFQRequest = "AH"
        case QuoteStatusReport = "AI"
        case QuoteResponse = "AJ"
        case Confirmation = "AK"
        case PositionMaintenanceRequest = "AL"
        case PositionMaintenanceReport = "AM"
        case RequestForPositions = "AN"
        case RequestForPositionsAck = "AO"
        case PositionReport = "AP"
        case TradeCaptureReportRequestAck = "AQ"
        case TradeCaptureReportAck = "AR"
        case AllocationReport = "AS"
        case AllocationReportAck = "AT"
        case ConfirmationAck = "AU"
        case SettlementInstructionRequest = "AV"
        case AssignmentReport = "AW"
        case CollateralRequest = "AX"
        case CollateralAssignment = "AY"
        case CollateralResponse = "AZ"
        case CollateralReport = "BA"
        case CollateralInquiry = "BB"
        case NetworkCounterpartySystemStatusRequest = "BC"
        case NetworkCounterpartySystemStatusResponse = "BD"
        case UserRequest = "BE"
        case UserResponse = "BF"
        case CollateralInquiryAck = "BG"
        case ConfirmationRequest = "BH"
        case ContraryIntentionReport = "BO"
        case SecurityDefinitionUpdateReport = "BP"
        case SecurityListUpdateReport = "BK"
        case AdjustedPositionReport = "BL"
        case AllocationInstructionAlert = "BM"
        case ExecutionAck = "BN"
        case TradingSessionList = "BJ"
        case TradingSessionListRequest = "BI"
        case SettlementObligationReport = "BQ"
        case DerivativeSecurityListUpdateReport = "BR"
        case TradingSessionListUpdateReport = "BS"
        case MarketDefinitionRequest = "BT"
        case MarketDefinition = "BU"
        case MarketDefinitionUpdateReport = "BV"
        case ApplicationMessageRequest = "BW"
        case ApplicationMessageRequestAck = "BX"
        case ApplicationMessageReport = "BY"
        case OrderMassActionReport = "BZ"
        case OrderMassActionRequest = "CA"
        case UserNotification = "CB"
        case StreamAssignmentRequest = "CC"
        case StreamAssignmentReport = "CD"
        case StreamAssignmentReportACK = "CE"
        case PartyDetailsListRequest = "CF"
        case PartyDetailsListReport = "CG"
        case MarginRequirementInquiry = "CH"
        case MarginRequirementInquiryAck = "CI"
        case MarginRequirementReport = "CJ"
        case PartyDetailsListUpdateReport = "CK"
        case PartyRiskLimitsRequest = "CL"
        case PartyRiskLimitsReport = "CM"
        case SecurityMassStatusRequest = "CN"
        case SecurityMassStatus = "CO"
        case AccountSummaryReport = "CQ"
        case PartyRiskLimitsUpdateReport = "CR"
        case PartyRiskLimitsDefinitionRequest = "CS"
        case PartyRiskLimitsDefinitionRequestAck = "CT"
        case PartyEntitlementsRequest = "CU"
        case PartyEntitlementsReport = "CV"
        case QuoteAck = "CW"
        case PartyDetailsDefinitionRequest = "CX"
        case PartyDetailsDefinitionRequestAck = "CY"
        case PartyEntitlementsUpdateReport = "CZ"
        case PartyEntitlementsDefinitionRequest = "DA"
        case PartyEntitlementsDefinitionRequestAck = "DB"
        case TradeMatchReport = "DC"
        case TradeMatchReportAck = "DD"
        case PartyRiskLimitsReportAck = "DE"
        case PartyRiskLimitCheckRequest = "DF"
        case PartyRiskLimitCheckRequestAck = "DG"
        case PartyActionRequest = "DH"
        case PartyActionReport = "DI"
        case MassOrder = "DJ"
        case MassOrderAck = "DK"
        case PositionTransferInstruction = "DL"
        case PositionTransferInstructionAck = "DM"
        case PositionTransferReport = "DN"
        case MarketDataStatisticsRequest = "DO"
        case MarketDataStatisticsReport = "DP"
        case CollateralReportAck = "DQ"
        case MarketDataReport = "DR"
        case CrossRequest = "DS"
        case CrossRequestAck = "DT"
        case AllocationInstructionAlertRequest = "DU"
        case AllocationInstructionAlertRequestAck = "DV"
        case TradeAggregationRequest = "DW"
        case TradeAggregationReport = "DX"
        case PayManagementReport = "EA"
        case PayManagementReportAck = "EB"
        case PayManagementRequest = "DY"
        case PayManagementRequestAck = "DZ"
    }

    public enum SessionRejectReason : String {

        public static var tag: Int {
            373
        }

        case InvalidTagNumber = "0"
        case RequiredTagMissing = "1"
        case TagNotDefinedForThisMessageType = "2"
        case UndefinedTag = "3"
        case TagSpecifiedWithoutAValue = "4"
        case ValueIsIncorrect = "5"
        case IncorrectDataFormatForValue = "6"
        case DecryptionProblem = "7"
        case SignatureProblem = "8"
        case CompIDProblem = "9"
        case SendingTimeAccuracyProblem = "10"
        case InvalidMsgType = "11"
        case XMLValidationError = "12"
        case TagAppearsMoreThanOnce = "13"
        case TagSpecifiedOutOfRequiredOrder = "14"
        case RepeatingGroupFieldsOutOfOrder = "15"
        case IncorrectNumInGroupCountForRepeatingGroup = "16"
        case Non = "17"
        case Invalid = "18"
        case Other = "99"
    }

    public enum BidRequestTransType : String {

        public static var tag: Int {
            374
        }

        case Cancel = "C"
        case New = "N"
    }

    public enum ContraBroker : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            375
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplianceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            376
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SolicitedFlag : String {

        public static var tag: Int {
            377
        }

        case WasNotSolicited = "N"
        case WasSolicited = "Y"
    }

    public enum ExecRestatementReason : String {

        public static var tag: Int {
            378
        }

        case GTCorporateAction = "0"
        case GTRenewal = "1"
        case VerbalChange = "2"
        case RepricingOfOrder = "3"
        case BrokerOption = "4"
        case PartialDeclineOfOrderQty = "5"
        case CancelOnTradingHalt = "6"
        case CancelOnSystemFailure = "7"
        case Market = "8"
        case Canceled = "9"
        case WarehouseRecap = "10"
        case PegRefresh = "11"
        case CancelOnConnectionLoss = "12"
        case CancelOnLogout = "13"
        case AssignTimePriority = "14"
        case CancelledForTradePriceViolation = "15"
        case CancelledForCrossImbalance = "16"
        case Other = "99"
    }

    public enum BusinessRejectRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            379
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BusinessRejectReason : String {

        public static var tag: Int {
            380
        }

        case Other = "0"
        case UnknownID = "1"
        case UnknownSecurity = "2"
        case UnsupportedMessageType = "3"
        case ApplicationNotAvailable = "4"
        case ConditionallyRequiredFieldMissing = "5"
        case NotAuthorized = "6"
        case DeliverToFirmNotAvailableAtThisTime = "7"
        case ThrottleLimitExceeded = "8"
        case ThrottleLimitExceededSessionDisconnected = "9"
        case ThrottledMessagesRejectedOnRequest = "10"
        case InvalidPriceIncrement = "18"
    }

    public enum GrossTradeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            381
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoContraBrokers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            382
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaxMessageSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            383
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMsgTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            384
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MsgDirection : String {

        public static var tag: Int {
            385
        }

        case Receive = "R"
        case Send = "S"
    }

    public enum NoTradingSessions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            386
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalVolumeTraded : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            387
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DiscretionInst : String {

        public static var tag: Int {
            388
        }

        case RelatedToDisplayedPrice = "0"
        case RelatedToMarketPrice = "1"
        case RelatedToPrimaryPrice = "2"
        case RelatedToLocalPrimaryPrice = "3"
        case RelatedToMidpointPrice = "4"
        case RelatedToLastTradePrice = "5"
        case RelatedToVWAP = "6"
        case AveragePriceGuarantee = "7"
    }

    public enum DiscretionOffsetValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            389
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            390
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClientBidID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            391
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            392
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoRelatedSym : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            393
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidType : String {

        public static var tag: Int {
            394
        }

        case NonDisclosed = "1"
        case Disclosed = "2"
        case NoBiddingProcess = "3"
    }

    public enum NumTickets : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            395
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideValue1 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            396
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideValue2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            397
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoBidDescriptors : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            398
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidDescriptorType : String {

        public static var tag: Int {
            399
        }

        case Sector = "1"
        case Country = "2"
        case Index = "3"
    }

    public enum BidDescriptor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            400
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideValueInd : String {

        public static var tag: Int {
            401
        }

        case SideValue1 = "1"
        case SideValue2 = "2"
    }

    public enum LiquidityPctLow : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            402
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LiquidityPctHigh : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            403
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LiquidityValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            404
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EFPTrackingError : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            405
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FairValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            406
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OutsideIndexPct : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            407
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValueOfFutures : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            408
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LiquidityIndType : String {

        public static var tag: Int {
            409
        }

        case FiveDayMovingAverage = "1"
        case TwentyDayMovingAverage = "2"
        case NormalMarketSize = "3"
        case Other = "4"
    }

    public enum WtAverageLiquidity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            410
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExchangeForPhysical : String {

        public static var tag: Int {
            411
        }

        case False = "N"
        case True = "Y"
    }

    public enum OutMainCntryUIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            412
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CrossPercent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            413
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProgRptReqs : String {

        public static var tag: Int {
            414
        }

        case BuySideRequests = "1"
        case SellSideSends = "2"
        case RealTimeExecutionReports = "3"
    }

    public enum ProgPeriodInterval : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            415
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IncTaxInd : String {

        public static var tag: Int {
            416
        }

        case Net = "1"
        case Gross = "2"
    }

    public enum NumBidders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            417
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidTradeType : String {

        public static var tag: Int {
            418
        }

        case Agency = "A"
        case VWAPGuarantee = "G"
        case GuaranteedClose = "J"
        case RiskTrade = "R"
    }

    public enum BasisPxType : String {

        public static var tag: Int {
            419
        }

        case ClosingPriceAtMorningSession = "2"
        case ClosingPrice = "3"
        case CurrentPrice = "4"
        case SQ = "5"
        case VWAPThroughADay = "6"
        case VWAPThroughAMorningSession = "7"
        case VWAPThroughAnAfternoonSession = "8"
        case VWAPThroughADayExcept = "9"
        case VWAPThroughAMorningSessionExcept = "A"
        case VWAPThroughAnAfternoonSessionExcept = "B"
        case Strike = "C"
        case Open = "D"
        case Others = "Z"
    }

    public enum NoBidComponents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            420
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Country : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            421
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoStrikes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            422
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceType : String {

        public static var tag: Int {
            423
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum DayOrderQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            424
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DayCumQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            425
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DayAvgPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            426
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum GTBookingInst : String {

        public static var tag: Int {
            427
        }

        case BookOutAllTradesOnDayOfExecution = "0"
        case AccumulateUntilFilledOrExpired = "1"
        case AccumulateUntilVerballyNotifiedOtherwise = "2"
    }

    public enum NoStrikes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            428
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListStatusType : String {

        public static var tag: Int {
            429
        }

        case Ack = "1"
        case Response = "2"
        case Timed = "3"
        case ExecStarted = "4"
        case AllDone = "5"
        case Alert = "6"
    }

    public enum NetGrossInd : String {

        public static var tag: Int {
            430
        }

        case Net = "1"
        case Gross = "2"
    }

    public enum ListOrderStatus : String {

        public static var tag: Int {
            431
        }

        case InBiddingProcess = "1"
        case ReceivedForExecution = "2"
        case Executing = "3"
        case Cancelling = "4"
        case Alert = "5"
        case AllDone = "6"
        case Reject = "7"
    }

    public enum ExpireDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            432
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListExecInstType : String {

        public static var tag: Int {
            433
        }

        case Immediate = "1"
        case WaitForInstruction = "2"
        case SellDriven = "3"
        case BuyDrivenCashTopUp = "4"
        case BuyDrivenCashWithdraw = "5"
    }

    public enum CxlRejResponseTo : String {

        public static var tag: Int {
            434
        }

        case OrderCancelRequest = "1"
        case OrderCancelReplaceRequest = "2"
    }

    public enum UnderlyingCouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            435
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingContractMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            436
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContraTradeQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            437
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContraTradeTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            438
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LiquidityNumSecurities : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            441
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MultiLegReportingType : String {

        public static var tag: Int {
            442
        }

        case SingleSecurity = "1"
        case IndividualLegOfAMultiLegSecurity = "2"
        case MultiLegSecurity = "3"
    }

    public enum StrikeTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            443
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListStatusText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            444
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedListStatusTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            445
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedListStatusText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            446
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyIDSource : String {

        public static var tag: Int {
            447
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum PartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            448
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NetChgPrevDay : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            451
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyRole : String {

        public static var tag: Int {
            452
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            453
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            454
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            455
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityAltIDSource : String {

        public static var tag: Int {
            456
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum NoUnderlyingSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            457
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            458
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityAltIDSource : String {

        public static var tag: Int {
            459
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum Product : String {

        public static var tag: Int {
            460
        }

        case AGENCY = "1"
        case COMMODITY = "2"
        case CORPORATE = "3"
        case CURRENCY = "4"
        case EQUITY = "5"
        case GOVERNMENT = "6"
        case INDEX = "7"
        case LOAN = "8"
        case MONEYMARKET = "9"
        case MORTGAGE = "10"
        case MUNICIPAL = "11"
        case OTHER = "12"
        case FINANCING = "13"
    }

    public enum CFICode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            461
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProduct : String {

        public static var tag: Int {
            462
        }

        case AGENCY = "1"
        case COMMODITY = "2"
        case CORPORATE = "3"
        case CURRENCY = "4"
        case EQUITY = "5"
        case GOVERNMENT = "6"
        case INDEX = "7"
        case LOAN = "8"
        case MONEYMARKET = "9"
        case MORTGAGE = "10"
        case MUNICIPAL = "11"
        case OTHER = "12"
        case FINANCING = "13"
    }

    public enum UnderlyingCFICode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            463
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TestMessageIndicator : String {

        public static var tag: Int {
            464
        }

        case False = "N"
        case True = "Y"
    }

    public enum BookingRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            466
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IndividualAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            467
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RoundingDirection : String {

        public static var tag: Int {
            468
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum RoundingModulus : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            469
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CountryOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            470
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StateOrProvinceOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            471
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LocaleOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            472
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRegistDtls : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            473
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MailingDtls : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            474
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InvestorCountryOfResidence : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            475
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            476
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DistribPaymentMethod : String {

        public static var tag: Int {
            477
        }

        case CREST = "1"
        case NSCC = "2"
        case Euroclear = "3"
        case Clearstream = "4"
        case Cheque = "5"
        case TelegraphicTransfer = "6"
        case FedWire = "7"
        case DirectCredit = "8"
        case ACHCredit = "9"
        case BPAY = "10"
        case HighValueClearingSystemHVACS = "11"
        case ReinvestInFund = "12"
    }

    public enum CashDistribCurr : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            478
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            479
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CancellationRights : String {

        public static var tag: Int {
            480
        }

        case Yes = "Y"
        case NoExecutionOnly = "N"
        case NoWaiverAgreement = "M"
        case NoInstitutional = "O"
    }

    public enum MoneyLaunderingStatus : String {

        public static var tag: Int {
            481
        }

        case Passed = "Y"
        case NotChecked = "N"
        case ExemptBelowLimit = "1"
        case ExemptMoneyType = "2"
        case ExemptAuthorised = "3"
    }

    public enum MailingInst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            482
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TransBkdTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            483
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExecPriceType : String {

        public static var tag: Int {
            484
        }

        case BidPrice = "B"
        case CreationPrice = "C"
        case CreationPricePlusAdjustmentPercent = "D"
        case CreationPricePlusAdjustmentAmount = "E"
        case OfferPrice = "O"
        case OfferPriceMinusAdjustmentPercent = "P"
        case OfferPriceMinusAdjustmentAmount = "Q"
        case SinglePrice = "S"
    }

    public enum ExecPriceAdjustment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            485
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DateOfBirth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            486
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeReportTransType : String {

        public static var tag: Int {
            487
        }

        case New = "0"
        case Cancel = "1"
        case Replace = "2"
        case Release = "3"
        case Reverse = "4"
        case CancelDueToBackOutOfTrade = "5"
    }

    public enum CardHolderName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            488
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CardNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            489
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CardExpDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            490
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CardIssNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            491
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentMethod : String {

        public static var tag: Int {
            492
        }

        case CREST = "1"
        case NSCC = "2"
        case Euroclear = "3"
        case Clearstream = "4"
        case Cheque = "5"
        case TelegraphicTransfer = "6"
        case FedWire = "7"
        case DebitCard = "8"
        case DirectDebit = "9"
        case DirectCredit = "10"
        case CreditCard = "11"
        case ACHDebit = "12"
        case ACHCredit = "13"
        case BPAY = "14"
        case HighValueClearingSystem = "15"
        case CHIPS = "16"
        case SWIFT = "17"
        case CHAPS = "18"
        case SIC = "19"
        case euroSIC = "20"
    }

    public enum RegistAcctType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            493
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Designation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            494
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TaxAdvantageType : String {

        public static var tag: Int {
            495
        }

        case None = "0"
        case MaxiISA = "1"
        case TESSA = "2"
        case MiniCashISA = "3"
        case MiniStocksAndSharesISA = "4"
        case MiniInsuranceISA = "5"
        case CurrentYearPayment = "6"
        case PriorYearPayment = "7"
        case AssetTransfer = "8"
        case EmployeePriorYear = "9"
        case EmployeeCurrentYear = "10"
        case EmployerPriorYear = "11"
        case EmployerCurrentYear = "12"
        case NonFundPrototypeIRA = "13"
        case NonFundQualifiedPlan = "14"
        case DefinedContributionPlan = "15"
        case IRA = "16"
        case IRARollover = "17"
        case KEOGH = "18"
        case ProfitSharingPlan = "19"
        case US401K = "20"
        case SelfDirectedIRA = "21"
        case US403b = "22"
        case US457 = "23"
        case RothIRAPrototype = "24"
        case RothIRANonPrototype = "25"
        case RothConversionIRAPrototype = "26"
        case RothConversionIRANonPrototype = "27"
        case EducationIRAPrototype = "28"
        case EducationIRANonPrototype = "29"
        case Other = "999"
    }

    public enum RegistRejReasonText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            496
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FundRenewWaiv : String {

        public static var tag: Int {
            497
        }

        case No = "N"
        case Yes = "Y"
    }

    public enum CashDistribAgentName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            498
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashDistribAgentCode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            499
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashDistribAgentAcctNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            500
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashDistribPayRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            501
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashDistribAgentAcctName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            502
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CardStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            503
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            504
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentRemitterID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            505
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegistStatus : String {

        public static var tag: Int {
            506
        }

        case Accepted = "A"
        case Rejected = "R"
        case Held = "H"
        case Reminder = "N"
    }

    public enum RegistRejReasonCode : String {

        public static var tag: Int {
            507
        }

        case InvalidAccountType = "1"
        case InvalidTaxExemptType = "2"
        case InvalidOwnershipType = "3"
        case NoRegDetails = "4"
        case InvalidRegSeqNo = "5"
        case InvalidRegDetails = "6"
        case InvalidMailingDetails = "7"
        case InvalidMailingInstructions = "8"
        case InvalidInvestorID = "9"
        case InvalidInvestorIDSource = "10"
        case InvalidDateOfBirth = "11"
        case InvalidCountry = "12"
        case InvalidDistribInstns = "13"
        case InvalidPercentage = "14"
        case InvalidPaymentMethod = "15"
        case InvalidAccountName = "16"
        case InvalidAgentCode = "17"
        case InvalidAccountNum = "18"
        case Other = "99"
    }

    public enum RegistRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            508
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegistDtls : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            509
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDistribInsts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            510
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegistEmail : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            511
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DistribPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            512
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegistID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            513
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegistTransType : String {

        public static var tag: Int {
            514
        }

        case New = "0"
        case Cancel = "2"
        case Replace = "1"
    }

    public enum ExecValuationPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            515
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderPercent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            516
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OwnershipType : String {

        public static var tag: Int {
            517
        }

        case JointInvestors = "J"
        case TenantsInCommon = "T"
        case JointTrustees = "2"
    }

    public enum NoContAmts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            518
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContAmtType : String {

        public static var tag: Int {
            519
        }

        case CommissionAmount = "1"
        case CommissionPercent = "2"
        case InitialChargeAmount = "3"
        case InitialChargePercent = "4"
        case DiscountAmount = "5"
        case DiscountPercent = "6"
        case DilutionLevyAmount = "7"
        case DilutionLevyPercent = "8"
        case ExitChargeAmount = "9"
        case ExitChargePercent = "10"
        case FundBasedRenewalCommissionPercent = "11"
        case ProjectedFundValue = "12"
        case FundBasedRenewalCommissionOnOrder = "13"
        case FundBasedRenewalCommissionOnFund = "14"
        case NetSettlementAmount = "15"
    }

    public enum ContAmtValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            520
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContAmtCurr : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            521
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OwnerType : String {

        public static var tag: Int {
            522
        }

        case IndividualInvestor = "1"
        case PublicCompany = "2"
        case PrivateCompany = "3"
        case IndividualTrustee = "4"
        case CompanyTrustee = "5"
        case PensionPlan = "6"
        case CustodianUnderGiftsToMinorsAct = "7"
        case Trusts = "8"
        case Fiduciaries = "9"
        case NetworkingSubAccount = "10"
        case NonProfitOrganization = "11"
        case CorporateBody = "12"
        case Nominee = "13"
        case InstitutionalCustomer = "14"
        case Combined = "15"
        case MemberFirmEmployee = "16"
        case MarketMakingAccount = "17"
        case ProprietaryAccount = "18"
        case NonbrokerDealer = "19"
        case UnknownBeneficialOwnerType = "20"
        case FirmsErrorAccount = "21"
        case FirmAgencyAveragePriceAccount = "22"
    }

    public enum PartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            523
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NestedPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            524
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NestedPartyIDSource : String {

        public static var tag: Int {
            525
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum SecondaryClOrdID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            526
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryExecID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            527
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderCapacity : String {

        public static var tag: Int {
            528
        }

        case Agency = "A"
        case Proprietary = "G"
        case Individual = "I"
        case Principal = "P"
        case RisklessPrincipal = "R"
        case AgentForOtherMember = "W"
        case MixedCapacity = "M"
    }

    public enum OrderRestrictions : String {

        public static var tag: Int {
            529
        }

        case ProgramTrade = "1"
        case IndexArbitrage = "2"
        case NonIndexArbitrage = "3"
        case CompetingMarketMaker = "4"
        case ActingAsMarketMakerOrSpecialistInSecurity = "5"
        case ActingAsMarketMakerOrSpecialistInUnderlying = "6"
        case ForeignEntity = "7"
        case ExternalMarketParticipant = "8"
        case ExternalInterConnectedMarketLinkage = "9"
        case RisklessArbitrage = "A"
        case IssuerHolding = "B"
        case IssuePriceStabilization = "C"
        case NonAlgorithmic = "D"
        case Algorithmic = "E"
        case Cross = "F"
        case InsiderAccount = "G"
        case SignificantShareholder = "H"
        case NormalCourseIssuerBid = "I"
    }

    public enum MassCancelRequestType : String {

        public static var tag: Int {
            530
        }

        case CancelOrdersForASecurity = "1"
        case CancelOrdersForAnUnderlyingSecurity = "2"
        case CancelOrdersForAProduct = "3"
        case CancelOrdersForACFICode = "4"
        case CancelOrdersForASecurityType = "5"
        case CancelOrdersForATradingSession = "6"
        case CancelAllOrders = "7"
        case CancelOrdersForAMarket = "8"
        case CancelOrdersForAMarketSegment = "9"
        case CancelOrdersForASecurityGroup = "A"
        case CancelOrdersForSecurityIssuer = "B"
        case CancelForIssuerOfUnderlyingSecurity = "C"
    }

    public enum MassCancelResponse : String {

        public static var tag: Int {
            531
        }

        case CancelRequestRejected = "0"
        case CancelOrdersForASecurity = "1"
        case CancelOrdersForAnUnderlyingSecurity = "2"
        case CancelOrdersForAProduct = "3"
        case CancelOrdersForACFICode = "4"
        case CancelOrdersForASecurityType = "5"
        case CancelOrdersForATradingSession = "6"
        case CancelAllOrders = "7"
        case CancelOrdersForAMarket = "8"
        case CancelOrdersForAMarketSegment = "9"
        case CancelOrdersForASecurityGroup = "A"
        case CancelOrdersForASecuritiesIssuer = "B"
        case CancelOrdersForIssuerOfUnderlyingSecurity = "C"
    }

    public enum MassCancelRejectReason : String {

        public static var tag: Int {
            532
        }

        case MassCancelNotSupported = "0"
        case InvalidOrUnknownSecurity = "1"
        case InvalidOrUnkownUnderlyingSecurity = "2"
        case InvalidOrUnknownProduct = "3"
        case InvalidOrUnknownCFICode = "4"
        case InvalidOrUnknownSecurityType = "5"
        case InvalidOrUnknownTradingSession = "6"
        case InvalidOrUnknownMarket = "7"
        case InvalidOrUnkownMarketSegment = "8"
        case InvalidOrUnknownSecurityGroup = "9"
        case InvalidOrUnknownSecurityIssuer = "10"
        case InvalidOrUnknownIssuerOfUnderlyingSecurity = "11"
        case Other = "99"
    }

    public enum TotalAffectedOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            533
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAffectedOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            534
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AffectedOrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            535
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AffectedSecondaryOrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            536
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteType : String {

        public static var tag: Int {
            537
        }

        case Indicative = "0"
        case Tradeable = "1"
        case RestrictedTradeable = "2"
        case Counter = "3"
        case InitiallyTradeable = "4"
    }

    public enum NestedPartyRole : String {

        public static var tag: Int {
            538
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoNestedPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            539
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalAccruedInterestAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            540
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            541
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            542
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrRegistry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            543
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashMargin : String {

        public static var tag: Int {
            544
        }

        case Cash = "1"
        case MarginOpen = "2"
        case MarginClose = "3"
    }

    public enum NestedPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            545
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Scope : String {

        public static var tag: Int {
            546
        }

        case LocalMarket = "1"
        case National = "2"
        case Global = "3"
    }

    public enum MDImplicitDelete : String {

        public static var tag: Int {
            547
        }

        case No = "N"
        case Yes = "Y"
    }

    public enum CrossID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            548
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CrossType : String {

        public static var tag: Int {
            549
        }

        case CrossAON = "1"
        case CrossIOC = "2"
        case CrossOneSide = "3"
        case CrossSamePrice = "4"
        case BasisCross = "5"
        case ContingentCross = "6"
        case VWAPCross = "7"
        case STSCross = "8"
        case CustomerToCustomer = "9"
    }

    public enum CrossPrioritization : String {

        public static var tag: Int {
            550
        }

        case None = "0"
        case BuySideIsPrioritized = "1"
        case SellSideIsPrioritized = "2"
    }

    public enum OrigCrossID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            551
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSides : String {

        public static var tag: Int {
            552
        }

        case OneSide = "1"
        case BothSides = "2"
    }

    public enum Username : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            553
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Password : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            554
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            555
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            556
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoSecurityTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            557
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSecurityTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            558
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityListRequestType : String {

        public static var tag: Int {
            559
        }

        case Symbol = "0"
        case SecurityTypeAnd = "1"
        case Product = "2"
        case TradingSessionID = "3"
        case AllSecurities = "4"
        case MarketIDOrMarketID = "5"
    }

    public enum SecurityRequestResult : String {

        public static var tag: Int {
            560
        }

        case ValidRequest = "0"
        case InvalidOrUnsupportedRequest = "1"
        case NoInstrumentsFound = "2"
        case NotAuthorizedToRetrieveInstrumentData = "3"
        case InstrumentDataTemporarilyUnavailable = "4"
        case RequestForInstrumentDataNotSupported = "5"
    }

    public enum RoundLot : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            561
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinTradeVol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            562
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MultiLegRptTypeReq : String {

        public static var tag: Int {
            563
        }

        case ReportByMulitlegSecurityOnly = "0"
        case ReportByMultilegSecurityAndInstrumentLegs = "1"
        case ReportByInstrumentLegsOnly = "2"
    }

    public enum LegPositionEffect : String {

        public static var tag: Int {
            564
        }

        case Close = "C"
        case FIFO = "F"
        case Open = "O"
        case Rolled = "R"
        case CloseButNotifyOnOpen = "N"
        case Default = "D"
    }

    public enum LegCoveredOrUncovered : String {

        public static var tag: Int {
            565
        }

        case Covered = "0"
        case Uncovered = "1"
    }

    public enum LegPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            566
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesStatusRejReason : String {

        public static var tag: Int {
            567
        }

        case UnknownOrInvalidTradingSessionID = "1"
        case Other = "99"
    }

    public enum TradeRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            568
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeRequestType : String {

        public static var tag: Int {
            569
        }

        case AllTrades = "0"
        case MatchedTradesMatchingCriteria = "1"
        case UnmatchedTradesThatMatchCriteria = "2"
        case UnreportedTradesThatMatchCriteria = "3"
        case AdvisoriesThatMatchCriteria = "4"
    }

    public enum PreviouslyReported : String {

        public static var tag: Int {
            570
        }

        case NotReportedToCounterparty = "N"
        case PreviouslyReportedToCounterparty = "Y"
    }

    public enum TradeReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            571
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeReportRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            572
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchStatus : String {

        public static var tag: Int {
            573
        }

        case Compared = "0"
        case Uncompared = "1"
        case AdvisoryOrAlert = "2"
        case Mismatched = "3"
    }

    public enum MatchType : String {

        public static var tag: Int {
            574
        }

        case OnePartyTradeReport = "1"
        case TwoPartyTradeReport = "2"
        case ConfirmedTradeReport = "3"
        case AutoMatch = "4"
        case CrossAuction = "5"
        case CounterOrderSelection = "6"
        case CallAuction = "7"
        case Issuing = "8"
        case SystematicInternaliser = "9"
        case AutoMatchLastLook = "10"
        case CrossAuctionLastLook = "11"
        case ACTAcceptedTrade = "M3"
        case ACTDefaultTrade = "M4"
        case ACTDefaultAfterM2 = "M5"
        case ACTM6Match = "M6"
        case ExactMatchPlus4BadgesExecTime = "A1"
        case ExactMatchPlus4Badges = "A2"
        case ExactMatchPlus2BadgesExecTime = "A3"
        case ExactMatchPlus2Badges = "A4"
        case ExactMatchPlusExecTime = "A5"
        case StampedAdvisoriesOrSpecialistAccepts = "AQ"
        case A1ExactMatchSummarizedQuantity = "S1"
        case A2ExactMatchSummarizedQuantity = "S2"
        case A3ExactMatchSummarizedQuantity = "S3"
        case A4ExactMatchSummarizedQuantity = "S4"
        case A5ExactMatchSummarizedQuantity = "S5"
        case ExactMatchMinusBadgesTimes = "M1"
        case SummarizedMatchMinusBadgesTimes = "M2"
        case OCSLockedIn = "MT"
    }

    public enum OddLot : String {

        public static var tag: Int {
            575
        }

        case TreatAsRoundLot = "N"
        case TreatAsOddLot = "Y"
    }

    public enum NoClearingInstructions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            576
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearingInstruction : String {

        public static var tag: Int {
            577
        }

        case ProcessNormally = "0"
        case ExcludeFromAllNetting = "1"
        case BilateralNettingOnly = "2"
        case ExClearing = "3"
        case SpecialTrade = "4"
        case MultilateralNetting = "5"
        case ClearAgainstCentralCounterparty = "6"
        case ExcludeFromCentralCounterparty = "7"
        case ManualMode = "8"
        case AutomaticPostingMode = "9"
        case AutomaticGiveUpMode = "10"
        case QualifiedServiceRepresentativeQSR = "11"
        case CustomerTrade = "12"
        case SelfClearing = "13"
        case BuyIn = "14"
    }

    public enum TradeInputSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            578
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeInputDevice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            579
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            580
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AccountType : String {

        public static var tag: Int {
            581
        }

        case CarriedCustomerSide = "1"
        case CarriedNonCustomerSide = "2"
        case HouseTrader = "3"
        case FloorTrader = "4"
        case CarriedNonCustomerSideCrossMargined = "6"
        case HouseTraderCrossMargined = "7"
        case JointBackOfficeAccount = "8"
        case EquitiesSpecialist = "9"
        case OptionsMarketMaker = "10"
        case OptionsFirmAccount = "11"
        case AccountCustomerNonCustomerOrders = "12"
        case AccountOrdersMultipleCustomers = "13"
    }

    public enum CustOrderCapacity : String {

        public static var tag: Int {
            582
        }

        case MemberTradingForTheirOwnAccount = "1"
        case ClearingFirmTradingForItsProprietaryAccount = "2"
        case MemberTradingForAnotherMember = "3"
        case AllOther = "4"
        case RetailCustomer = "5"
    }

    public enum ClOrdLinkID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            583
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassStatusReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            584
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassStatusReqType : String {

        public static var tag: Int {
            585
        }

        case StatusForOrdersForASecurity = "1"
        case StatusForOrdersForAnUnderlyingSecurity = "2"
        case StatusForOrdersForAProduct = "3"
        case StatusForOrdersForACFICode = "4"
        case StatusForOrdersForASecurityType = "5"
        case StatusForOrdersForATradingSession = "6"
        case StatusForAllOrders = "7"
        case StatusForOrdersForAPartyID = "8"
        case StatusForSecurityIssuer = "9"
        case StatusForIssuerOfUnderlyingSecurity = "10"
    }

    public enum OrigOrdModTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            586
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlType : String {

        public static var tag: Int {
            587
        }

        case Regular = "0"
        case Cash = "1"
        case NextDay = "2"
        case TPlus2 = "3"
        case TPlus3 = "4"
        case TPlus4 = "5"
        case Future = "6"
        case WhenAndIfIssued = "7"
        case SellersOption = "8"
        case TPlus5 = "9"
        case BrokenDate = "B"
        case FXSpotNextSettlement = "C"
    }

    public enum LegSettlDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            588
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DayBookingInst : String {

        public static var tag: Int {
            589
        }

        case Auto = "0"
        case SpeakWithOrderInitiatorBeforeBooking = "1"
        case Accumulate = "2"
    }

    public enum BookingUnit : String {

        public static var tag: Int {
            590
        }

        case EachPartialExecutionIsABookableUnit = "0"
        case AggregatePartialExecutionsOnThisOrder = "1"
        case AggregateExecutionsForThisSymbol = "2"
    }

    public enum PreallocMethod : String {

        public static var tag: Int {
            591
        }

        case ProRata = "0"
        case DoNotProRata = "1"
    }

    public enum UnderlyingCountryOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            592
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStateOrProvinceOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            593
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLocaleOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            594
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrRegistry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            595
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCountryOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            596
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStateOrProvinceOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            597
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegLocaleOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            598
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInstrRegistry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            599
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            600
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSymbolSfx : String {

        public static var tag: Int {
            601
        }

        case EUCPWithLumpSumInterest = "CD"
        case WhenIssued = "WI"
    }

    public enum LegSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            602
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityIDSource : String {

        public static var tag: Int {
            603
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum NoLegSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            604
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            605
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityAltIDSource : String {

        public static var tag: Int {
            606
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum LegProduct : String {

        public static var tag: Int {
            607
        }

        case AGENCY = "1"
        case COMMODITY = "2"
        case CORPORATE = "3"
        case CURRENCY = "4"
        case EQUITY = "5"
        case GOVERNMENT = "6"
        case INDEX = "7"
        case LOAN = "8"
        case MONEYMARKET = "9"
        case MORTGAGE = "10"
        case MUNICIPAL = "11"
        case OTHER = "12"
        case FINANCING = "13"
    }

    public enum LegCFICode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            608
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityType : String {

        public static var tag: Int {
            609
        }

        case USTreasuryNoteOld = "UST"
        case USTreasuryBillOld = "USTB"
        case EuroSupranationalCoupons = "EUSUPRA"
        case FederalAgencyCoupon = "FAC"
        case FederalAgencyDiscountNote = "FADN"
        case PrivateExportFunding = "PEF"
        case USDSupranationalCoupons = "SUPRA"
        case CorporateBond = "CORP"
        case CorporatePrivatePlacement = "CPP"
        case ConvertibleBond = "CB"
        case DualCurrency = "DUAL"
        case EuroCorporateBond = "EUCORP"
        case EuroCorporateFloatingRateNotes = "EUFRN"
        case USCorporateFloatingRateNotes = "FRN"
        case IndexedLinked = "XLINKD"
        case StructuredNotes = "STRUCT"
        case YankeeCorporateBond = "YANK"
        case ForeignExchangeContract = "FOR"
        case NonDeliverableForward = "FXNDF"
        case FXSpot = "FXSPOT"
        case FXForward = "FXFWD"
        case FXSwap = "FXSWAP"
        case NonDeliverableSwap = "FXNDS"
        case Cap = "CAP"
        case CreditDefaultSwap = "CDS"
        case Collar = "CLLR"
        case CommoditySwap = "CMDTYSWAP"
        case Exotic = "EXOTIC"
        case OptionsOnCombo = "OOC"
        case Floor = "FLR"
        case FRA = "FRA"
        case Future = "FUT"
        case DerivativeForward = "FWD"
        case InterestRateSwap = "IRS"
        case TotalReturnSwap = "TRS"
        case LoanLease = "LOANLEASE"
        case OptionsOnFutures = "OOF"
        case OptionsOnPhysical = "OOP"
        case Option = "OPT"
        case SpotForward = "SPOTFWD"
        case SwapOption = "SWAPTION"
        case Transmission = "XMISSION"
        case Index = "INDEX"
        case BondBasket = "BDBSKT"
        case ContractForDifference = "CFD"
        case CorrelationSwap = "CRLTNSWAP"
        case DiviendSwap = "DVDNDSWAP"
        case EquityBasket = "EQBSKT"
        case EquityForward = "EQFWD"
        case ReturnSwap = "RTRNSWAP"
        case VarianceSwap = "VARSWAP"
        case PortfolioSwaps = "PRTFLIOSWAP"
        case FuturesOnASwap = "FUTSWAP"
        case ForwardsOnASwap = "FWDSWAP "
        case ForwardFreightAgreement = "FWDFRTAGMT "
        case SpreadBetting = "SPREADBET"
        case ExchangeTradedCommodity = "ETC"
        case CommonStock = "CS"
        case PreferredStock = "PS"
        case DepositoryReceipts = "DR"
        case Repurchase = "REPO"
        case Forward = "FORWARD"
        case BuySellback = "BUYSELL"
        case SecuritiesLoan = "SECLOAN"
        case SecuritiesPledge = "SECPLEDGE"
        case DeliveryVersusPledge = "DVPLDG"
        case CollateralBasket = "COLLBSKT"
        case StructuredFinanceProduct = "SFP"
        case MarginLoan = "MRGNLOAN"
        case BradyBond = "BRADY"
        case CanadianTreasuryNotes = "CAN"
        case CanadianTreasuryBills = "CTB"
        case EuroSovereigns = "EUSOV"
        case CanadianProvincialBonds = "PROV"
        case TreasuryBill = "TB"
        case USTreasuryBond = "TBOND"
        case InterestStripFromAnyBondOrNote = "TINT"
        case USTreasuryBill = "TBILL"
        case TreasuryInflationProtectedSecurities = "TIPS"
        case PrincipalStripOfACallableBondOrNote = "TCAL"
        case PrincipalStripFromANonCallableBondOrNote = "TPRN"
        case USTreasuryNote = "TNOTE"
        case TermLoan = "TERM"
        case RevolverLoan = "RVLV"
        case Revolver = "RVLVTRM"
        case BridgeLoan = "BRIDGE"
        case LetterOfCredit = "LOFC"
        case SwingLineFacility = "SWING"
        case DebtorInPossession = "DINP"
        case Defaulted = "DEFLTED"
        case Withdrawn = "WITHDRN"
        case Replaced = "REPLACD"
        case Matured = "MATURED"
        case Amended = "AMENDED"
        case Retired = "RETIRED"
        case BankersAcceptance = "BA"
        case BankDepositoryNote = "BDN"
        case BankNotes = "BN"
        case BillOfExchanges = "BOX"
        case CanadianMoneyMarkets = "CAMM"
        case CertificateOfDeposit = "CD"
        case CallLoans = "CL"
        case CommercialPaper = "CP"
        case DepositNotes = "DN"
        case EuroCertificateOfDeposit = "EUCD"
        case EuroCommercialPaper = "EUCP"
        case LiquidityNote = "LQN"
        case MediumTermNotes = "MTN"
        case Overnight = "ONITE"
        case PromissoryNote = "PN"
        case ShortTermLoanNote = "STN"
        case PlazosFijos = "PZFJ"
        case SecuredLiquidityNote = "SLQN"
        case TimeDeposit = "TD"
        case TermLiquidityNote = "TLQN"
        case ExtendedCommNote = "XCN"
        case YankeeCertificateOfDeposit = "YCD"
        case AssetBackedSecurities = "ABS"
        case CanadianMortgageBonds = "CMB"
        case Corp = "CMBS"
        case CollateralizedMortgageObligation = "CMO"
        case IOETTEMortgage = "IET"
        case MortgageBackedSecurities = "MBS"
        case MortgageInterestOnly = "MIO"
        case MortgagePrincipalOnly = "MPO"
        case MortgagePrivatePlacement = "MPP"
        case MiscellaneousPassThrough = "MPT"
        case Pfandbriefe = "PFAND"
        case ToBeAnnounced = "TBA"
        case OtherAnticipationNotes = "AN"
        case CertificateOfObligation = "COFO"
        case CertificateOfParticipation = "COFP"
        case GeneralObligationBonds = "GO"
        case MandatoryTender = "MT"
        case RevenueAnticipationNote = "RAN"
        case RevenueBonds = "REV"
        case SpecialAssessment = "SPCLA"
        case SpecialObligation = "SPCLO"
        case SpecialTax = "SPCLT"
        case TaxAnticipationNote = "TAN"
        case TaxAllocation = "TAXA"
        case TaxExemptCommercialPaper = "TECP"
        case TaxableMunicipalCP = "TMCP"
        case TaxRevenueAnticipationNote = "TRAN"
        case VariableRateDemandNote = "VRDN"
        case Warrant = "WAR"
        case MutualFund = "MF"
        case MultilegInstrument = "MLEG"
        case NoSecurityType = "NONE"
        case Wildcard = "?"
        case Cash = "CASH"
        case Other = "Other"
        case ExchangeTradedNote = "ETN"
        case SecuritizedDerivative = "SECDERIV"
    }

    public enum LegMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            610
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            611
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            612
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptAttribute : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            613
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegContractMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            614
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            615
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            616
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            617
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            618
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            619
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            620
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            621
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            622
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegRatioQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            623
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSide : String {

        public static var tag: Int {
            624
        }

        case Buy = "1"
        case Sell = "2"
        case BuyMinus = "3"
        case SellPlus = "4"
        case SellShort = "5"
        case SellShortExempt = "6"
        case Undisclosed = "7"
        case Cross = "8"
        case CrossShort = "9"
        case CrossShortExempt = "A"
        case AsDefined = "B"
        case Opposite = "C"
        case Subscribe = "D"
        case Redeem = "E"
        case Lend = "F"
        case Borrow = "G"
        case SellUndisclosed = "H"
    }

    public enum TradingSessionSubID : String {

        public static var tag: Int {
            625
        }

        case PreTrading = "1"
        case OpeningOrOpeningAuction = "2"
        case Continuous = "3"
        case ClosingOrClosingAuction = "4"
        case PostTrading = "5"
        case ScheduledIntradayAuction = "6"
        case Quiescent = "7"
        case AnyAuction = "8"
        case UnscheduledIntradayAuction = "9"
        case OutOfMainSessionTrading = "10"
        case PrivateAuction = "11"
        case PublicAuction = "12"
        case GroupAuction = "13"
    }

    public enum AllocType : String {

        public static var tag: Int {
            626
        }

        case Calculated = "1"
        case Preliminary = "2"
        case SellsideCalculatedUsingPreliminary = "3"
        case SellsideCalculatedWithoutPreliminary = "4"
        case ReadyToBook = "5"
        case BuysideReadyToBook = "6"
        case WarehouseInstruction = "7"
        case RequestToIntermediary = "8"
        case Accept = "9"
        case Reject = "10"
        case AcceptPending = "11"
        case IncompleteGroup = "12"
        case CompleteGroup = "13"
        case ReversalPending = "14"
        case ReopenGroup = "15"
        case CancelGroup = "16"
        case Giveup = "17"
        case Takeup = "18"
        case RefuseTakeup = "19"
        case InitiateReversal = "20"
        case Reverse = "21"
        case RefuseReversal = "22"
        case SubAllocationGiveup = "23"
        case ApproveGiveup = "24"
        case ApproveTakeup = "25"
        case NotionalValueAveragePxGroupAlloc = "26"
    }

    public enum NoHops : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            627
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HopCompID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            628
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HopSendingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            629
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HopRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            630
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MidPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            631
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidYield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            632
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MidYield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            633
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferYield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            634
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearingFeeIndicator : String {

        public static var tag: Int {
            635
        }

        case FirstYearDelegate = "1"
        case SecondYearDelegate = "2"
        case ThirdYearDelegate = "3"
        case FourthYearDelegate = "4"
        case FifthYearDelegate = "5"
        case SixthYearDelegate = "9"
        case CBOEMember = "B"
        case NonMemberAndCustomer = "C"
        case EquityMemberAndClearingMember = "E"
        case FullAndAssociateMember = "F"
        case Firms106HAnd106J = "H"
        case GIM = "I"
        case Lessee106FEmployees = "L"
        case AllOtherOwnershipTypes = "M"
    }

    public enum WorkingIndicator : String {

        public static var tag: Int {
            636
        }

        case NotWorking = "N"
        case Working = "Y"
    }

    public enum LegLastPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            637
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriorityIndicator : String {

        public static var tag: Int {
            638
        }

        case PriorityUnchanged = "0"
        case LostPriorityAsResultOfOrderChange = "1"
    }

    public enum PriceImprovement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            639
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Price2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            640
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastForwardPoints2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            641
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidForwardPoints2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            642
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferForwardPoints2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            643
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RFQReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            644
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MktBidPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            645
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MktOfferPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            646
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinBidSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            647
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinOfferSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            648
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteStatusReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            649
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegalConfirm : String {

        public static var tag: Int {
            650
        }

        case DoesNotConsituteALegalConfirm = "N"
        case LegalConfirm = "Y"
    }

    public enum UnderlyingLastPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            651
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLastQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            652
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            654
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContraLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            655
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlCurrBidFxRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            656
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlCurrOfferFxRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            657
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteRequestRejectReason : String {

        public static var tag: Int {
            658
        }

        case UnknownSymbol = "1"
        case Exchange = "2"
        case QuoteRequestExceedsLimit = "3"
        case TooLateToEnter = "4"
        case InvalidPrice = "5"
        case NotAuthorizedToRequestQuote = "6"
        case NoMatchForInquiry = "7"
        case NoMarketForInstrument = "8"
        case NoInventory = "9"
        case Pass = "10"
        case InsufficientCredit = "11"
        case ExceededClipSizeLimit = "12"
        case ExceededMaxNotionalOrderAmt = "13"
        case ExceededDV01PV01Limit = "14"
        case ExceededCS01Limit = "15"
        case Other = "99"
    }

    public enum SideComplianceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            659
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AcctIDSource : String {

        public static var tag: Int {
            660
        }

        case BIC = "1"
        case SIDCode = "2"
        case TFM = "3"
        case OMGEO = "4"
        case DTCCCode = "5"
        case Other = "99"
    }

    public enum AllocAcctIDSource : String {

        public static var tag: Int {
            661
        }

        case BIC = "1"
        case SIDCode = "2"
        case TFM = "3"
        case OMGEO = "4"
        case DTCCCode = "5"
        case Other = "99"
    }

    public enum BenchmarkPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            662
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BenchmarkPriceType : String {

        public static var tag: Int {
            663
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum ConfirmID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            664
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ConfirmStatus : String {

        public static var tag: Int {
            665
        }

        case Received = "1"
        case MismatchedAccount = "2"
        case MissingSettlementInstructions = "3"
        case Confirmed = "4"
        case RequestRejected = "5"
    }

    public enum ConfirmTransType : String {

        public static var tag: Int {
            666
        }

        case New = "0"
        case Replace = "1"
        case Cancel = "2"
    }

    public enum ContractSettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            667
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryForm : String {

        public static var tag: Int {
            668
        }

        case BookEntry = "1"
        case Bearer = "2"
    }

    public enum LastParPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            669
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegAllocs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            670
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAllocAccount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            671
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIndividualAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            672
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAllocQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            673
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAllocAcctIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            674
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            675
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBenchmarkCurveCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            676
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBenchmarkCurveName : String {

        public static var tag: Int {
            677
        }

        case EONIA = "EONIA"
        case EUREPO = "EUREPO"
        case Euribor = "Euribor"
        case FutureSWAP = "FutureSWAP"
        case LIBID = "LIBID"
        case LIBOR = "LIBOR"
        case MuniAAA = "MuniAAA"
        case OTHER = "OTHER"
        case Pfandbriefe = "Pfandbriefe"
        case SONIA = "SONIA"
        case SWAP = "SWAP"
        case Treasury = "Treasury"
        case FedFundRateEffective = "FEDEFF"
        case FedOpen = "FEDOPEN"
        case EURIBOR = "EURIBOR"
        case AUBSW = "AUBSW"
        case BUBOR = "BUBOR"
        case CDOR = "CDOR"
        case CIBOR = "CIBOR"
        case EONIASWAP = "EONIASWAP"
        case ESTR = "ESTR"
        case EURODOLLAR = "EURODOLLAR"
        case EUROSWISS = "EUROSWISS"
        case GCFREPO = "GCFREPO"
        case ISDAFIX = "ISDAFIX"
        case JIBAR = "JIBAR"
        case MOSPRIM = "MOSPRIM"
        case NIBOR = "NIBOR"
        case PRIBOR = "PRIBOR"
        case SOFR = "SOFR"
        case STIBOR = "STIBOR"
        case TELBOR = "TELBOR"
        case TIBOR = "TIBOR"
        case WIBOR = "WIBOR"
    }

    public enum LegBenchmarkCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            678
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBenchmarkPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            679
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBenchmarkPriceType : String {

        public static var tag: Int {
            680
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum LegBidPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            681
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIOIQty : String {

        public static var tag: Int {
            682
        }

        case Small = "S"
        case Medium = "M"
        case Large = "L"
        case UndisclosedQuantity = "U"
    }

    public enum NoLegStipulations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            683
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOfferPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            684
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOrderQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            685
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPriceType : String {

        public static var tag: Int {
            686
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum LegQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            687
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStipulationType : String {

        public static var tag: Int {
            688
        }

        case AlternativeMinimumTax = "AMT"
        case AutoReinvestment = "AUTOREINV"
        case BankQualified = "BANKQUAL"
        case BargainConditions = "BGNCON"
        case CouponRange = "COUPON"
        case ISOCurrencyCode = "CURRENCY"
        case CustomStart = "CUSTOMDATE"
        case Geographics = "GEOG"
        case ValuationDiscount = "HAIRCUT"
        case Insured = "INSURED"
        case IssueDate = "ISSUE"
        case Issuer = "ISSUER"
        case IssueSizeRange = "ISSUESIZE"
        case LookbackDays = "LOOKBACK"
        case ExplicitLotIdentifier = "LOT"
        case LotVariance = "LOTVAR"
        case MaturityYearAndMonth = "MAT"
        case MaturityRange = "MATURITY"
        case MaximumSubstitutions = "MAXSUBS"
        case MinimumDenomination = "MINDNOM"
        case MinimumIncrement = "MININCR"
        case MinimumQuantity = "MINQTY"
        case PaymentFrequency = "PAYFREQ"
        case NumberOfPieces = "PIECES"
        case PoolsMaximum = "PMAX"
        case PoolsPerLot = "PPL"
        case PoolsPerMillion = "PPM"
        case PoolsPerTrade = "PPT"
        case PriceRange = "PRICE"
        case PricingFrequency = "PRICEFREQ"
        case ProductionYear = "PROD"
        case CallProtection = "PROTECT"
        case Purpose = "PURPOSE"
        case BenchmarkPriceSource = "PXSOURCE"
        case RatingSourceAndRange = "RATING"
        case TypeOfRedemption = "REDEMPTION"
        case Restricted = "RESTRICTED"
        case MarketSector = "SECTOR"
        case SecurityTypeIncludedOrExcluded = "SECTYPE"
        case Structure = "STRUCT"
        case SubstitutionsFrequency = "SUBSFREQ"
        case SubstitutionsLeft = "SUBSLEFT"
        case FreeformText = "TEXT"
        case TradeVariance = "TRDVAR"
        case WeightedAverageCoupon = "WAC"
        case WeightedAverageLifeCoupon = "WAL"
        case WeightedAverageLoanAge = "WALA"
        case WeightedAverageMaturity = "WAM"
        case WholePool = "WHOLE"
        case YieldRange = "YIELD"
        case OriginalAmount = "ORIGAMT"
        case PoolEffectiveDate = "POOLEFFDT"
        case PoolInitialFactor = "POOLINITFCTR"
        case Tranche = "TRANCHE"
        case Substitution = "SUBSTITUTION"
        case MULTEXCHFLLBCK = "MULTEXCHFLLBCK"
        case COMPSECFLLBCK = "COMPSECFLLBCK"
        case LOCLJRSDCTN = "LOCLJRSDCTN"
        case RELVJRSDCTN = "RELVJRSDCTN"
        case IncurredRecovery = "INCURRCVY"
        case AdditionalTerm = "ADDTRM"
        case ModifiedEquityDelivery = "MODEQTYDLVY"
        case NoReferenceOblication = "NOREFOBLIG"
        case UnknownReferenceObligation = "UNKREFOBLIG"
        case AllGuarantees = "ALLGUARANTEES"
        case ReferencePrice = "REFPX"
        case ReferencePolicy = "REFPOLICY"
        case SecuredList = "SECRDLIST"
        case AverageFICOScore = "AVFICO"
        case AverageLoanSize = "AVSIZE"
        case MaximumLoanBalance = "MAXBAL"
        case PoolIdentifier = "POOL"
        case TypeOfRollTrade = "ROLLTYPE"
        case ReferenceToRollingOrClosingTrade = "REFTRADE"
        case PrincipalOfRollingOrClosingTrade = "REFPRIN"
        case InterestOfRollingOrClosingTrade = "REFINT"
        case AvailableOfferQuantityToBeShownToTheStreet = "AVAILQTY"
        case BrokerCredit = "BROKERCREDIT"
        case OfferPriceToBeShownToInternalBrokers = "INTERNALPX"
        case OfferQuantityToBeShownToInternalBrokers = "INTERNALQTY"
        case TheMinimumResidualOfferQuantity = "LEAVEQTY"
        case MaximumOrderSize = "MAXORDQTY"
        case OrderQuantityIncrement = "ORDRINCR"
        case PrimaryOrSecondaryMarketIndicator = "PRIMARY"
        case BrokerSalesCreditOverride = "SALESCREDITOVR"
        case TraderCredit = "TRADERCREDIT"
        case DiscountRate = "DISCOUNT"
        case YieldToMaturity = "YTM"
        case InterestPayoffOfRollingOrAmendingTrade = "PAYOFF"
        case AbsolutePrepaymentSpeed = "ABS"
        case ConstantPrepaymentPenalty = "CPP"
        case ConstantPrepaymentRate = "CPR"
        case ConstantPrepaymentYield = "CPY"
        case FinalCPROfHomeEquityPrepaymentCurve = "HEP"
        case PercentOfManufacturedHousingPrepaymentCurve = "MHP"
        case MonthlyPrepaymentRate = "MPR"
        case PercentOfProspectusPrepaymentCurve = "PPC"
        case PercentOfBMAPrepaymentCurve = "PSA"
        case SingleMonthlyMortality = "SMM"
    }

    public enum LegStipulationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            689
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSwapType : String {

        public static var tag: Int {
            690
        }

        case ParForPar = "1"
        case ModifiedDuration = "2"
        case Risk = "4"
        case Proceeds = "5"
    }

    public enum Pool : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            691
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuotePriceType : String {

        public static var tag: Int {
            692
        }

        case Percent = "1"
        case PerShare = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case YieldSpread = "9"
        case Yield = "10"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpFrontPoints = "23"
        case InterestRate = "24"
        case PercentageOfNotional = "25"
    }

    public enum QuoteRespID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            693
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteRespType : String {

        public static var tag: Int {
            694
        }

        case Hit = "1"
        case Counter = "2"
        case Expired = "3"
        case Cover = "4"
        case DoneAway = "5"
        case Pass = "6"
        case EndTrade = "7"
        case TimedOut = "8"
        case Tied = "9"
        case TiedCover = "10"
        case Accept = "11"
        case TerminateContract = "12"
    }

    public enum QuoteQualifier : String {

        public static var tag: Int {
            695
        }

        case AllOrNone = "A"
        case MarketOnClose = "B"
        case AtTheClose = "C"
        case VWAP = "D"
        case Axe = "E"
        case AxeOnBid = "F"
        case AxeOnOffer = "G"
        case ClientNaturalWorking = "H"
        case InTouchWith = "I"
        case PositionWanted = "J"
        case MarketMaking = "K"
        case Limit = "L"
        case MoreBehind = "M"
        case ClientNaturalBlock = "N"
        case AtTheOpen = "O"
        case TakingAPosition = "P"
        case AtTheMarket = "Q"
        case ReadyToTrade = "R"
        case PortfolioShown = "S"
        case ThroughTheDay = "T"
        case Unwind = "U"
        case Versus = "V"
        case Indication = "W"
        case CrossingOpportunity = "X"
        case AtTheMidpoint = "Y"
        case PreOpen = "Z"
        case QuantityNegotiable = "1"
        case AllowLateBids = "2"
        case ImmediateOrCounter = "3"
        case AutoTrade = "4"
        case AutomaticSpot = "a"
        case PlatformCalculatedSpot = "b"
        case OutsideSpread = "c"
        case DeferredSpot = "d"
        case NegotiatedSpot = "n"
    }

    public enum YieldRedemptionDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            696
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum YieldRedemptionPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            697
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum YieldRedemptionPriceType : String {

        public static var tag: Int {
            698
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum BenchmarkSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            699
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReversalIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            700
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum YieldCalcDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            701
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPositions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            702
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosType : String {

        public static var tag: Int {
            703
        }

        case AllocationTradeQty = "ALC"
        case OptionAssignment = "AS"
        case AsOfTradeQty = "ASF"
        case DeliveryQty = "DLV"
        case ElectronicTradeQty = "ETR"
        case OptionExerciseQty = "EX"
        case EndOfDayQty = "FIN"
        case IntraSpreadQty = "IAS"
        case InterSpreadQty = "IES"
        case AdjustmentQty = "PA"
        case PitTradeQty = "PIT"
        case StartOfDayQty = "SOD"
        case IntegralSplit = "SPL"
        case TransactionFromAssignment = "TA"
        case TotalTransactionQty = "TOT"
        case TransactionQuantity = "TQ"
        case TransferTradeQty = "TRF"
        case TransactionFromExercise = "TX"
        case CrossMarginQty = "XM"
        case ReceiveQuantity = "RCV"
        case CorporateActionAdjustment = "CAA"
        case DeliveryNoticeQty = "DN"
        case ExchangeForPhysicalQty = "EP"
        case PrivatelyNegotiatedTradeQty = "PNTN"
        case NetDeltaQty = "DLT"
        case CreditEventAdjustment = "CEA"
        case SuccessionEventAdjustment = "SEA"
        case NetQty = "NET"
        case GrossQty = "GRS"
        case IntradayQty = "ITD"
        case GrossLongNonDeltaAdjustedSwaptionPosition = "NDAS"
        case LongDeltaAdjustedPairedSwaptionPosition = "DAS"
        case ExpiringQuantity = "EXP"
        case QuantityNotExercised = "UNEX"
        case RequestedExerciseQuantity = "REQ"
        case CashFuturesEquivalentQuantity = "CFE"
        case LoanOrBorrowedQuantity = "SECLN"
    }

    public enum LongQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            704
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ShortQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            705
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosQtyStatus : String {

        public static var tag: Int {
            706
        }

        case Submitted = "0"
        case Accepted = "1"
        case Rejected = "2"
    }

    public enum PosAmtType : String {

        public static var tag: Int {
            707
        }

        case CashAmount = "CASH"
        case CashResidualAmount = "CRES"
        case FinalMarkToMarketAmount = "FMTM"
        case IncrementalMarkToMarketAmount = "IMTM"
        case PremiumAmount = "PREM"
        case StartOfDayMarkToMarketAmount = "SMTM"
        case TradeVariationAmount = "TVAR"
        case ValueAdjustedAmount = "VADJ"
        case SettlementValue = "SETL"
        case InitialTradeCouponAmount = "ICPN"
        case AccruedCouponAmount = "ACPN"
        case CouponAmount = "CPN"
        case IncrementalAccruedCoupon = "IACPN"
        case CollateralizedMarkToMarket = "CMTM"
        case IncrementalCollateralizedMarkToMarket = "ICMTM"
        case CompensationAmount = "DLV"
        case TotalBankedAmount = "BANK"
        case TotalCollateralizedAmount = "COLAT"
        case LongPairedSwapNotionalValue = "LSNV"
        case ShortPairedSwapNotionalValue = "SSNV"
        case StartOfDayAccruedCoupon = "SACPN"
        case NetPresentValue = "NPV"
        case StartOfDayNetPresentValue = "SNPV"
        case NetCashFlow = "NCF"
        case PresentValueOfFees = "PVFEES"
        case PresentValueOneBasisPoints = "PV01"
        case FiveYearEquivalentNotional = "5YREN"
        case UndiscountedMarkToMarket = "UMTM"
        case MarkToModel = "MTD"
        case MarkToMarketVariance = "VMTM"
        case MarkToModelVariance = "VMTD"
        case UpfrontPayment = "UPFRNT"
        case EndVale = "ENDV"
        case OutstandingMarginLoan = "MGNLN"
        case LoanValue = "LNVL"
    }

    public enum PosAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            708
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosTransType : String {

        public static var tag: Int {
            709
        }

        case Exercise = "1"
        case DoNotExercise = "2"
        case PositionAdjustment = "3"
        case PositionChangeSubmission = "4"
        case Pledge = "5"
        case LargeTraderSubmission = "6"
        case LargePositionsReportingSubmission = "7"
        case LongHoldings = "8"
        case InternalTransfer = "9"
        case TransferOfFirm = "10"
        case ExternalTransfer = "11"
        case CorporateAction = "12"
        case Notification = "13"
        case PositionCreation = "14"
        case Closeout = "15"
        case Reopen = "16"
    }

    public enum PosReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            710
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyings : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            711
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosMaintAction : String {

        public static var tag: Int {
            712
        }

        case New = "1"
        case Replace = "2"
        case Cancel = "3"
        case Reverse = "4"
    }

    public enum OrigPosReqRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            713
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosMaintRptRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            714
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearingBusinessDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            715
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlSessID : String {

        public static var tag: Int {
            716
        }

        case Intraday = "ITD"
        case RegularTradingHours = "RTH"
        case ElectronicTradingHours = "ETH"
        case EndOfDay = "EOD"
    }

    public enum SettlSessSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            717
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdjustmentType : String {

        public static var tag: Int {
            718
        }

        case ProcessRequestAsMarginDisposition = "0"
        case DeltaPlus = "1"
        case DeltaMinus = "2"
        case Final = "3"
        case CustomerSpecificPosition = "4"
    }

    public enum ContraryInstructionIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            719
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriorSpreadIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            720
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosMaintRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            721
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosMaintStatus : String {

        public static var tag: Int {
            722
        }

        case Accepted = "0"
        case AcceptedWithWarnings = "1"
        case Rejected = "2"
        case Completed = "3"
        case CompletedWithWarnings = "4"
    }

    public enum PosMaintResult : String {

        public static var tag: Int {
            723
        }

        case SuccessfulCompletion = "0"
        case Rejected = "1"
        case Other = "99"
    }

    public enum PosReqType : String {

        public static var tag: Int {
            724
        }

        case Positions = "0"
        case Trades = "1"
        case Exercises = "2"
        case Assignments = "3"
        case SettlementActivity = "4"
        case BackoutMessage = "5"
        case DeltaPositions = "6"
        case NetPosition = "7"
        case LargePositionsReporting = "8"
        case ExercisePositionReportingSubmission = "9"
        case PositionLimitReportingSubmissing = "10"
    }

    public enum ResponseTransportType : String {

        public static var tag: Int {
            725
        }

        case Inband = "0"
        case OutOfBand = "1"
    }

    public enum ResponseDestination : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            726
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalNumPosReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            727
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosReqResult : String {

        public static var tag: Int {
            728
        }

        case ValidRequest = "0"
        case InvalidOrUnsupportedRequest = "1"
        case NoPositionsFoundThatMatchCriteria = "2"
        case NotAuthorizedToRequestPositions = "3"
        case RequestForPositionNotSupported = "4"
        case Other = "99"
    }

    public enum PosReqStatus : String {

        public static var tag: Int {
            729
        }

        case Completed = "0"
        case CompletedWithWarnings = "1"
        case Rejected = "2"
    }

    public enum SettlPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            730
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPriceType : String {

        public static var tag: Int {
            731
        }

        case Final = "1"
        case Theoretical = "2"
    }

    public enum UnderlyingSettlPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            732
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlPriceType : String {

        public static var tag: Int {
            733
        }

        case Final = "1"
        case Theoretical = "2"
    }

    public enum PriorSettlPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            734
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoQuoteQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            735
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            736
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocSettlCurrAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            737
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InterestAtMaturity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            738
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDatedDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            739
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPool : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            740
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocInterestAtMaturity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            741
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocAccruedInterestAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            742
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            743
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AssignmentMethod : String {

        public static var tag: Int {
            744
        }

        case ProRata = "P"
        case Random = "R"
    }

    public enum AssignmentUnit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            745
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OpenInterest : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            746
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExerciseMethod : String {

        public static var tag: Int {
            747
        }

        case Automatic = "A"
        case Manual = "M"
    }

    public enum TotNumTradeReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            748
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeRequestResult : String {

        public static var tag: Int {
            749
        }

        case Successful = "0"
        case InvalidOrUnknownInstrument = "1"
        case InvalidTypeOfTradeRequested = "2"
        case InvalidParties = "3"
        case InvalidTransportTypeRequested = "4"
        case InvalidDestinationRequested = "5"
        case TradeRequestTypeNotSupported = "8"
        case NotAuthorized = "9"
        case Other = "99"
    }

    public enum TradeRequestStatus : String {

        public static var tag: Int {
            750
        }

        case Accepted = "0"
        case Completed = "1"
        case Rejected = "2"
    }

    public enum TradeReportRejectReason : String {

        public static var tag: Int {
            751
        }

        case Successful = "0"
        case InvalidPartyInformation = "1"
        case UnknownInstrument = "2"
        case UnauthorizedToReportTrades = "3"
        case InvalidTradeType = "4"
        case PriceExceedsCurrentPriceBand = "5"
        case ReferencePriceNotAvailable = "6"
        case NotionalValueExceedsThreshold = "7"
        case Other = "99"
    }

    public enum SideMultiLegReportingType : String {

        public static var tag: Int {
            752
        }

        case SingleSecurity = "1"
        case IndividualLegOfAMultilegSecurity = "2"
        case MultilegSecurity = "3"
    }

    public enum NoPosAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            753
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AutoAcceptIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            754
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            755
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNested2PartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            756
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested2PartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            757
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested2PartyIDSource : String {

        public static var tag: Int {
            758
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum Nested2PartyRole : String {

        public static var tag: Int {
            759
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum Nested2PartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            760
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BenchmarkSecurityIDSource : String {

        public static var tag: Int {
            761
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum SecuritySubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            762
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecuritySubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            763
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecuritySubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            764
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllowableOneSidednessPct : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            765
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllowableOneSidednessValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            766
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllowableOneSidednessCurr : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            767
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTrdRegTimestamps : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            768
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdRegTimestamp : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            769
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdRegTimestampType : String {

        public static var tag: Int {
            770
        }

        case ExecutionTime = "1"
        case TimeIn = "2"
        case TimeOut = "3"
        case BrokerReceipt = "4"
        case BrokerExecution = "5"
        case DeskReceipt = "6"
        case SubmissionToClearing = "7"
        case TimePriority = "8"
        case OrderbookEntryTime = "9"
        case OrderSubmissionTime = "10"
        case PubliclyReported = "11"
        case PublicReportUpdated = "12"
        case NonPubliclyReported = "13"
        case NonPublicReportUpdated = "14"
        case SubmittedForConfirmation = "15"
        case UpdatedForConfirmation = "16"
        case Confirmed = "17"
        case UpdatedForClearing = "18"
        case Cleared = "19"
        case AllocationsSubmitted = "20"
        case AllocationsUpdated = "21"
        case AllocationsCompleted = "22"
        case SubmittedToRepository = "23"
        case PostTrdContntnEvnt = "24"
        case PostTradeValuation = "25"
        case PreviousTimePriority = "26"
        case IdentifierAssigned = "27"
        case PreviousIdentifierAssigned = "28"
        case OrderCancellationTime = "29"
        case OrderModificationTime = "30"
        case OrderRoutingTime = "31"
        case TradeCancellationTime = "32"
        case TradeModificationTime = "33"
        case ReferenceTimeForNBBO = "34"
    }

    public enum TrdRegTimestampOrigin : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            771
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ConfirmRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            772
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ConfirmType : String {

        public static var tag: Int {
            773
        }

        case Status = "1"
        case Confirmation = "2"
        case ConfirmationRequestRejected = "3"
    }

    public enum ConfirmRejReason : String {

        public static var tag: Int {
            774
        }

        case MismatchedAccount = "1"
        case MissingSettlementInstructions = "2"
        case UnknownOrMissingIndividualAllocId = "3"
        case TransactionNotRecognized = "4"
        case DuplicateTransaction = "5"
        case IncorrectOrMissingInstrument = "6"
        case IncorrectOrMissingPrice = "7"
        case IncorrectOrMissingCommission = "8"
        case IncorrectOrMissingSettlDate = "9"
        case IncorrectOrMissingFundIDOrFundName = "10"
        case IncorrectOrMissingQuantity = "11"
        case IncorrectOrMissingFees = "12"
        case IncorrectOrMissingTax = "13"
        case IncorrectOrMissingParty = "14"
        case IncorrectOrMissingSide = "15"
        case IncorrectOrMissingNetMoney = "16"
        case IncorrectOrMissingTradeDate = "17"
        case IncorrectOrMissingSettlCcyInstructions = "18"
        case IncorrectOrMissingCapacity = "19"
        case Other = "99"
    }

    public enum BookingType : String {

        public static var tag: Int {
            775
        }

        case RegularBooking = "0"
        case CFD = "1"
        case TotalReturnSwap = "2"
    }

    public enum IndividualAllocRejCode : String {

        public static var tag: Int {
            776
        }

        case UnknownAccount = "0"
        case IncorrectQuantity = "1"
        case IncorrectAveragegPrice = "2"
        case UnknownExecutingBrokerMnemonic = "3"
        case CommissionDifference = "4"
        case UnknownOrderID = "5"
        case UnknownListID = "6"
        case OtherSeeText = "7"
        case IncorrectAllocatedQuantity = "8"
        case CalculationDifference = "9"
        case UnknownOrStaleExecID = "10"
        case MismatchedData = "11"
        case UnknownClOrdID = "12"
        case WarehouseRequestRejected = "13"
        case DuplicateOrMissingIndividualAllocId = "14"
        case TradeNotRecognized = "15"
        case DuplicateTrade = "16"
        case IncorrectOrMissingInstrument = "17"
        case IncorrectOrMissingSettlDate = "18"
        case IncorrectOrMissingFundIDOrFundName = "19"
        case IncorrectOrMissingSettlInstructions = "20"
        case IncorrectOrMissingFees = "21"
        case IncorrectOrMissingTax = "22"
        case UnknownOrMissingParty = "23"
        case IncorrectOrMissingSide = "24"
        case IncorrectOrMissingNetMoney = "25"
        case IncorrectOrMissingTradeDate = "26"
        case IncorrectOrMissingSettlCcyInstructions = "27"
        case IncorrectOrMissingProcessCode = "28"
        case Other = "99"
    }

    public enum SettlInstMsgID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            777
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSettlInst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            778
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastUpdateTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            779
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocSettlInstType : String {

        public static var tag: Int {
            780
        }

        case UseDefaultInstructions = "0"
        case DeriveFromParametersProvided = "1"
        case FullDetailsProvided = "2"
        case SSIDBIDsProvided = "3"
        case PhoneForInstructions = "4"
    }

    public enum NoSettlPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            781
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            782
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPartyIDSource : String {

        public static var tag: Int {
            783
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum SettlPartyRole : String {

        public static var tag: Int {
            784
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum SettlPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            785
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPartySubIDType : String {

        public static var tag: Int {
            786
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum DlvyInstType : String {

        public static var tag: Int {
            787
        }

        case Cash = "C"
        case Securities = "S"
    }

    public enum TerminationType : String {

        public static var tag: Int {
            788
        }

        case Overnight = "1"
        case Term = "2"
        case Flexible = "3"
        case Open = "4"
    }

    public enum NextExpectedMsgSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            789
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrdStatusReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            790
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            791
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlInstReqRejCode : String {

        public static var tag: Int {
            792
        }

        case UnableToProcessRequest = "0"
        case UnknownAccount = "1"
        case NoMatchingSettlementInstructionsFound = "2"
        case Other = "99"
    }

    public enum SecondaryAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            793
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocReportType : String {

        public static var tag: Int {
            794
        }

        case PreliminaryRequestToIntermediary = "2"
        case SellsideCalculatedUsingPreliminary = "3"
        case SellsideCalculatedWithoutPreliminary = "4"
        case WarehouseRecap = "5"
        case RequestToIntermediary = "8"
        case Accept = "9"
        case Reject = "10"
        case AcceptPending = "11"
        case Complete = "12"
        case ReversePending = "14"
        case Giveup = "15"
        case Takeup = "16"
        case Reversal = "17"
        case Alleged = "18"
        case SubAllocationGiveup = "19"
    }

    public enum AllocReportRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            795
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCancReplaceReason : String {

        public static var tag: Int {
            796
        }

        case OriginalDetailsIncomplete = "1"
        case ChangeInUnderlyingOrderDetails = "2"
        case CancelledByGiveupFirm = "3"
        case Other = "99"
    }

    public enum CopyMsgIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            797
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocAccountType : String {

        public static var tag: Int {
            798
        }

        case CarriedCustomerSide = "1"
        case CarriedNonCustomerSide = "2"
        case HouseTrader = "3"
        case FloorTrader = "4"
        case CarriedNonCustomerSideCrossMargined = "6"
        case HouseTraderCrossMargined = "7"
        case JointBackOfficeAccount = "8"
    }

    public enum OrderAvgPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            799
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderBookingQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            800
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSettlPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            801
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            802
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartySubIDType : String {

        public static var tag: Int {
            803
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoNestedPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            804
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NestedPartySubIDType : String {

        public static var tag: Int {
            805
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoNested2PartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            806
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested2PartySubIDType : String {

        public static var tag: Int {
            807
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum AllocIntermedReqType : String {

        public static var tag: Int {
            808
        }

        case PendingAccept = "1"
        case PendingRelease = "2"
        case PendingReversal = "3"
        case Accept = "4"
        case BlockLevelReject = "5"
        case AccountLevelReject = "6"
    }

    public enum NoUsernames : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            809
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            810
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceDelta : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            811
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplQueueMax : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            812
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplQueueDepth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            813
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplQueueResolution : String {

        public static var tag: Int {
            814
        }

        case NoActionTaken = "0"
        case QueueFlushed = "1"
        case OverlayLast = "2"
        case EndSession = "3"
    }

    public enum ApplQueueAction : String {

        public static var tag: Int {
            815
        }

        case NoActionTaken = "0"
        case QueueFlushed = "1"
        case OverlayLast = "2"
        case EndSession = "3"
    }

    public enum NoAltMDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            816
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AltMDSourceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            817
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryTradeReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            818
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AvgPxIndicator : String {

        public static var tag: Int {
            819
        }

        case NoAveragePricing = "0"
        case Trade = "1"
        case LastTrade = "2"
        case NotionalValueAveragePxGroupTrade = "3"
        case AveragePricedTrade = "4"
    }

    public enum TradeLinkID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            820
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderInputDevice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            821
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingTradingSessionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            822
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingTradingSessionSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            823
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            824
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExchangeRule : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            825
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAllocIndicator : String {

        public static var tag: Int {
            826
        }

        case AllocationNotRequired = "0"
        case AllocationRequired = "1"
        case UseAllocationProvidedWithTheTrade = "2"
        case AllocationGiveUpExecutor = "3"
        case AllocationFromExecutor = "4"
        case AllocationToClaimAccount = "5"
        case TradeSplit = "6"
    }

    public enum ExpirationCycle : String {

        public static var tag: Int {
            827
        }

        case ExpireOnTradingSessionClose = "0"
        case ExpireOnTradingSessionOpen = "1"
        case SpecifiedExpiration = "2"
    }

    public enum TrdType : String {

        public static var tag: Int {
            828
        }

        case RegularTrade = "0"
        case BlockTrade = "1"
        case EFP = "2"
        case Transfer = "3"
        case LateTrade = "4"
        case TTrade = "5"
        case WeightedAveragePriceTrade = "6"
        case BunchedTrade = "7"
        case LateBunchedTrade = "8"
        case PriorReferencePriceTrade = "9"
        case AfterHoursTrade = "10"
        case ExchangeForRisk = "11"
        case ExchangeForSwap = "12"
        case ExchangeOfFuturesFor = "13"
        case ExchangeOfOptionsForOptions = "14"
        case TradingAtSettlement = "15"
        case AllOrNone = "16"
        case FuturesLargeOrderExecution = "17"
        case ExchangeOfFuturesForFutures = "18"
        case OptionInterimTrade = "19"
        case OptionCabinetTrade = "20"
        case PrivatelyNegotiatedTrades = "22"
        case SubstitutionOfFuturesForForwards = "23"
        case NonStandardSettlement = "48"
        case DerivativeRelatedTransaction = "49"
        case PortfolioTrade = "50"
        case VolumeWeightedAverageTrade = "51"
        case ExchangeGrantedTrade = "52"
        case RepurchaseAgreement = "53"
        case OTC = "54"
        case ExchangeBasisFacility = "55"
        case OpeningTrade = "56"
        case NettedTrade = "57"
        case BlockSwapTrade = "58"
        case CreditEventTrade = "59"
        case SuccessionEventTrade = "60"
        case GiveUpGiveInTrade = "61"
        case DarkTrade = "62"
        case TechnicalTrade = "63"
        case Benchmark = "64"
        case PackageTrade = "65"
        case RollTrade = "66"
        case ErrorTrade = "24"
        case SpecialCumDividend = "25"
        case SpecialExDividend = "26"
        case SpecialCumCoupon = "27"
        case SpecialExCoupon = "28"
        case CashSettlement = "29"
        case SpecialPrice = "30"
        case GuaranteedDelivery = "31"
        case SpecialCumRights = "32"
        case SpecialExRights = "33"
        case SpecialCumCapitalRepayments = "34"
        case SpecialExCapitalRepayments = "35"
        case SpecialCumBonus = "36"
        case SpecialExBonus = "37"
        case LargeTrade = "38"
        case WorkedPrincipalTrade = "39"
        case BlockTrades = "40"
        case NameChange = "41"
        case PortfolioTransfer = "42"
        case ProrogationBuy = "43"
        case ProrogationSell = "44"
        case OptionExercise = "45"
        case DeltaNeutralTransaction = "46"
        case FinancingTransaction = "47"
    }

    public enum TrdSubType : String {

        public static var tag: Int {
            829
        }

        case CMTA = "0"
        case InternalTransferOrAdjustment = "1"
        case ExternalTransferOrTransferOfAccount = "2"
        case RejectForSubmittingSide = "3"
        case AdvisoryForContraSide = "4"
        case OffsetDueToAnAllocation = "5"
        case OnsetDueToAnAllocation = "6"
        case DifferentialSpread = "7"
        case ImpliedSpreadLegExecutedAgainstAnOutright = "8"
        case TransactionFromExercise = "9"
        case TransactionFromAssignment = "10"
        case ACATS = "11"
        case OffHoursTrade = "33"
        case OnHoursTrade = "34"
        case OTCQuote = "35"
        case ConvertedSWAP = "36"
        case WashTrade = "40"
        case TradeAtSettlement = "41"
        case AuctionTrade = "42"
        case TradeAtMarker = "43"
        case CreditDefault = "44"
        case CreditRestructuring = "45"
        case Merger = "46"
        case SpinOff = "47"
        case MultilateralCompression = "48"
        case Balancing = "50"
        case BasisTradeIndexClose = "51"
        case TradeAtCashOpen = "52"
        case AI = "14"
        case B = "15"
        case K = "16"
        case LC = "17"
        case M = "18"
        case N = "19"
        case NM = "20"
        case NR = "21"
        case P = "22"
        case PA = "23"
        case PC = "24"
        case PN = "25"
        case R = "26"
        case RO = "27"
        case RT = "28"
        case SW = "29"
        case T = "30"
        case WN = "31"
        case WT = "32"
        case CrossedTrade = "37"
        case InterimProtectedTrade = "38"
        case LargeInScale = "39"
    }

    public enum TransferReason : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            830
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNumAssignmentReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            832
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AsgnRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            833
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ThresholdAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            834
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PegMoveType : String {

        public static var tag: Int {
            835
        }

        case Floating = "0"
        case Fixed = "1"
    }

    public enum PegOffsetType : String {

        public static var tag: Int {
            836
        }

        case Price = "0"
        case BasisPoints = "1"
        case Ticks = "2"
        case PriceTier = "3"
        case Percentage = "4"
    }

    public enum PegLimitType : String {

        public static var tag: Int {
            837
        }

        case OrBetter = "0"
        case Strict = "1"
        case OrWorse = "2"
    }

    public enum PegRoundDirection : String {

        public static var tag: Int {
            838
        }

        case MoreAggressive = "1"
        case MorePassive = "2"
    }

    public enum PeggedPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            839
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PegScope : String {

        public static var tag: Int {
            840
        }

        case Local = "1"
        case National = "2"
        case Global = "3"
        case NationalExcludingLocal = "4"
    }

    public enum DiscretionMoveType : String {

        public static var tag: Int {
            841
        }

        case Floating = "0"
        case Fixed = "1"
    }

    public enum DiscretionOffsetType : String {

        public static var tag: Int {
            842
        }

        case Price = "0"
        case BasisPoints = "1"
        case Ticks = "2"
        case PriceTier = "3"
    }

    public enum DiscretionLimitType : String {

        public static var tag: Int {
            843
        }

        case OrBetter = "0"
        case Strict = "1"
        case OrWorse = "2"
    }

    public enum DiscretionRoundDirection : String {

        public static var tag: Int {
            844
        }

        case MoreAggressive = "1"
        case MorePassive = "2"
    }

    public enum DiscretionPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            845
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DiscretionScope : String {

        public static var tag: Int {
            846
        }

        case Local = "1"
        case National = "2"
        case Global = "3"
        case NationalExcludingLocal = "4"
    }

    public enum TargetStrategy : String {

        public static var tag: Int {
            847
        }

        case VWAP = "1"
        case Participate = "2"
        case MininizeMarketImpact = "3"
    }

    public enum TargetStrategyParameters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            848
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ParticipationRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            849
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetStrategyPerformance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            850
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastLiquidityInd : String {

        public static var tag: Int {
            851
        }

        case NeitherAddedNorRemovedLiquidity = "0"
        case AddedLiquidity = "1"
        case RemovedLiquidity = "2"
        case LiquidityRoutedOut = "3"
        case Auction = "4"
        case TriggeredStopOrder = "5"
        case TriggeredContingencyOrder = "6"
        case TriggeredMarketOrder = "7"
        case RemovedLiquidityAfterFirmOrderCommitment = "8"
        case AuctionExecutionAfterFirmOrderCommitment = "9"
    }

    public enum PublishTrdIndicator : String {

        public static var tag: Int {
            852
        }

        case DoNotReportTrade = "N"
        case ReportTrade = "Y"
    }

    public enum ShortSaleReason : String {

        public static var tag: Int {
            853
        }

        case DealerSoldShort = "0"
        case DealerSoldShortExempt = "1"
        case SellingCustomerSoldShort = "2"
        case SellingCustomerSoldShortExempt = "3"
        case QualifiedServiceRepresentative = "4"
        case QSROrAGUContraSideSoldShortExempt = "5"
    }

    public enum QtyType : String {

        public static var tag: Int {
            854
        }

        case Units = "0"
        case Contracts = "1"
        case UnitsOfMeasurePerTimeUnit = "2"
    }

    public enum SecondaryTrdType : String {

        public static var tag: Int {
            855
        }

        case RegularTrade = "0"
        case BlockTrade = "1"
        case EFP = "2"
        case Transfer = "3"
        case LateTrade = "4"
        case TTrade = "5"
        case WeightedAveragePriceTrade = "6"
        case BunchedTrade = "7"
        case LateBunchedTrade = "8"
        case PriorReferencePriceTrade = "9"
        case AfterHoursTrade = "10"
        case ExchangeForRisk = "11"
        case ExchangeForSwap = "12"
        case ExchangeOfFuturesFor = "13"
        case ExchangeOfOptionsForOptions = "14"
        case TradingAtSettlement = "15"
        case AllOrNone = "16"
        case FuturesLargeOrderExecution = "17"
        case ExchangeOfFuturesForFutures = "18"
        case OptionInterimTrade = "19"
        case OptionCabinetTrade = "20"
        case PrivatelyNegotiatedTrades = "22"
        case SubstitutionOfFuturesForForwards = "23"
        case NonStandardSettlement = "48"
        case DerivativeRelatedTransaction = "49"
        case PortfolioTrade = "50"
        case VolumeWeightedAverageTrade = "51"
        case ExchangeGrantedTrade = "52"
        case RepurchaseAgreement = "53"
        case OTC = "54"
        case ExchangeBasisFacility = "55"
        case OpeningTrade = "56"
        case NettedTrade = "57"
        case BlockSwapTrade = "58"
        case CreditEventTrade = "59"
        case SuccessionEventTrade = "60"
        case GiveUpGiveInTrade = "61"
        case DarkTrade = "62"
        case TechnicalTrade = "63"
        case Benchmark = "64"
        case PackageTrade = "65"
        case RollTrade = "66"
        case ErrorTrade = "24"
        case SpecialCumDividend = "25"
        case SpecialExDividend = "26"
        case SpecialCumCoupon = "27"
        case SpecialExCoupon = "28"
        case CashSettlement = "29"
        case SpecialPrice = "30"
        case GuaranteedDelivery = "31"
        case SpecialCumRights = "32"
        case SpecialExRights = "33"
        case SpecialCumCapitalRepayments = "34"
        case SpecialExCapitalRepayments = "35"
        case SpecialCumBonus = "36"
        case SpecialExBonus = "37"
        case LargeTrade = "38"
        case WorkedPrincipalTrade = "39"
        case BlockTrades = "40"
        case NameChange = "41"
        case PortfolioTransfer = "42"
        case ProrogationBuy = "43"
        case ProrogationSell = "44"
        case OptionExercise = "45"
        case DeltaNeutralTransaction = "46"
        case FinancingTransaction = "47"
    }

    public enum TradeReportType : String {

        public static var tag: Int {
            856
        }

        case Submit = "0"
        case Alleged = "1"
        case Accept = "2"
        case Decline = "3"
        case Addendum = "4"
        case No = "5"
        case TradeReportCancel = "6"
        case LockedIn = "7"
        case Defaulted = "8"
        case InvalidCMTA = "9"
        case Pended = "10"
        case AllegedNew = "11"
        case AllegedAddendum = "12"
        case AllegedNo = "13"
        case AllegedTradeReportCancel = "14"
        case AllegedTradeBreak = "15"
        case Verify = "16"
        case Dispute = "17"
        case NonMaterialUpdate = "18"
    }

    public enum AllocNoOrdersType : String {

        public static var tag: Int {
            857
        }

        case NotSpecified = "0"
        case ExplicitListProvided = "1"
    }

    public enum SharedCommission : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            858
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ConfirmReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            859
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AvgParPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            860
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReportedPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            861
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoCapacities : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            862
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderCapacityQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            863
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            864
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EventType : String {

        public static var tag: Int {
            865
        }

        case Put = "1"
        case Call = "2"
        case Tender = "3"
        case SinkingFundCall = "4"
        case Activation = "5"
        case Inactiviation = "6"
        case LastEligibleTradeDate = "7"
        case SwapStartDate = "8"
        case SwapEndDate = "9"
        case SwapRollDate = "10"
        case SwapNextStartDate = "11"
        case SwapNextRollDate = "12"
        case FirstDeliveryDate = "13"
        case LastDeliveryDate = "14"
        case InitialInventoryDueDate = "15"
        case FinalInventoryDueDate = "16"
        case FirstIntentDate = "17"
        case LastIntentDate = "18"
        case PositionRemovalDate = "19"
        case MinimumNotice = "20"
        case DeliveryStartTime = "21"
        case DeliveryEndTime = "22"
        case FirstNoticeDate = "23"
        case LastNoticeDate = "24"
        case FirstExerciseDate = "25"
        case RedemptionDate = "26"
        case TrdCntntnEfctvDt = "27"
        case Other = "99"
    }

    public enum EventDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            866
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EventPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            867
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            868
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PctAtRisk : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            869
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoInstrAttrib : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            870
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrAttribType : String {

        public static var tag: Int {
            871
        }

        case Flat = "1"
        case ZeroCoupon = "2"
        case InterestBearing = "3"
        case NoPeriodicPayments = "4"
        case VariableRate = "5"
        case LessFeeForPut = "6"
        case SteppedCoupon = "7"
        case CouponPeriod = "8"
        case When = "9"
        case OriginalIssueDiscount = "10"
        case Callable = "11"
        case EscrowedToMaturity = "12"
        case EscrowedToRedemptionDate = "13"
        case PreRefunded = "14"
        case InDefault = "15"
        case Unrated = "16"
        case Taxable = "17"
        case Indexed = "18"
        case SubjectToAlternativeMinimumTax = "19"
        case OriginalIssueDiscountPrice = "20"
        case CallableBelowMaturityValue = "21"
        case CallableWithoutNotice = "22"
        case PriceTickRulesForSecurity = "23"
        case TradeTypeEligibilityDetailsForSecurity = "24"
        case InstrumentDenominator = "25"
        case InstrumentNumerator = "26"
        case InstrumentPricePrecision = "27"
        case InstrumentStrikePrice = "28"
        case TradeableIndicator = "29"
        case InstrumentEligibleAnonOrders = "30"
        case MinGuaranteedFillVolume = "31"
        case MinGuaranteedFillStatus = "32"
        case TradeAtSettlementEligibility = "33"
        case TestInstrument = "34"
        case DummyInstrument = "35"
        case NegativeSettlementPriceEligibility = "36"
        case NegativeStrikePriceEligibility = "37"
        case USStdContractInd = "38"
        case AdmittedToTradingOnTradingVenue = "39"
        case AverageDailyNotionalAmount = "40"
        case AverageDailyNumberTrades = "41"
        case Text = "99"
    }

    public enum InstrAttribValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            872
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DatedDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            873
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InterestAccrualDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            874
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CPProgram : String {

        public static var tag: Int {
            875
        }

        case Program3a3 = "1"
        case Program42 = "2"
        case Program3a2 = "3"
        case Program3a3And3c7 = "4"
        case Program3a4 = "5"
        case Program3a5 = "6"
        case Program3a7 = "7"
        case Program3c7 = "8"
        case Other = "99"
    }

    public enum CPRegType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            876
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCPProgram : String {

        public static var tag: Int {
            877
        }

        case Program3a3 = "1"
        case Program42 = "2"
        case Program3a2 = "3"
        case Program3a3And3c7 = "4"
        case Program3a4 = "5"
        case Program3a5 = "6"
        case Program3a7 = "7"
        case Program3c7 = "8"
        case Other = "99"
    }

    public enum UnderlyingCPRegType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            878
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            879
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdMatchID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            880
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryTradeReportRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            881
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDirtyPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            882
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEndPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            883
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStartValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            884
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCurrentValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            885
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEndValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            886
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStips : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            887
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStipType : String {

        public static var tag: Int {
            888
        }

        case AlternativeMinimumTax = "AMT"
        case AutoReinvestment = "AUTOREINV"
        case BankQualified = "BANKQUAL"
        case BargainConditions = "BGNCON"
        case CouponRange = "COUPON"
        case ISOCurrencyCode = "CURRENCY"
        case CustomStart = "CUSTOMDATE"
        case Geographics = "GEOG"
        case ValuationDiscount = "HAIRCUT"
        case Insured = "INSURED"
        case IssueDate = "ISSUE"
        case Issuer = "ISSUER"
        case IssueSizeRange = "ISSUESIZE"
        case LookbackDays = "LOOKBACK"
        case ExplicitLotIdentifier = "LOT"
        case LotVariance = "LOTVAR"
        case MaturityYearAndMonth = "MAT"
        case MaturityRange = "MATURITY"
        case MaximumSubstitutions = "MAXSUBS"
        case MinimumDenomination = "MINDNOM"
        case MinimumIncrement = "MININCR"
        case MinimumQuantity = "MINQTY"
        case PaymentFrequency = "PAYFREQ"
        case NumberOfPieces = "PIECES"
        case PoolsMaximum = "PMAX"
        case PoolsPerLot = "PPL"
        case PoolsPerMillion = "PPM"
        case PoolsPerTrade = "PPT"
        case PriceRange = "PRICE"
        case PricingFrequency = "PRICEFREQ"
        case ProductionYear = "PROD"
        case CallProtection = "PROTECT"
        case Purpose = "PURPOSE"
        case BenchmarkPriceSource = "PXSOURCE"
        case RatingSourceAndRange = "RATING"
        case TypeOfRedemption = "REDEMPTION"
        case Restricted = "RESTRICTED"
        case MarketSector = "SECTOR"
        case SecurityTypeIncludedOrExcluded = "SECTYPE"
        case Structure = "STRUCT"
        case SubstitutionsFrequency = "SUBSFREQ"
        case SubstitutionsLeft = "SUBSLEFT"
        case FreeformText = "TEXT"
        case TradeVariance = "TRDVAR"
        case WeightedAverageCoupon = "WAC"
        case WeightedAverageLifeCoupon = "WAL"
        case WeightedAverageLoanAge = "WALA"
        case WeightedAverageMaturity = "WAM"
        case WholePool = "WHOLE"
        case YieldRange = "YIELD"
        case OriginalAmount = "ORIGAMT"
        case PoolEffectiveDate = "POOLEFFDT"
        case PoolInitialFactor = "POOLINITFCTR"
        case Tranche = "TRANCHE"
        case Substitution = "SUBSTITUTION"
        case MULTEXCHFLLBCK = "MULTEXCHFLLBCK"
        case COMPSECFLLBCK = "COMPSECFLLBCK"
        case LOCLJRSDCTN = "LOCLJRSDCTN"
        case RELVJRSDCTN = "RELVJRSDCTN"
        case IncurredRecovery = "INCURRCVY"
        case AdditionalTerm = "ADDTRM"
        case ModifiedEquityDelivery = "MODEQTYDLVY"
        case NoReferenceOblication = "NOREFOBLIG"
        case UnknownReferenceObligation = "UNKREFOBLIG"
        case AllGuarantees = "ALLGUARANTEES"
        case ReferencePrice = "REFPX"
        case ReferencePolicy = "REFPOLICY"
        case SecuredList = "SECRDLIST"
        case AverageFICOScore = "AVFICO"
        case AverageLoanSize = "AVSIZE"
        case MaximumLoanBalance = "MAXBAL"
        case PoolIdentifier = "POOL"
        case TypeOfRollTrade = "ROLLTYPE"
        case ReferenceToRollingOrClosingTrade = "REFTRADE"
        case PrincipalOfRollingOrClosingTrade = "REFPRIN"
        case InterestOfRollingOrClosingTrade = "REFINT"
        case AvailableOfferQuantityToBeShownToTheStreet = "AVAILQTY"
        case BrokerCredit = "BROKERCREDIT"
        case OfferPriceToBeShownToInternalBrokers = "INTERNALPX"
        case OfferQuantityToBeShownToInternalBrokers = "INTERNALQTY"
        case TheMinimumResidualOfferQuantity = "LEAVEQTY"
        case MaximumOrderSize = "MAXORDQTY"
        case OrderQuantityIncrement = "ORDRINCR"
        case PrimaryOrSecondaryMarketIndicator = "PRIMARY"
        case BrokerSalesCreditOverride = "SALESCREDITOVR"
        case TraderCredit = "TRADERCREDIT"
        case DiscountRate = "DISCOUNT"
        case YieldToMaturity = "YTM"
        case InterestPayoffOfRollingOrAmendingTrade = "PAYOFF"
        case AbsolutePrepaymentSpeed = "ABS"
        case ConstantPrepaymentPenalty = "CPP"
        case ConstantPrepaymentRate = "CPR"
        case ConstantPrepaymentYield = "CPY"
        case FinalCPROfHomeEquityPrepaymentCurve = "HEP"
        case PercentOfManufacturedHousingPrepaymentCurve = "MHP"
        case MonthlyPrepaymentRate = "MPR"
        case PercentOfProspectusPrepaymentCurve = "PPC"
        case PercentOfBMAPrepaymentCurve = "PSA"
        case SingleMonthlyMortality = "SMM"
    }

    public enum UnderlyingStipValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            889
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityNetMoney : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            890
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeBasis : String {

        public static var tag: Int {
            891
        }

        case Absolute = "0"
        case PerUnit = "1"
        case Percentage = "2"
    }

    public enum TotNoAllocs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            892
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastFragment : String {

        public static var tag: Int {
            893
        }

        case NotLastMessage = "N"
        case LastMessage = "Y"
    }

    public enum CollReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            894
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollAsgnReason : String {

        public static var tag: Int {
            895
        }

        case Initial = "0"
        case Scheduled = "1"
        case TimeWarning = "2"
        case MarginDeficiency = "3"
        case MarginExcess = "4"
        case ForwardCollateralDemand = "5"
        case EventOfDefault = "6"
        case AdverseTaxEvent = "7"
        case TransferDeposit = "8"
        case TransferWithdrawal = "9"
        case Pledge = "10"
    }

    public enum CollInquiryQualifier : String {

        public static var tag: Int {
            896
        }

        case TradeDate = "0"
        case GCInstrument = "1"
        case CollateralInstrument = "2"
        case SubstitutionEligible = "3"
        case NotAssigned = "4"
        case PartiallyAssigned = "5"
        case FullyAssigned = "6"
        case OutstandingTrades = "7"
    }

    public enum NoTrades : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            897
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginRatio : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            898
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginExcess : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            899
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalNetValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            900
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            901
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollAsgnID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            902
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollAsgnTransType : String {

        public static var tag: Int {
            903
        }

        case New = "0"
        case Replace = "1"
        case Cancel = "2"
        case Release = "3"
        case Reverse = "4"
    }

    public enum CollRespID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            904
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollAsgnRespType : String {

        public static var tag: Int {
            905
        }

        case Received = "0"
        case Accepted = "1"
        case Declined = "2"
        case Rejected = "3"
        case TransactionPending = "4"
        case TransactionCompletedWithWarning = "5"
    }

    public enum CollAsgnRejectReason : String {

        public static var tag: Int {
            906
        }

        case UnknownDeal = "0"
        case UnknownOrInvalidInstrument = "1"
        case UnauthorizedTransaction = "2"
        case InsufficientCollateral = "3"
        case InvalidTypeOfCollateral = "4"
        case ExcessiveSubstitution = "5"
        case Other = "99"
    }

    public enum CollAsgnRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            907
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            908
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollInquiryID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            909
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollStatus : String {

        public static var tag: Int {
            910
        }

        case Unassigned = "0"
        case PartiallyAssigned = "1"
        case AssignmentProposed = "2"
        case Assigned = "3"
        case Challenged = "4"
        case Reused = "5"
    }

    public enum TotNumReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            911
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastRptRequested : String {

        public static var tag: Int {
            912
        }

        case NotLastMessage = "N"
        case LastMessage = "Y"
    }

    public enum AgreementDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            913
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AgreementID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            914
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AgreementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            915
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            916
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            917
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AgreementCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            918
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryType : String {

        public static var tag: Int {
            919
        }

        case VersusPayment = "0"
        case Free = "1"
        case TriParty = "2"
        case HoldInCustody = "3"
        case DeliverByValue = "4"
    }

    public enum EndAccruedInterestAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            920
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StartCash : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            921
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndCash : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            922
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UserRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            923
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UserRequestType : String {

        public static var tag: Int {
            924
        }

        case LogOnUser = "1"
        case LogOffUser = "2"
        case ChangePasswordForUser = "3"
        case RequestIndividualUserStatus = "4"
        case RequestThrottleLimit = "5"
    }

    public enum NewPassword : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            925
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UserStatus : String {

        public static var tag: Int {
            926
        }

        case LoggedIn = "1"
        case NotLoggedIn = "2"
        case UserNotRecognised = "3"
        case PasswordIncorrect = "4"
        case PasswordChanged = "5"
        case Other = "6"
        case ForcedUserLogoutByExchange = "7"
        case SessionShutdownWarning = "8"
        case ThrottleParametersChanged = "9"
    }

    public enum UserStatusText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            927
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StatusValue : String {

        public static var tag: Int {
            928
        }

        case Connected = "1"
        case NotConnectedUnexpected = "2"
        case NotConnectedExpected = "3"
        case InProcess = "4"
    }

    public enum StatusText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            929
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefCompID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            930
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            931
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NetworkResponseID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            932
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NetworkRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            933
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastNetworkResponseID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            934
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NetworkRequestType : String {

        public static var tag: Int {
            935
        }

        case Snapshot = "1"
        case Subscribe = "2"
        case StopSubscribing = "4"
        case LevelOfDetail = "8"
    }

    public enum NoCompIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            936
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NetworkStatusResponseType : String {

        public static var tag: Int {
            937
        }

        case Full = "1"
        case IncrementalUpdate = "2"
    }

    public enum NoCollInquiryQualifier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            938
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdRptStatus : String {

        public static var tag: Int {
            939
        }

        case Accepted = "0"
        case Rejected = "1"
        case Cancelled = "2"
        case AcceptedWithErrors = "3"
        case PendingNew = "4"
        case PendingCancel = "5"
        case PendingReplace = "6"
        case Terminated = "7"
        case PendingVerification = "8"
        case DeemedVerified = "9"
        case Verified = "10"
        case Disputed = "11"
    }

    public enum AffirmStatus : String {

        public static var tag: Int {
            940
        }

        case Received = "1"
        case ConfirmRejected = "2"
        case Affirmed = "3"
    }

    public enum UnderlyingStrikeCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            941
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            942
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TimeBracket : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            943
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollAction : String {

        public static var tag: Int {
            944
        }

        case Retain = "0"
        case Add = "1"
        case Remove = "2"
    }

    public enum CollInquiryStatus : String {

        public static var tag: Int {
            945
        }

        case Accepted = "0"
        case AcceptedWithWarnings = "1"
        case Completed = "2"
        case CompletedWithWarnings = "3"
        case Rejected = "4"
    }

    public enum CollInquiryResult : String {

        public static var tag: Int {
            946
        }

        case Successful = "0"
        case InvalidOrUnknownInstrument = "1"
        case InvalidOrUnknownCollateralType = "2"
        case InvalidParties = "3"
        case InvalidTransportTypeRequested = "4"
        case InvalidDestinationRequested = "5"
        case NoCollateralFoundForTheTradeSpecified = "6"
        case NoCollateralFoundForTheOrderSpecified = "7"
        case CollateralInquiryTypeNotSupported = "8"
        case UnauthorizedForCollateralInquiry = "9"
        case Other = "99"
    }

    public enum StrikeCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            947
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNested3PartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            948
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested3PartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            949
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested3PartyIDSource : String {

        public static var tag: Int {
            950
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum Nested3PartyRole : String {

        public static var tag: Int {
            951
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoNested3PartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            952
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested3PartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            953
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested3PartySubIDType : String {

        public static var tag: Int {
            954
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum LegContractSettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            955
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInterestAccrualDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            956
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStrategyParameters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            957
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrategyParameterName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            958
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrategyParameterType : String {

        public static var tag: Int {
            959
        }

        case Int = "1"
        case Length = "2"
        case NumInGroup = "3"
        case SeqNum = "4"
        case TagNum = "5"
        case Float = "6"
        case Qty = "7"
        case Price = "8"
        case PriceOffset = "9"
        case Amt = "10"
        case Percentage = "11"
        case Char = "12"
        case Boolean = "13"
        case String = "14"
        case MultipleCharValue = "15"
        case Currency = "16"
        case Exchange = "17"
        case MonthYear = "18"
        case UTCTimestamp = "19"
        case UTCTimeOnly = "20"
        case LocalMktDate = "21"
        case UTCDateOnly = "22"
        case Data = "23"
        case MultipleStringValue = "24"
        case Country = "25"
        case Language = "26"
        case TZTimeOnly = "27"
        case TZTimestamp = "28"
        case Tenor = "29"
    }

    public enum StrategyParameterValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            960
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HostCrossID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            961
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideTimeInForce : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            962
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            963
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            964
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityStatus : String {

        public static var tag: Int {
            965
        }

        case Active = "1"
        case Inactive = "2"
        case ActiveClosingOrdersOnly = "3"
        case Expired = "4"
        case Delisted = "5"
        case KnockedOut = "6"
        case KnockOutRevoked = "7"
        case PendingExpiry = "8"
        case Suspended = "9"
        case Published = "10"
        case PendingDeletion = "11"
    }

    public enum SettleOnOpenFlag : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            966
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikeMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            967
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            968
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinPriceIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            969
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            970
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NTPositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            971
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAllocationPercent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            972
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            973
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashType : String {

        public static var tag: Int {
            974
        }

        case FIXED = "FIXED"
        case DIFF = "DIFF"
    }

    public enum UnderlyingSettlementType : String {

        public static var tag: Int {
            975
        }

        case TPlus1 = "2"
        case TPlus3 = "4"
        case TPlus4 = "5"
    }

    public enum QuantityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            976
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContIntRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            977
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LateIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            978
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InputSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            979
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityUpdateAction : String {

        public static var tag: Int {
            980
        }

        case Add = "A"
        case Delete = "D"
        case Modify = "M"
    }

    public enum NoExpiration : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            981
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExpirationQtyType : String {

        public static var tag: Int {
            982
        }

        case AutoExercise = "1"
        case NonAutoExercise = "2"
        case FinalWillBeExercised = "3"
        case ContraryIntention = "4"
        case Difference = "5"
    }

    public enum ExpQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            983
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingAmounts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            984
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPayAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            985
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCollectAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            986
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            987
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlementStatus : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            988
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryIndividualAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            989
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            990
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RndPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            991
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IndividualAllocType : String {

        public static var tag: Int {
            992
        }

        case SubAllocate = "1"
        case ThirdPartyAllocation = "2"
    }

    public enum AllocCustomerCapacity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            993
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TierCode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            994
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnitOfMeasure : String {

        public static var tag: Int {
            996
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum TimeUnit : String {

        public static var tag: Int {
            997
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum UnderlyingUnitOfMeasure : String {

        public static var tag: Int {
            998
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegUnitOfMeasure : String {

        public static var tag: Int {
            999
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingTimeUnit : String {

        public static var tag: Int {
            1000
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum LegTimeUnit : String {

        public static var tag: Int {
            1001
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum AllocMethod : String {

        public static var tag: Int {
            1002
        }

        case Automatic = "1"
        case Guarantor = "2"
        case Manual = "3"
        case BrokerAssigned = "4"
    }

    public enum TradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1003
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideTradeReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1005
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideFillStationCd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1006
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideReasonCd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1007
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideTrdSubTyp : String {

        public static var tag: Int {
            1008
        }

        case CMTA = "0"
        case InternalTransferOrAdjustment = "1"
        case ExternalTransferOrTransferOfAccount = "2"
        case RejectForSubmittingSide = "3"
        case AdvisoryForContraSide = "4"
        case OffsetDueToAnAllocation = "5"
        case OnsetDueToAnAllocation = "6"
        case DifferentialSpread = "7"
        case ImpliedSpreadLegExecutedAgainstAnOutright = "8"
        case TransactionFromExercise = "9"
        case TransactionFromAssignment = "10"
        case ACATS = "11"
        case OffHoursTrade = "33"
        case OnHoursTrade = "34"
        case OTCQuote = "35"
        case ConvertedSWAP = "36"
        case WashTrade = "40"
        case TradeAtSettlement = "41"
        case AuctionTrade = "42"
        case TradeAtMarker = "43"
        case CreditDefault = "44"
        case CreditRestructuring = "45"
        case Merger = "46"
        case SpinOff = "47"
        case MultilateralCompression = "48"
        case Balancing = "50"
        case BasisTradeIndexClose = "51"
        case TradeAtCashOpen = "52"
        case AI = "14"
        case B = "15"
        case K = "16"
        case LC = "17"
        case M = "18"
        case N = "19"
        case NM = "20"
        case NR = "21"
        case P = "22"
        case PA = "23"
        case PC = "24"
        case PN = "25"
        case R = "26"
        case RO = "27"
        case RT = "28"
        case SW = "29"
        case T = "30"
        case WN = "31"
        case WT = "32"
        case CrossedTrade = "37"
        case InterimProtectedTrade = "38"
        case LargeInScale = "39"
    }

    public enum SideLastQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1009
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MessageEventSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1011
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideTrdRegTimestamp : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1012
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideTrdRegTimestampType : String {

        public static var tag: Int {
            1013
        }

        case ExecutionTime = "1"
        case TimeIn = "2"
        case TimeOut = "3"
        case BrokerReceipt = "4"
        case BrokerExecution = "5"
        case DeskReceipt = "6"
        case SubmissionToClearing = "7"
        case TimePriority = "8"
        case OrderbookEntryTime = "9"
        case OrderSubmissionTime = "10"
        case PubliclyReported = "11"
        case PublicReportUpdated = "12"
        case NonPubliclyReported = "13"
        case NonPublicReportUpdated = "14"
        case SubmittedForConfirmation = "15"
        case UpdatedForConfirmation = "16"
        case Confirmed = "17"
        case UpdatedForClearing = "18"
        case Cleared = "19"
        case AllocationsSubmitted = "20"
        case AllocationsUpdated = "21"
        case AllocationsCompleted = "22"
        case SubmittedToRepository = "23"
        case PostTrdContntnEvnt = "24"
        case PostTradeValuation = "25"
        case PreviousTimePriority = "26"
        case IdentifierAssigned = "27"
        case PreviousIdentifierAssigned = "28"
        case OrderCancellationTime = "29"
        case OrderModificationTime = "30"
        case OrderRoutingTime = "31"
        case TradeCancellationTime = "32"
        case TradeModificationTime = "33"
        case ReferenceTimeForNBBO = "34"
    }

    public enum SideTrdRegTimestampSrc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1014
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AsOfIndicator : String {

        public static var tag: Int {
            1015
        }

        case False = "0"
        case True = "1"
    }

    public enum NoSideTrdRegTS : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1016
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionRatio : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1017
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoInstrumentParties : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1018
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1019
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeVolume : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1020
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDBookType : String {

        public static var tag: Int {
            1021
        }

        case TopOfBook = "1"
        case PriceDepth = "2"
        case OrderDepth = "3"
    }

    public enum MDFeedType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1022
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDPriceLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1023
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDOriginType : String {

        public static var tag: Int {
            1024
        }

        case Book = "0"
        case OffBook = "1"
        case Cross = "2"
        case QuoteDrivenMarket = "3"
        case DarkOrderBook = "4"
        case AuctionDrivenMarket = "5"
        case QuoteNegotiation = "6"
        case VoiceNegotiation = "7"
        case HybridMarket = "8"
    }

    public enum FirstPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1025
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntrySpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1026
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDEntryForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1027
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ManualOrderIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1028
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CustDirectedOrder : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1029
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReceivedDeptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1030
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CustOrderHandlingInst : String {

        public static var tag: Int {
            1031
        }

        case PhoneSimple = "A"
        case PhoneComplex = "B"
        case FCMProvidedScreen = "C"
        case OtherProvidedScreen = "D"
        case ClientProvidedPlatformControlledByFCM = "E"
        case ClientProvidedPlatformDirectToExchange = "F"
        case AlgoEngine = "H"
        case PriceAtExecution = "J"
        case DeskElectronic = "W"
        case DeskPit = "X"
        case ClientElectronic = "Y"
        case ClientPit = "Z"
        case AddOnOrder = "ADD"
        case AllOrNone = "AON"
        case ConditionalOrder = "CND"
        case CashNotHeld = "CNH"
        case DeliveryInstructionsCash = "CSH"
        case DirectedOrder = "DIR"
        case DiscretionaryLimitOrder = "DLO"
        case ExchangeForPhysicalTransaction = "E.W"
        case FillOrKill = "FOK"
        case IntraDayCross = "IDX"
        case ImbalanceOnly = "IO"
        case ImmediateOrCancel = "IOC"
        case IntermarketSweepOrder = "ISO"
        case LimitOnOpen = "LOO"
        case LimitOnClose = "LOC"
        case MarketAtOpen = "MAO"
        case MarketAtClose = "MAC"
        case MarketOnOpen = "MOO"
        case MarketOnClose = "MOC"
        case MergerRelatedTransferPosition = "MPT"
        case MinimumQuantity = "MQT"
        case MarketToLimit = "MTL"
        case DeliveryInstructionsNextDay = "ND"
        case NotHeld = "NH"
        case OptionsRelatedTransaction = "OPT"
        case OverTheDay = "OVD"
        case Pegged = "PEG"
        case ReserveSizeOrder = "RSV"
        case StopStockTransaction = "S.W"
        case Scale = "SCL"
        case DeliveryInstructionsSellersOption = "SLR"
        case TimeOrder = "TMO"
        case TrailingStop = "TS"
        case Work = "WRK"
        case StayOnOfferside = "F0"
        case GoAlong = "F3"
        case ParticipateDoNotInitiate = "F6"
        case StrictScale = "F7"
        case TryToScale = "F8"
        case StayOnBidside = "F9"
        case NoCross = "FA"
        case OKToCross = "FB"
        case CallFirst = "FC"
        case PercentOfVolume = "FD"
        case ReinstateOnSystemFailure = "FH"
        case InstitutionOnly = "FI"
        case ReinstateOnTradingHalt = "FJ"
        case CancelOnTradingHalf = "FK"
        case LastPeg = "FL"
        case MidPricePeg = "FM"
        case NonNegotiable = "FN"
        case OpeningPeg = "FO"
        case MarketPeg = "FP"
        case CancelOnSystemFailure = "FQ"
        case PrimaryPeg = "FR"
        case Suspend = "FS"
        case FixedPegToLocalBBO = "FT"
        case PegToVWAP = "FW"
        case TradeAlong = "FX"
        case TryToStop = "FY"
        case CancelIfNotBest = "FZ"
        case StrictLimit = "Fb"
        case IgnorePriceValidityChecks = "Fc"
        case PegToLimitPrice = "Fd"
        case WorkToTargetStrategy = "Fe"
        case GOrderAndFCMAPIorFIX = "G"
    }

    public enum OrderHandlingInstSource : String {

        public static var tag: Int {
            1032
        }

        case FINRAOATS = "1"
        case FIAExecutionSourceCode = "2"
    }

    public enum DeskType : String {

        public static var tag: Int {
            1033
        }

        case Agency = "A"
        case Arbitrage = "AR"
        case BlockTrading = "B"
        case ConvertibleDesk = "C"
        case CentralRiskBooks = "CR"
        case Derivatives = "D"
        case EquityCapitalMarkets = "EC"
        case International = "IN"
        case Institutional = "IS"
        case Other = "O"
        case PreferredTrading = "PF"
        case Proprietary = "PR"
        case ProgramTrading = "PT"
        case Sales = "S"
        case Swaps = "SW"
        case TradingDeskSystem = "T"
        case Treasury = "TR"
    }

    public enum DeskTypeSource : String {

        public static var tag: Int {
            1034
        }

        case FINRAOATS = "1"
    }

    public enum DeskOrderHandlingInst : String {

        public static var tag: Int {
            1035
        }

        case AddOnOrder = "ADD"
        case AllOrNone = "AON"
        case CashNotHeld = "CNH"
        case DirectedOrder = "DIR"
        case ExchangeForPhysicalTransaction = "E.W"
        case FillOrKill = "FOK"
        case ImbalanceOnly = "IO"
        case ImmediateOrCancel = "IOC"
        case LimitOnOpen = "LOO"
        case LimitOnClose = "LOC"
        case MarketAtOpen = "MAO"
        case MarketAtClose = "MAC"
        case MarketOnOpen = "MOO"
        case MarketOnClose = "MOC"
        case MinimumQuantity = "MQT"
        case NotHeld = "NH"
        case OverTheDay = "OVD"
        case Pegged = "PEG"
        case ReserveSizeOrder = "RSV"
        case StopStockTransaction = "S.W"
        case Scale = "SCL"
        case TimeOrder = "TMO"
        case TrailingStop = "TS"
        case Work = "WRK"
    }

    public enum ExecAckStatus : String {

        public static var tag: Int {
            1036
        }

        case Received = "0"
        case Accepted = "1"
        case Don = "2"
    }

    public enum UnderlyingDeliveryAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1037
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCapValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1038
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethod : String {

        public static var tag: Int {
            1039
        }

        case CashSettlementRequired = "C"
        case PhysicalSettlementRequired = "P"
        case Election = "E"
    }

    public enum SecondaryTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1040
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FirmTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1041
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryFirmTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1042
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollApplType : String {

        public static var tag: Int {
            1043
        }

        case SpecificDeposit = "0"
        case General = "1"
    }

    public enum UnderlyingAdjustedQuantity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1044
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1045
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFXRateCalc : String {

        public static var tag: Int {
            1046
        }

        case Divide = "D"
        case Multiply = "M"
    }

    public enum AllocPositionEffect : String {

        public static var tag: Int {
            1047
        }

        case Open = "O"
        case Close = "C"
        case Rolled = "R"
        case FIFO = "F"
    }

    public enum DealingCapacity : String {

        public static var tag: Int {
            1048
        }

        case Agent = "A"
        case Principal = "P"
        case RisklessPrincipal = "R"
    }

    public enum InstrmtAssignmentMethod : String {

        public static var tag: Int {
            1049
        }

        case ProRata = "P"
        case Random = "R"
    }

    public enum InstrumentPartyIDSource : String {

        public static var tag: Int {
            1050
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum InstrumentPartyRole : String {

        public static var tag: Int {
            1051
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoInstrumentPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1052
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1053
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentPartySubIDType : String {

        public static var tag: Int {
            1054
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum PositionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1055
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CalculatedCcyLastQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1056
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AggressorIndicator : String {

        public static var tag: Int {
            1057
        }

        case OrderInitiatorIsAggressor = "Y"
        case OrderInitiatorIsPassive = "N"
    }

    public enum NoUndlyInstrumentParties : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1058
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrumentPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1059
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrumentPartyIDSource : String {

        public static var tag: Int {
            1060
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum UnderlyingInstrumentPartyRole : String {

        public static var tag: Int {
            1061
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoUndlyInstrumentPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1062
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrumentPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1063
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrumentPartySubIDType : String {

        public static var tag: Int {
            1064
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum BidSwapPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1065
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferSwapPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1066
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBidForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1067
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOfferForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1068
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SwapPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1069
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDQuoteType : String {

        public static var tag: Int {
            1070
        }

        case Indicative = "0"
        case Tradeable = "1"
        case RestrictedTradeable = "2"
        case Counter = "3"
        case IndicativeAndTradeable = "4"
    }

    public enum LastSwapPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1071
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideGrossTradeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1072
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegLastForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1073
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCalculatedCcyLastQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1074
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegGrossTradeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1075
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1079
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefOrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1080
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefOrderIDSource : String {

        public static var tag: Int {
            1081
        }

        case SecondaryOrderID = "0"
        case OrderID = "1"
        case MDEntryID = "2"
        case QuoteEntryID = "3"
        case OriginalOrderID = "4"
        case QuoteID = "5"
        case QuoteReqID = "6"
        case PreviousOrderIdentifier = "7"
        case PreviousQuoteIdentifier = "8"
        case ParentOrderIdentifier = "9"
        case ManualOrderIdentifier = "10"
    }

    public enum SecondaryDisplayQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1082
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DisplayWhen : String {

        public static var tag: Int {
            1083
        }

        case Immediate = "1"
        case Exhaust = "2"
    }

    public enum DisplayMethod : String {

        public static var tag: Int {
            1084
        }

        case Initial = "1"
        case New = "2"
        case Random = "3"
        case Undisclosed = "4"
    }

    public enum DisplayLowQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1085
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DisplayHighQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1086
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DisplayMinIncr : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1087
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefreshQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1088
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1089
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaxPriceLevels : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1090
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PreTradeAnonymity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1091
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceProtectionScope : String {

        public static var tag: Int {
            1092
        }

        case None = "0"
        case Local = "1"
        case National = "2"
        case Global = "3"
    }

    public enum LotType : String {

        public static var tag: Int {
            1093
        }

        case OddLot = "1"
        case RoundLot = "2"
        case BlockLot = "3"
        case RoundLotBasedUpon = "4"
    }

    public enum PegPriceType : String {

        public static var tag: Int {
            1094
        }

        case LastPeg = "1"
        case MidPricePeg = "2"
        case OpeningPeg = "3"
        case MarketPeg = "4"
        case PrimaryPeg = "5"
        case PegToVWAP = "7"
        case TrailingStopPeg = "8"
        case PegToLimitPrice = "9"
        case ShortSaleMinPricePeg = "10"
    }

    public enum PeggedRefPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1095
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PegSecurityIDSource : String {

        public static var tag: Int {
            1096
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum PegSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1097
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PegSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1098
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PegSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1099
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerType : String {

        public static var tag: Int {
            1100
        }

        case PartialExecution = "1"
        case SpecifiedTradingSession = "2"
        case NextAuction = "3"
        case PriceMovement = "4"
        case OnOrderEntryOrModification = "5"
    }

    public enum TriggerAction : String {

        public static var tag: Int {
            1101
        }

        case Activate = "1"
        case Modify = "2"
        case Cancel = "3"
    }

    public enum TriggerPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1102
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1103
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1104
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerSecurityIDSource : String {

        public static var tag: Int {
            1105
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum TriggerSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1106
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerPriceType : String {

        public static var tag: Int {
            1107
        }

        case BestOffer = "1"
        case LastTrade = "2"
        case BestBid = "3"
        case BestBidOrLastTrade = "4"
        case BestOfferOrLastTrade = "5"
        case BestMid = "6"
    }

    public enum TriggerPriceTypeScope : String {

        public static var tag: Int {
            1108
        }

        case None = "0"
        case Local = "1"
        case National = "2"
        case Global = "3"
    }

    public enum TriggerPriceDirection : String {

        public static var tag: Int {
            1109
        }

        case Up = "U"
        case Down = "D"
    }

    public enum TriggerNewPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1110
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerOrderType : String {

        public static var tag: Int {
            1111
        }

        case Market = "1"
        case Limit = "2"
    }

    public enum TriggerNewQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1112
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerTradingSessionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1113
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerTradingSessionSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1114
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderCategory : String {

        public static var tag: Int {
            1115
        }

        case Order = "1"
        case Quote = "2"
        case PrivatelyNegotiatedTrade = "3"
        case MultilegOrder = "4"
        case LinkedOrder = "5"
        case QuoteRequest = "6"
        case ImpliedOrder = "7"
        case CrossOrder = "8"
        case StreamingPrice = "9"
        case InternalCrossOrder = "A"
    }

    public enum NoRootPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1116
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RootPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1117
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RootPartyIDSource : String {

        public static var tag: Int {
            1118
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum RootPartyRole : String {

        public static var tag: Int {
            1119
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoRootPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1120
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RootPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1121
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RootPartySubIDType : String {

        public static var tag: Int {
            1122
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum TradeHandlingInstr : String {

        public static var tag: Int {
            1123
        }

        case TradeConfirmation = "0"
        case TwoPartyReport = "1"
        case OnePartyReportForMatching = "2"
        case OnePartyReportForPassThrough = "3"
        case AutomatedFloorOrderRouting = "4"
        case TwoPartyReportForClaim = "5"
        case OnePartyReport = "6"
        case ThirdPtyRptForPassThrough = "7"
        case OnePartyReportAutoMatch = "8"
    }

    public enum OrigTradeHandlingInstr : String {

        public static var tag: Int {
            1124
        }

        case TradeConfirmation = "0"
        case TwoPartyReport = "1"
        case OnePartyReportForMatching = "2"
        case OnePartyReportForPassThrough = "3"
        case AutomatedFloorOrderRouting = "4"
        case TwoPartyReportForClaim = "5"
        case OnePartyReport = "6"
        case ThirdPtyRptForPassThrough = "7"
        case OnePartyReportAutoMatch = "8"
    }

    public enum OrigTradeDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1125
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrigTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1126
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrigSecondaryTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1127
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplVerID : String {

        public static var tag: Int {
            1128
        }

        case FIX27 = "0"
        case FIX30 = "1"
        case FIX40 = "2"
        case FIX41 = "3"
        case FIX42 = "4"
        case FIX43 = "5"
        case FIX44 = "6"
        case FIX50 = "7"
        case FIX50SP1 = "8"
        case FIX50SP2 = "9"
    }

    public enum CstmApplVerID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1129
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefApplVerID : String {

        public static var tag: Int {
            1130
        }

        case FIX27 = "0"
        case FIX30 = "1"
        case FIX40 = "2"
        case FIX41 = "3"
        case FIX42 = "4"
        case FIX43 = "5"
        case FIX44 = "6"
        case FIX50 = "7"
        case FIX50SP1 = "8"
        case FIX50SP2 = "9"
    }

    public enum RefCstmApplVerID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1131
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TZTransactTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1132
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExDestinationIDSource : String {

        public static var tag: Int {
            1133
        }

        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case MIC = "G"
    }

    public enum ReportedPxDiff : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1134
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RptSys : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1135
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocClearingFeeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1136
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DefaultApplVerID : String {

        public static var tag: Int {
            1137
        }

        case FIX27 = "0"
        case FIX30 = "1"
        case FIX40 = "2"
        case FIX41 = "3"
        case FIX42 = "4"
        case FIX43 = "5"
        case FIX44 = "6"
        case FIX50 = "7"
        case FIX50SP1 = "8"
        case FIX50SP2 = "9"
    }

    public enum DisplayQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1138
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExchangeSpecialInstructions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1139
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaxTradeVol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1140
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMDFeedTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1141
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchAlgorithm : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1142
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaxPriceVariation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1143
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ImpliedMarketIndicator : String {

        public static var tag: Int {
            1144
        }

        case NotImplied = "0"
        case ImpliedIn = "1"
        case ImpliedOut = "2"
        case BothImpliedInAndImpliedOut = "3"
    }

    public enum EventTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1145
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinPriceIncrementAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1146
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1147
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LowLimitPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1148
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HighLimitPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1149
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradingReferencePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1150
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityGroup : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1151
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1152
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlementCycleNo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1153
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1154
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1155
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplExtID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1156
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CcyAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1157
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSettlDetails : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1158
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlObligMode : String {

        public static var tag: Int {
            1159
        }

        case Preliminary = "1"
        case Final = "2"
    }

    public enum SettlObligMsgID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1160
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlObligID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1161
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlObligTransType : String {

        public static var tag: Int {
            1162
        }

        case Cancel = "C"
        case New = "N"
        case Replace = "R"
        case Restate = "T"
    }

    public enum SettlObligRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1163
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlObligSource : String {

        public static var tag: Int {
            1164
        }

        case InstructionsOfBroker = "1"
        case InstructionsForInstitution = "2"
        case Investor = "3"
        case BuyersSettlementInstructions = "4"
        case SellersSettlementInstructions = "5"
    }

    public enum NoSettlOblig : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1165
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteMsgID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1166
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteEntryStatus : String {

        public static var tag: Int {
            1167
        }

        case Accepted = "0"
        case Rejected = "5"
        case RemovedFromMarket = "6"
        case Expired = "7"
        case LockedMarketWarning = "12"
        case CrossMarketWarning = "13"
        case CanceledDueToLockMarket = "14"
        case CanceledDueToCrossMarket = "15"
        case Active = "16"
    }

    public enum TotNoCxldQuotes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1168
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoAccQuotes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1169
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoRejQuotes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1170
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PrivateQuote : String {

        public static var tag: Int {
            1171
        }

        case PrivateQuote = "Y"
        case PublicQuote = "N"
    }

    public enum RespondentType : String {

        public static var tag: Int {
            1172
        }

        case AllMarketParticipants = "1"
        case SpecifiedMarketParticipants = "2"
        case AllMarketMakers = "3"
        case PrimaryMarketMaker = "4"
    }

    public enum MDSubBookType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1173
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityTradingEvent : String {

        public static var tag: Int {
            1174
        }

        case OrderImbalance = "1"
        case TradingResumes = "2"
        case PriceVolatilityInterruption = "3"
        case ChangeOfTradingSession = "4"
        case ChangeOfTradingSubsession = "5"
        case ChangeOfSecurityTradingStatus = "6"
        case ChangeOfBookType = "7"
        case ChangeOfMarketDepth = "8"
        case CorporateAction = "9"
    }

    public enum NoStatsIndicators : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1175
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StatsType : String {

        public static var tag: Int {
            1176
        }

        case ExchangeLast = "1"
        case High = "2"
        case AveragePrice = "3"
        case Turnover = "4"
    }

    public enum NoOfSecSizes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1177
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDSecSizeType : String {

        public static var tag: Int {
            1178
        }

        case Customer = "1"
        case CustomerProfessional = "2"
        case DoNotTradeThrough = "3"
    }

    public enum MDSecSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1179
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1180
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1181
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplBegSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1182
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplEndSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1183
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityXMLLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1184
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityXML : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1185
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityXMLSchema : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1186
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefreshIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1187
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Volatility : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1188
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TimeToExpiration : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1189
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskFreeRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1190
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceUnitOfMeasure : String {

        public static var tag: Int {
            1191
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PriceUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1192
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethod : String {

        public static var tag: Int {
            1193
        }

        case CashSettlementRequired = "C"
        case PhysicalSettlementRequired = "P"
        case Election = "E"
    }

    public enum ExerciseStyle : String {

        public static var tag: Int {
            1194
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum OptPayoutAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1195
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceQuoteMethod : String {

        public static var tag: Int {
            1196
        }

        case Standard = "STD"
        case Index = "INX"
        case InterestRateIndex = "INT"
        case PercentOfPar = "PCTPAR"
    }

    public enum ValuationMethod : String {

        public static var tag: Int {
            1197
        }

        case PremiumStyle = "EQTY"
        case FuturesStyleMarkToMarket = "FUT"
        case FuturesStyleWithAnAttachedCashAdjustment = "FUTDA"
        case CDSStyleCollateralization = "CDS"
        case CDSInDeliveryUseRecoveryRateToCalculate = "CDSD"
    }

    public enum ListMethod : String {

        public static var tag: Int {
            1198
        }

        case PreListedOnly = "0"
        case UserRequested = "1"
    }

    public enum CapPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1199
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FloorPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1200
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStrikeRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1201
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StartStrikePxRange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1202
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndStrikePxRange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1203
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikeIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1204
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTickRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1205
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StartTickPriceRange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1206
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndTickPriceRange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1207
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TickIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1208
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TickRuleType : String {

        public static var tag: Int {
            1209
        }

        case RegularTrading = "0"
        case VariableCabinet = "1"
        case FixedCabinet = "2"
        case TradedAsASpreadLeg = "3"
        case SettledAsASpreadLeg = "4"
        case TradedAsSpread = "5"
    }

    public enum NestedInstrAttribType : String {

        public static var tag: Int {
            1210
        }

        case Flat = "1"
        case ZeroCoupon = "2"
        case InterestBearing = "3"
        case NoPeriodicPayments = "4"
        case VariableRate = "5"
        case LessFeeForPut = "6"
        case SteppedCoupon = "7"
        case CouponPeriod = "8"
        case When = "9"
        case OriginalIssueDiscount = "10"
        case Callable = "11"
        case EscrowedToMaturity = "12"
        case EscrowedToRedemptionDate = "13"
        case PreRefunded = "14"
        case InDefault = "15"
        case Unrated = "16"
        case Taxable = "17"
        case Indexed = "18"
        case SubjectToAlternativeMinimumTax = "19"
        case OriginalIssueDiscountPrice = "20"
        case CallableBelowMaturityValue = "21"
        case CallableWithoutNotice = "22"
        case PriceTickRulesForSecurity = "23"
        case TradeTypeEligibilityDetailsForSecurity = "24"
        case InstrumentDenominator = "25"
        case InstrumentNumerator = "26"
        case InstrumentPricePrecision = "27"
        case InstrumentStrikePrice = "28"
        case TradeableIndicator = "29"
        case InstrumentEligibleAnonOrders = "30"
        case MinGuaranteedFillVolume = "31"
        case MinGuaranteedFillStatus = "32"
        case TradeAtSettlementEligibility = "33"
        case TestInstrument = "34"
        case DummyInstrument = "35"
        case NegativeSettlementPriceEligibility = "36"
        case NegativeStrikePriceEligibility = "37"
        case USStdContractInd = "38"
        case AdmittedToTradingOnTradingVenue = "39"
        case AverageDailyNotionalAmount = "40"
        case AverageDailyNumberTrades = "41"
        case Text = "99"
    }

    public enum NestedInstrAttribValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1211
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMaturityTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1212
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMaturityTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1213
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1214
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSymbolSfx : String {

        public static var tag: Int {
            1215
        }

        case EUCPWithLumpSumInterest = "CD"
        case WhenIssued = "WI"
    }

    public enum DerivativeSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1216
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityIDSource : String {

        public static var tag: Int {
            1217
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum NoDerivativeSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1218
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1219
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityAltIDSource : String {

        public static var tag: Int {
            1220
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum SecondaryLowLimitPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1221
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityRuleID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1222
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikeRuleID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1223
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1224
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeOptPayAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1225
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1226
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1227
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1228
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityMonthYearIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1229
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryHighLimitPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1230
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MinLotSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1231
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoExecInstRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1232
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1233
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLotTypeRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1234
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMatchRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1235
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMaturityRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1236
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOrdTypeRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1237
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommUnitOfMeasure : String {

        public static var tag: Int {
            1238
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum NoTimeInForceRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1239
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryTradingReferencePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1240
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StartMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1241
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FlexProductEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1242
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivFlexProductEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1243
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FlexibleIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1244
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradingCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1245
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeProduct : String {

        public static var tag: Int {
            1246
        }

        case AGENCY = "1"
        case COMMODITY = "2"
        case CORPORATE = "3"
        case CURRENCY = "4"
        case EQUITY = "5"
        case GOVERNMENT = "6"
        case INDEX = "7"
        case LOAN = "8"
        case MONEYMARKET = "9"
        case MORTGAGE = "10"
        case MUNICIPAL = "11"
        case OTHER = "12"
        case FINANCING = "13"
    }

    public enum DerivativeSecurityGroup : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1247
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeCFICode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1248
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityType : String {

        public static var tag: Int {
            1249
        }

        case USTreasuryNoteOld = "UST"
        case USTreasuryBillOld = "USTB"
        case EuroSupranationalCoupons = "EUSUPRA"
        case FederalAgencyCoupon = "FAC"
        case FederalAgencyDiscountNote = "FADN"
        case PrivateExportFunding = "PEF"
        case USDSupranationalCoupons = "SUPRA"
        case CorporateBond = "CORP"
        case CorporatePrivatePlacement = "CPP"
        case ConvertibleBond = "CB"
        case DualCurrency = "DUAL"
        case EuroCorporateBond = "EUCORP"
        case EuroCorporateFloatingRateNotes = "EUFRN"
        case USCorporateFloatingRateNotes = "FRN"
        case IndexedLinked = "XLINKD"
        case StructuredNotes = "STRUCT"
        case YankeeCorporateBond = "YANK"
        case ForeignExchangeContract = "FOR"
        case NonDeliverableForward = "FXNDF"
        case FXSpot = "FXSPOT"
        case FXForward = "FXFWD"
        case FXSwap = "FXSWAP"
        case NonDeliverableSwap = "FXNDS"
        case Cap = "CAP"
        case CreditDefaultSwap = "CDS"
        case Collar = "CLLR"
        case CommoditySwap = "CMDTYSWAP"
        case Exotic = "EXOTIC"
        case OptionsOnCombo = "OOC"
        case Floor = "FLR"
        case FRA = "FRA"
        case Future = "FUT"
        case DerivativeForward = "FWD"
        case InterestRateSwap = "IRS"
        case TotalReturnSwap = "TRS"
        case LoanLease = "LOANLEASE"
        case OptionsOnFutures = "OOF"
        case OptionsOnPhysical = "OOP"
        case Option = "OPT"
        case SpotForward = "SPOTFWD"
        case SwapOption = "SWAPTION"
        case Transmission = "XMISSION"
        case Index = "INDEX"
        case BondBasket = "BDBSKT"
        case ContractForDifference = "CFD"
        case CorrelationSwap = "CRLTNSWAP"
        case DiviendSwap = "DVDNDSWAP"
        case EquityBasket = "EQBSKT"
        case EquityForward = "EQFWD"
        case ReturnSwap = "RTRNSWAP"
        case VarianceSwap = "VARSWAP"
        case PortfolioSwaps = "PRTFLIOSWAP"
        case FuturesOnASwap = "FUTSWAP"
        case ForwardsOnASwap = "FWDSWAP "
        case ForwardFreightAgreement = "FWDFRTAGMT "
        case SpreadBetting = "SPREADBET"
        case ExchangeTradedCommodity = "ETC"
        case CommonStock = "CS"
        case PreferredStock = "PS"
        case DepositoryReceipts = "DR"
        case Repurchase = "REPO"
        case Forward = "FORWARD"
        case BuySellback = "BUYSELL"
        case SecuritiesLoan = "SECLOAN"
        case SecuritiesPledge = "SECPLEDGE"
        case DeliveryVersusPledge = "DVPLDG"
        case CollateralBasket = "COLLBSKT"
        case StructuredFinanceProduct = "SFP"
        case MarginLoan = "MRGNLOAN"
        case BradyBond = "BRADY"
        case CanadianTreasuryNotes = "CAN"
        case CanadianTreasuryBills = "CTB"
        case EuroSovereigns = "EUSOV"
        case CanadianProvincialBonds = "PROV"
        case TreasuryBill = "TB"
        case USTreasuryBond = "TBOND"
        case InterestStripFromAnyBondOrNote = "TINT"
        case USTreasuryBill = "TBILL"
        case TreasuryInflationProtectedSecurities = "TIPS"
        case PrincipalStripOfACallableBondOrNote = "TCAL"
        case PrincipalStripFromANonCallableBondOrNote = "TPRN"
        case USTreasuryNote = "TNOTE"
        case TermLoan = "TERM"
        case RevolverLoan = "RVLV"
        case Revolver = "RVLVTRM"
        case BridgeLoan = "BRIDGE"
        case LetterOfCredit = "LOFC"
        case SwingLineFacility = "SWING"
        case DebtorInPossession = "DINP"
        case Defaulted = "DEFLTED"
        case Withdrawn = "WITHDRN"
        case Replaced = "REPLACD"
        case Matured = "MATURED"
        case Amended = "AMENDED"
        case Retired = "RETIRED"
        case BankersAcceptance = "BA"
        case BankDepositoryNote = "BDN"
        case BankNotes = "BN"
        case BillOfExchanges = "BOX"
        case CanadianMoneyMarkets = "CAMM"
        case CertificateOfDeposit = "CD"
        case CallLoans = "CL"
        case CommercialPaper = "CP"
        case DepositNotes = "DN"
        case EuroCertificateOfDeposit = "EUCD"
        case EuroCommercialPaper = "EUCP"
        case LiquidityNote = "LQN"
        case MediumTermNotes = "MTN"
        case Overnight = "ONITE"
        case PromissoryNote = "PN"
        case ShortTermLoanNote = "STN"
        case PlazosFijos = "PZFJ"
        case SecuredLiquidityNote = "SLQN"
        case TimeDeposit = "TD"
        case TermLiquidityNote = "TLQN"
        case ExtendedCommNote = "XCN"
        case YankeeCertificateOfDeposit = "YCD"
        case AssetBackedSecurities = "ABS"
        case CanadianMortgageBonds = "CMB"
        case Corp = "CMBS"
        case CollateralizedMortgageObligation = "CMO"
        case IOETTEMortgage = "IET"
        case MortgageBackedSecurities = "MBS"
        case MortgageInterestOnly = "MIO"
        case MortgagePrincipalOnly = "MPO"
        case MortgagePrivatePlacement = "MPP"
        case MiscellaneousPassThrough = "MPT"
        case Pfandbriefe = "PFAND"
        case ToBeAnnounced = "TBA"
        case OtherAnticipationNotes = "AN"
        case CertificateOfObligation = "COFO"
        case CertificateOfParticipation = "COFP"
        case GeneralObligationBonds = "GO"
        case MandatoryTender = "MT"
        case RevenueAnticipationNote = "RAN"
        case RevenueBonds = "REV"
        case SpecialAssessment = "SPCLA"
        case SpecialObligation = "SPCLO"
        case SpecialTax = "SPCLT"
        case TaxAnticipationNote = "TAN"
        case TaxAllocation = "TAXA"
        case TaxExemptCommercialPaper = "TECP"
        case TaxableMunicipalCP = "TMCP"
        case TaxRevenueAnticipationNote = "TRAN"
        case VariableRateDemandNote = "VRDN"
        case Warrant = "WAR"
        case MutualFund = "MF"
        case MultilegInstrument = "MLEG"
        case NoSecurityType = "NONE"
        case Wildcard = "?"
        case Cash = "CASH"
        case Other = "Other"
        case ExchangeTradedNote = "ETN"
        case SecuritizedDerivative = "SECDERIV"
    }

    public enum DerivativeSecuritySubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1250
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1251
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1252
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeMaturityTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1253
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSettleOnOpenFlag : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1254
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeInstrmtAssignmentMethod : String {

        public static var tag: Int {
            1255
        }

        case ProRata = "P"
        case Random = "R"
    }

    public enum DerivativeSecurityStatus : String {

        public static var tag: Int {
            1256
        }

        case Active = "1"
        case Inactive = "2"
        case ActiveClosingOrdersOnly = "3"
        case Expired = "4"
        case Delisted = "5"
        case KnockedOut = "6"
        case KnockOutRevoked = "7"
        case PendingExpiry = "8"
        case Suspended = "9"
        case Published = "10"
        case PendingDeletion = "11"
    }

    public enum DerivativeInstrRegistry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1257
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeCountryOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1258
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeStateOrProvinceOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1259
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeLocaleOfIssue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1260
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1261
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeStrikeCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1262
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeStrikeMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1263
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeStrikeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1264
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeOptAttribute : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1265
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeContractMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1266
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeMinPriceIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1267
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeMinPriceIncrementAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1268
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeUnitOfMeasure : String {

        public static var tag: Int {
            1269
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum DerivativeUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1270
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeTimeUnit : String {

        public static var tag: Int {
            1271
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum DerivativeSecurityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1272
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativePositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1273
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeNTPositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1274
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1275
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeIssueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1276
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEncodedIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1277
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEncodedIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1278
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1279
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEncodedSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1280
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEncodedSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1281
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityXMLLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1282
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityXML : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1283
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSecurityXMLSchema : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1284
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeContractSettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1285
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDerivativeEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1286
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEventType : String {

        public static var tag: Int {
            1287
        }

        case Put = "1"
        case Call = "2"
        case Tender = "3"
        case SinkingFundCall = "4"
        case Activation = "5"
        case Inactiviation = "6"
        case LastEligibleTradeDate = "7"
        case SwapStartDate = "8"
        case SwapEndDate = "9"
        case SwapRollDate = "10"
        case SwapNextStartDate = "11"
        case SwapNextRollDate = "12"
        case FirstDeliveryDate = "13"
        case LastDeliveryDate = "14"
        case InitialInventoryDueDate = "15"
        case FinalInventoryDueDate = "16"
        case FirstIntentDate = "17"
        case LastIntentDate = "18"
        case PositionRemovalDate = "19"
        case MinimumNotice = "20"
        case DeliveryStartTime = "21"
        case DeliveryEndTime = "22"
        case FirstNoticeDate = "23"
        case LastNoticeDate = "24"
        case FirstExerciseDate = "25"
        case RedemptionDate = "26"
        case TrdCntntnEfctvDt = "27"
        case Other = "99"
    }

    public enum DerivativeEventDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1288
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEventTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1289
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEventPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1290
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1291
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDerivativeInstrumentParties : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1292
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeInstrumentPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1293
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeInstrumentPartyIDSource : String {

        public static var tag: Int {
            1294
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum DerivativeInstrumentPartyRole : String {

        public static var tag: Int {
            1295
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoDerivativeInstrumentPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1296
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeInstrumentPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1297
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeInstrumentPartySubIDType : String {

        public static var tag: Int {
            1298
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum DerivativeExerciseStyle : String {

        public static var tag: Int {
            1299
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum MarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1300
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1301
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaturityMonthYearIncrementUnits : String {

        public static var tag: Int {
            1302
        }

        case Months = "0"
        case Days = "1"
        case Weeks = "2"
        case Years = "3"
    }

    public enum MaturityMonthYearFormat : String {

        public static var tag: Int {
            1303
        }

        case YearMonthOnly = "0"
        case YearMonthDay = "1"
        case YearMonthWeek = "2"
    }

    public enum StrikeExerciseStyle : String {

        public static var tag: Int {
            1304
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum SecondaryPriceLimitType : String {

        public static var tag: Int {
            1305
        }

        case Price = "0"
        case Ticks = "1"
        case Percentage = "2"
    }

    public enum PriceLimitType : String {

        public static var tag: Int {
            1306
        }

        case Price = "0"
        case Ticks = "1"
        case Percentage = "2"
    }

    public enum ExecInstValue : String {

        public static var tag: Int {
            1308
        }

        case StayOnOfferSide = "0"
        case NotHeld = "1"
        case Work = "2"
        case GoAlong = "3"
        case OverTheDay = "4"
        case Held = "5"
        case ParticipateDoNotInitiate = "6"
        case StrictScale = "7"
        case TryToScale = "8"
        case StayOnBidSide = "9"
        case NoCross = "A"
        case OKToCross = "B"
        case CallFirst = "C"
        case PercentOfVolume = "D"
        case DoNotIncrease = "E"
        case DoNotReduce = "F"
        case AllOrNone = "G"
        case ReinstateOnSystemFailure = "H"
        case InstitutionsOnly = "I"
        case ReinstateOnTradingHalt = "J"
        case CancelOnTradingHalt = "K"
        case LastPeg = "L"
        case MidPricePeg = "M"
        case NonNegotiable = "N"
        case OpeningPeg = "O"
        case MarketPeg = "P"
        case CancelOnSystemFailure = "Q"
        case PrimaryPeg = "R"
        case Suspend = "S"
        case FixedPegToLocalBestBidOrOfferAtTimeOfOrder = "T"
        case CustomerDisplayInstruction = "U"
        case Netting = "V"
        case PegToVWAP = "W"
        case TradeAlong = "X"
        case TryToStop = "Y"
        case CancelIfNotBest = "Z"
        case TrailingStopPeg = "a"
        case StrictLimit = "b"
        case IgnorePriceValidityChecks = "c"
        case PegToLimitPrice = "d"
        case WorkToTargetStrategy = "e"
        case IntermarketSweep = "f"
        case ExternalRoutingAllowed = "g"
        case ExternalRoutingNotAllowed = "h"
        case ImbalanceOnly = "i"
        case SingleExecutionRequestedForBlockTrade = "j"
        case BestExecution = "k"
        case SuspendOnSystemFailure = "l"
        case SuspendOnTradingHalt = "m"
        case ReinstateOnConnectionLoss = "n"
        case CancelOnConnectionLoss = "o"
        case SuspendOnConnectionLoss = "p"
        case Release = "q"
        case ExecuteAsDeltaNeutral = "r"
        case ExecuteAsDurationNeutral = "s"
        case ExecuteAsFXNeutral = "t"
        case MinGuaranteedFillEligible = "u"
        case BypassNonDisplayLiquidity = "v"
        case Lock = "w"
        case IgnoreNotionalValueChecks = "x"
        case TrdAtRefPx = "y"
        case AllowFacilitation = "z"
    }

    public enum NoTradingSessionRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1309
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMarketSegments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1310
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDerivativeInstrAttrib : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1311
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNestedInstrAttrib : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1312
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeInstrAttribType : String {

        public static var tag: Int {
            1313
        }

        case Flat = "1"
        case ZeroCoupon = "2"
        case InterestBearing = "3"
        case NoPeriodicPayments = "4"
        case VariableRate = "5"
        case LessFeeForPut = "6"
        case SteppedCoupon = "7"
        case CouponPeriod = "8"
        case When = "9"
        case OriginalIssueDiscount = "10"
        case Callable = "11"
        case EscrowedToMaturity = "12"
        case EscrowedToRedemptionDate = "13"
        case PreRefunded = "14"
        case InDefault = "15"
        case Unrated = "16"
        case Taxable = "17"
        case Indexed = "18"
        case SubjectToAlternativeMinimumTax = "19"
        case OriginalIssueDiscountPrice = "20"
        case CallableBelowMaturityValue = "21"
        case CallableWithoutNotice = "22"
        case PriceTickRulesForSecurity = "23"
        case TradeTypeEligibilityDetailsForSecurity = "24"
        case InstrumentDenominator = "25"
        case InstrumentNumerator = "26"
        case InstrumentPricePrecision = "27"
        case InstrumentStrikePrice = "28"
        case TradeableIndicator = "29"
        case InstrumentEligibleAnonOrders = "30"
        case MinGuaranteedFillVolume = "31"
        case MinGuaranteedFillStatus = "32"
        case TradeAtSettlementEligibility = "33"
        case TestInstrument = "34"
        case DummyInstrument = "35"
        case NegativeSettlementPriceEligibility = "36"
        case NegativeStrikePriceEligibility = "37"
        case USStdContractInd = "38"
        case AdmittedToTradingOnTradingVenue = "39"
        case AverageDailyNotionalAmount = "40"
        case AverageDailyNumberTrades = "41"
        case Text = "99"
    }

    public enum DerivativeInstrAttribValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1314
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativePriceUnitOfMeasure : String {

        public static var tag: Int {
            1315
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum DerivativePriceUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1316
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeSettlMethod : String {

        public static var tag: Int {
            1317
        }

        case CashSettlementRequired = "C"
        case PhysicalSettlementRequired = "P"
        case Election = "E"
    }

    public enum DerivativePriceQuoteMethod : String {

        public static var tag: Int {
            1318
        }

        case Standard = "STD"
        case Index = "INX"
        case InterestRateIndex = "INT"
        case PercentOfPar = "PCTPAR"
    }

    public enum DerivativeValuationMethod : String {

        public static var tag: Int {
            1319
        }

        case PremiumStyle = "EQTY"
        case FuturesStyleMarkToMarket = "FUT"
        case FuturesStyleWithAnAttachedCashAdjustment = "FUTDA"
        case CDSStyleCollateralization = "CDS"
        case CDSInDeliveryUseRecoveryRateToCalculate = "CDSD"
    }

    public enum DerivativeListMethod : String {

        public static var tag: Int {
            1320
        }

        case PreListedOnly = "0"
        case UserRequested = "1"
    }

    public enum DerivativeCapPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1321
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeFloorPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1322
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativePutOrCall : String {

        public static var tag: Int {
            1323
        }

        case Put = "0"
        case Call = "1"
        case Other = "2"
        case Chooser = "3"
    }

    public enum ListUpdateAction : String {

        public static var tag: Int {
            1324
        }

        case Add = "A"
        case Delete = "D"
        case Modify = "M"
        case Snapshot = "S"
    }

    public enum ParentMktSegmID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1325
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradingSessionDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1326
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesUpdateAction : String {

        public static var tag: Int {
            1327
        }

        case Add = "A"
        case Delete = "D"
        case Modify = "M"
    }

    public enum RejectText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1328
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FeeMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1329
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1330
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSymbolSfx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1331
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1332
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1333
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingLegSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1334
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1335
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityAltIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1336
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1337
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecuritySubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1338
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1339
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1340
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1341
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOfLegUnderlyings : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1342
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegPutOrCall : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1343
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegCFICode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1344
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1345
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1346
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplReqType : String {

        public static var tag: Int {
            1347
        }

        case Retransmission = "0"
        case Subscription = "1"
        case RequestLastSeqNum = "2"
        case RequestApplications = "3"
        case Unsubscribe = "4"
        case CancelRetransmission = "5"
        case CancelRetransmissionUnsubscribe = "6"
    }

    public enum ApplResponseType : String {

        public static var tag: Int {
            1348
        }

        case RequestSuccessfullyProcessed = "0"
        case ApplicationDoesNotExist = "1"
        case MessagesNotAvailable = "2"
    }

    public enum ApplTotalMessageCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1349
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplLastSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1350
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoApplIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1351
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplResendFlag : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1352
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplResponseID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1353
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplResponseError : String {

        public static var tag: Int {
            1354
        }

        case ApplicationDoesNotExist = "0"
        case MessagesRequestedAreNotAvailable = "1"
        case UserNotAuthorizedForApplication = "2"
    }

    public enum RefApplID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1355
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1356
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefApplLastSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1357
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPutOrCall : String {

        public static var tag: Int {
            1358
        }

        case Put = "0"
        case Call = "1"
        case Other = "2"
        case Chooser = "3"
    }

    public enum TotNoFills : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1361
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoFills : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1362
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillExecID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1363
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1364
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1365
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1366
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAllocSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1367
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesEvent : String {

        public static var tag: Int {
            1368
        }

        case TradingResumes = "0"
        case ChangeOfTradingSession = "1"
        case ChangeOfTradingSubsession = "2"
        case ChangeOfTradingStatus = "3"
    }

    public enum MassActionReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1369
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNotAffectedOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1370
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NotAffectedOrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1371
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NotAffOrigClOrdID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1372
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassActionType : String {

        public static var tag: Int {
            1373
        }

        case SuspendOrders = "1"
        case ReleaseOrdersFromSuspension = "2"
        case CancelOrders = "3"
    }

    public enum MassActionScope : String {

        public static var tag: Int {
            1374
        }

        case AllOrdersForASecurity = "1"
        case AllOrdersForAnUnderlyingSecurity = "2"
        case AllOrdersForAProduct = "3"
        case AllOrdersForACFICode = "4"
        case AllOrdersForASecurityType = "5"
        case AllOrdersForATradingSession = "6"
        case AllOrders = "7"
        case AllOrdersForAMarket = "8"
        case AllOrdersForAMarketSegment = "9"
        case AllOrdersForASecurityGroup = "10"
        case CancelForSecurityIssuer = "11"
        case CancelForIssuerOfUnderlyingSecurity = "12"
    }

    public enum MassActionResponse : String {

        public static var tag: Int {
            1375
        }

        case Rejected = "0"
        case Accepted = "1"
        case Completed = "2"
    }

    public enum MassActionRejectReason : String {

        public static var tag: Int {
            1376
        }

        case MassActionNotSupported = "0"
        case InvalidOrUnknownSecurity = "1"
        case InvalidOrUnknownUnderlyingSecurity = "2"
        case InvalidOrUnknownProduct = "3"
        case InvalidOrUnknownCFICode = "4"
        case InvalidOrUnknownSecurityType = "5"
        case InvalidOrUnknownTradingSession = "6"
        case InvalidOrUnknownMarket = "7"
        case InvalidOrUnknownMarketSegment = "8"
        case InvalidOrUnknownSecurityGroup = "9"
        case InvalidOrUnknownSecurityIssuer = "10"
        case InvalidOrUnknownIssuerOfUnderlyingSecurity = "11"
        case Other = "99"
    }

    public enum MultilegModel : String {

        public static var tag: Int {
            1377
        }

        case PredefinedMultilegSecurity = "0"
        case UserDefinedMultilegSecurity = "1"
        case UserDefined = "2"
    }

    public enum MultilegPriceMethod : String {

        public static var tag: Int {
            1378
        }

        case NetPrice = "0"
        case ReversedNetPrice = "1"
        case YieldDifference = "2"
        case Individual = "3"
        case ContractWeightedAveragePrice = "4"
        case MultipliedPrice = "5"
    }

    public enum LegVolatility : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1379
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendYield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1380
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendYield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1381
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CurrencyRatio : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1382
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCurrencyRatio : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1383
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExecInst : String {

        public static var tag: Int {
            1384
        }

        case StayOnOfferSide = "0"
        case NotHeld = "1"
        case Work = "2"
        case GoAlong = "3"
        case OverTheDay = "4"
        case Held = "5"
        case ParticipateDoNotInitiate = "6"
        case StrictScale = "7"
        case TryToScale = "8"
        case StayOnBidSide = "9"
        case NoCross = "A"
        case OKToCross = "B"
        case CallFirst = "C"
        case PercentOfVolume = "D"
        case DoNotIncrease = "E"
        case DoNotReduce = "F"
        case AllOrNone = "G"
        case ReinstateOnSystemFailure = "H"
        case InstitutionsOnly = "I"
        case ReinstateOnTradingHalt = "J"
        case CancelOnTradingHalt = "K"
        case LastPeg = "L"
        case MidPricePeg = "M"
        case NonNegotiable = "N"
        case OpeningPeg = "O"
        case MarketPeg = "P"
        case CancelOnSystemFailure = "Q"
        case PrimaryPeg = "R"
        case Suspend = "S"
        case FixedPegToLocalBestBidOrOfferAtTimeOfOrder = "T"
        case CustomerDisplayInstruction = "U"
        case Netting = "V"
        case PegToVWAP = "W"
        case TradeAlong = "X"
        case TryToStop = "Y"
        case CancelIfNotBest = "Z"
        case TrailingStopPeg = "a"
        case StrictLimit = "b"
        case IgnorePriceValidityChecks = "c"
        case PegToLimitPrice = "d"
        case WorkToTargetStrategy = "e"
        case IntermarketSweep = "f"
        case ExternalRoutingAllowed = "g"
        case ExternalRoutingNotAllowed = "h"
        case ImbalanceOnly = "i"
        case SingleExecutionRequestedForBlockTrade = "j"
        case BestExecution = "k"
        case SuspendOnSystemFailure = "l"
        case SuspendOnTradingHalt = "m"
        case ReinstateOnConnectionLoss = "n"
        case CancelOnConnectionLoss = "o"
        case SuspendOnConnectionLoss = "p"
        case Release = "q"
        case ExecuteAsDeltaNeutral = "r"
        case ExecuteAsDurationNeutral = "s"
        case ExecuteAsFXNeutral = "t"
        case MinGuaranteedFillEligible = "u"
        case BypassNonDisplayLiquidity = "v"
        case Lock = "w"
        case IgnoreNotionalValueChecks = "x"
        case TrdAtRefPx = "y"
        case AllowFacilitation = "z"
    }

    public enum ContingencyType : String {

        public static var tag: Int {
            1385
        }

        case OneCancelsTheOther = "1"
        case OneTriggersTheOther = "2"
        case OneUpdatesTheOtherAbsolute = "3"
        case OneUpdatesTheOtherProportional = "4"
        case BidAndOffer = "5"
        case BidAndOfferOCO = "6"
    }

    public enum ListRejectReason : String {

        public static var tag: Int {
            1386
        }

        case BrokerCredit = "0"
        case ExchangeClosed = "2"
        case TooLateToEnter = "4"
        case UnknownOrder = "5"
        case DuplicateOrder = "6"
        case UnsupportedOrderCharacteristic = "11"
        case Other = "99"
    }

    public enum NoTrdRepIndicators : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1387
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdRepPartyRole : String {

        public static var tag: Int {
            1388
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum TrdRepIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1389
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradePublishIndicator : String {

        public static var tag: Int {
            1390
        }

        case DoNotPublishTrade = "0"
        case PublishTrade = "1"
        case DeferredPublication = "2"
        case Published = "3"
    }

    public enum UnderlyingLegOptAttribute : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1391
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1392
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1393
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1394
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketUpdateAction : String {

        public static var tag: Int {
            1395
        }

        case Add = "A"
        case Delete = "D"
        case Modify = "M"
    }

    public enum MarketSegmentDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1396
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMktSegmDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1397
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMktSegmDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1398
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplNewSeqNum : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1399
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncryptedPasswordMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1400
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncryptedPasswordLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1401
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncryptedPassword : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1402
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncryptedNewPasswordLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1403
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncryptedNewPassword : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1404
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLegMaturityTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1405
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefApplExtID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1406
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DefaultApplExtID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1407
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DefaultCstmApplVerID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1408
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SessionStatus : String {

        public static var tag: Int {
            1409
        }

        case SessionActive = "0"
        case SessionPasswordChanged = "1"
        case SessionPasswordDueToExpire = "2"
        case NewSessionPasswordDoesNotComplyWithPolicy = "3"
        case SessionLogoutComplete = "4"
        case InvalidUsernameOrPassword = "5"
        case AccountLocked = "6"
        case LogonsAreNotAllowedAtThisTime = "7"
        case PasswordExpired = "8"
        case ReceivedMsgSeqNumTooLow = "9"
        case ReceivedNextExpectedMsgSeqNumTooHigh = "10"
    }

    public enum DefaultVerIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1410
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested4PartySubIDType : String {

        public static var tag: Int {
            1411
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum Nested4PartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1412
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNested4PartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1413
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNested4PartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1414
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested4PartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1415
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum Nested4PartyIDSource : String {

        public static var tag: Int {
            1416
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum Nested4PartyRole : String {

        public static var tag: Int {
            1417
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum LegLastQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1418
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExerciseStyle : String {

        public static var tag: Int {
            1419
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum LegExerciseStyle : String {

        public static var tag: Int {
            1420
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum LegPriceUnitOfMeasure : String {

        public static var tag: Int {
            1421
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPriceUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1422
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1423
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPriceUnitOfMeasure : String {

        public static var tag: Int {
            1424
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPriceUnitOfMeasureQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1425
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplReportType : String {

        public static var tag: Int {
            1426
        }

        case ApplSeqNumReset = "0"
        case LastMessageSent = "1"
        case ApplicationAlive = "2"
        case ResendComplete = "3"
    }

    public enum SideExecID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1427
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderDelay : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1428
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderDelayUnit : String {

        public static var tag: Int {
            1429
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum VenueType : String {

        public static var tag: Int {
            1430
        }

        case Electronic = "E"
        case Pit = "P"
        case ExPit = "X"
        case ClearingHouse = "C"
        case RegisteredMarket = "R"
        case OffMarket = "O"
        case CentralLimitOrderBook = "B"
        case QuoteDrivenMarket = "Q"
        case DarkOrderBook = "D"
        case AuctionDrivenMarket = "A"
        case QuoteNegotiation = "N"
        case VoiceNegotiation = "V"
        case HybridMarket = "H"
    }

    public enum RefOrdIDReason : String {

        public static var tag: Int {
            1431
        }

        case GTCFromPreviousDay = "0"
        case PartialFillRemaining = "1"
        case OrderChanged = "2"
    }

    public enum OrigCustOrderCapacity : String {

        public static var tag: Int {
            1432
        }

        case MemberTradingForTheirOwnAccount = "1"
        case ClearingFirmTradingForItsProprietaryAccount = "2"
        case MemberTradingForAnotherMember = "3"
        case AllOther = "4"
    }

    public enum RefApplReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1433
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ModelType : String {

        public static var tag: Int {
            1434
        }

        case UtilityProvidedStandardModel = "0"
        case ProprietaryModel = "1"
    }

    public enum ContractMultiplierUnit : String {

        public static var tag: Int {
            1435
        }

        case Shares = "0"
        case Hours = "1"
        case Days = "2"
    }

    public enum LegContractMultiplierUnit : String {

        public static var tag: Int {
            1436
        }

        case Shares = "0"
        case Hours = "1"
        case Days = "2"
    }

    public enum UnderlyingContractMultiplierUnit : String {

        public static var tag: Int {
            1437
        }

        case Shares = "0"
        case Hours = "1"
        case Days = "2"
    }

    public enum DerivativeContractMultiplierUnit : String {

        public static var tag: Int {
            1438
        }

        case Shares = "0"
        case Hours = "1"
        case Days = "2"
    }

    public enum FlowScheduleType : String {

        public static var tag: Int {
            1439
        }

        case NERCEasternOffPeak = "0"
        case NERCWesternOffPeak = "1"
        case NERCCalendarAllDaysInMonth = "2"
        case NERCEasternPeak = "3"
        case NERCWesternPeak = "4"
        case AllTimes = "5"
        case OnPeak = "6"
        case OffPeak = "7"
        case Base = "8"
        case Block = "9"
        case Other = "99"
    }

    public enum LegFlowScheduleType : String {

        public static var tag: Int {
            1440
        }

        case NERCEasternOffPeak = "0"
        case NERCWesternOffPeak = "1"
        case NERCCalendarAllDaysInMonth = "2"
        case NERCEasternPeak = "3"
        case NERCWesternPeak = "4"
        case AllTimes = "5"
        case OnPeak = "6"
        case OffPeak = "7"
        case Base = "8"
        case Block = "9"
        case Other = "99"
    }

    public enum UnderlyingFlowScheduleType : String {

        public static var tag: Int {
            1441
        }

        case NERCEasternOffPeak = "0"
        case NERCWesternOffPeak = "1"
        case NERCCalendarAllDaysInMonth = "2"
        case NERCEasternPeak = "3"
        case NERCWesternPeak = "4"
        case AllTimes = "5"
        case OnPeak = "6"
        case OffPeak = "7"
        case Base = "8"
        case Block = "9"
        case Other = "99"
    }

    public enum DerivativeFlowScheduleType : String {

        public static var tag: Int {
            1442
        }

        case NERCEasternOffPeak = "0"
        case NERCWesternOffPeak = "1"
        case NERCCalendarAllDaysInMonth = "2"
        case NERCEasternPeak = "3"
        case NERCWesternPeak = "4"
        case AllTimes = "5"
        case OnPeak = "6"
        case OffPeak = "7"
        case Base = "8"
        case Block = "9"
        case Other = "99"
    }

    public enum FillLiquidityInd : String {

        public static var tag: Int {
            1443
        }

        case NeitherAddedNorRemovedLiquidity = "0"
        case AddedLiquidity = "1"
        case RemovedLiquidity = "2"
        case LiquidityRoutedOut = "3"
        case Auction = "4"
        case TriggeredStopOrder = "5"
        case TriggeredContingencyOrder = "6"
        case TriggeredMarketOrder = "7"
        case RemovedLiquidityAfterFirmOrderCommitment = "8"
        case AuctionExecutionAfterFirmOrderCommitment = "9"
    }

    public enum SideLiquidityInd : String {

        public static var tag: Int {
            1444
        }

        case NeitherAddedNorRemovedLiquidity = "0"
        case AddedLiquidity = "1"
        case RemovedLiquidity = "2"
        case LiquidityRoutedOut = "3"
        case Auction = "4"
        case TriggeredStopOrder = "5"
        case TriggeredContingencyOrder = "6"
        case TriggeredMarketOrder = "7"
        case RemovedLiquidityAfterFirmOrderCommitment = "8"
        case AuctionExecutionAfterFirmOrderCommitment = "9"
    }

    public enum NoRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1445
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RateSource : String {

        public static var tag: Int {
            1446
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum RateSourceType : String {

        public static var tag: Int {
            1447
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum ReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1448
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RestructuringType : String {

        public static var tag: Int {
            1449
        }

        case FullRestructuring = "FR"
        case ModifiedRestructuring = "MR"
        case ModifiedModRestructuring = "MM"
        case NoRestructuringSpecified = "XR"
    }

    public enum Seniority : String {

        public static var tag: Int {
            1450
        }

        case SeniorSecured = "SD"
        case Senior = "SR"
        case Subordinated = "SB"
        case Junior = "JR"
        case Mezzanine = "MZ"
        case SeniorNonPreferred = "SN"
    }

    public enum NotionalPercentageOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1451
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OriginalNotionalPercentageOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1452
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRestructuringType : String {

        public static var tag: Int {
            1453
        }

        case FullRestructuring = "FR"
        case ModifiedRestructuring = "MR"
        case ModifiedModRestructuring = "MM"
        case NoRestructuringSpecified = "XR"
    }

    public enum UnderlyingSeniority : String {

        public static var tag: Int {
            1454
        }

        case SeniorSecured = "SD"
        case Senior = "SR"
        case Subordinated = "SB"
        case Junior = "JR"
        case Mezzanine = "MZ"
        case SeniorNonPreferred = "SN"
    }

    public enum UnderlyingNotionalPercentageOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1455
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOriginalNotionalPercentageOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1456
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1457
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DetachmentPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1458
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAttachmentPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1459
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDetachmentPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1460
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTargetPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1461
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1462
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetPartyIDSource : String {

        public static var tag: Int {
            1463
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum TargetPartyRole : String {

        public static var tag: Int {
            1464
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum SecurityListID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1465
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityListRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1466
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityListDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1467
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedSecurityListDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1468
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedSecurityListDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1469
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityListType : String {

        public static var tag: Int {
            1470
        }

        case IndustryClassification = "1"
        case TradingList = "2"
        case Market = "3"
        case NewspaperList = "4"
    }

    public enum SecurityListTypeSource : String {

        public static var tag: Int {
            1471
        }

        case ICB = "1"
        case NAICS = "2"
        case GICS = "3"
    }

    public enum NewsID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1472
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NewsCategory : String {

        public static var tag: Int {
            1473
        }

        case CompanyNews = "0"
        case MarketplaceNews = "1"
        case FinancialMarketNews = "2"
        case TechnicalNews = "3"
        case OtherNews = "99"
    }

    public enum LanguageCode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1474
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNewsRefIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1475
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NewsRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1476
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NewsRefType : String {

        public static var tag: Int {
            1477
        }

        case Replacement = "0"
        case OtherLanguage = "1"
        case Complimentary = "2"
        case Withdrawal = "3"
    }

    public enum StrikePriceDeterminationMethod : String {

        public static var tag: Int {
            1478
        }

        case FixedStrike = "1"
        case StrikeSetAtExpiration = "2"
        case StrikeSetToAverageAcrossLife = "3"
        case StrikeSetToOptimalValue = "4"
    }

    public enum StrikePriceBoundaryMethod : String {

        public static var tag: Int {
            1479
        }

        case LessThan = "1"
        case LessThanOrEqual = "2"
        case Equal = "3"
        case GreaterThanOrEqual = "4"
        case GreaterThan = "5"
    }

    public enum StrikePriceBoundaryPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1480
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPriceDeterminationMethod : String {

        public static var tag: Int {
            1481
        }

        case Regular = "1"
        case SpecialReference = "2"
        case OptimalValue = "3"
        case AverageValue = "4"
    }

    public enum OptPayoutType : String {

        public static var tag: Int {
            1482
        }

        case Vanilla = "1"
        case Capped = "2"
        case Binary = "3"
        case Asian = "4"
        case Barrier = "5"
        case DigitalBarrier = "6"
        case Lookback = "7"
        case OtherPathDependent = "8"
        case Other = "99"
    }

    public enum NoComplexEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1483
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventType : String {

        public static var tag: Int {
            1484
        }

        case Capped = "1"
        case Trigger = "2"
        case KnockInUp = "3"
        case KnockInDown = "4"
        case KnockOutUp = "5"
        case KnockOutDown = "6"
        case Underlying = "7"
        case ResetBarrier = "8"
        case RollingBarrier = "9"
        case OneTouch = "10"
        case NoTouch = "11"
        case DblOneTouch = "12"
        case DblNoTouch = "13"
        case FXComposite = "14"
        case FXQuanto = "15"
        case FXCrssCcy = "16"
        case StrkSpread = "17"
        case ClndrSpread = "18"
        case PxObsvtn = "19"
        case PassThrough = "20"
        case StrkSched = "21"
        case EquityValuation = "22"
        case DividendValuation = "23"
    }

    public enum ComplexOptPayoutAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1485
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1486
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPriceBoundaryMethod : String {

        public static var tag: Int {
            1487
        }

        case LessThanComplexEventPrice = "1"
        case LessThanOrEqualToComplexEventPrice = "2"
        case EqualToComplexEventPrice = "3"
        case GreaterThanOrEqualToComplexEventPrice = "4"
        case GreaterThanComplexEventPrice = "5"
    }

    public enum ComplexEventPriceBoundaryPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1488
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPriceTimeType : String {

        public static var tag: Int {
            1489
        }

        case Expiration = "1"
        case Immediate = "2"
        case SpecifiedDate = "3"
        case Close = "4"
        case Open = "5"
        case OfficialSettlPrice = "6"
        case DerivativesClose = "7"
        case AsSpecifiedMasterConfirmation = "8"
    }

    public enum ComplexEventCondition : String {

        public static var tag: Int {
            1490
        }

        case And = "1"
        case Or = "2"
    }

    public enum NoComplexEventDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1491
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1492
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1493
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1494
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventStartTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1495
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventEndTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1496
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAsgnReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1497
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAsgnReqType : String {

        public static var tag: Int {
            1498
        }

        case StreamAssignmentForNewCustomer = "1"
        case StreamAssignmentForExistingCustomer = "2"
    }

    public enum NoAsgnReqs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1499
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStreamID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1500
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAsgnRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1501
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAsgnRejReason : String {

        public static var tag: Int {
            1502
        }

        case UnknownClient = "0"
        case ExceedsMaximumSize = "1"
        case UnknownOrInvalidCurrencyPair = "2"
        case NoAvailableStream = "3"
        case Other = "99"
    }

    public enum StreamAsgnAckType : String {

        public static var tag: Int {
            1503
        }

        case AssignmentAccepted = "0"
        case AssignmentRejected = "1"
    }

    public enum RelSymTransactTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1504
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailsListRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1505
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1506
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideOrigTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1507
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRequestedPartyRoles : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1508
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RequestedPartyRole : String {

        public static var tag: Int {
            1509
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum PartyDetailsListReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1510
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RequestResult : String {

        public static var tag: Int {
            1511
        }

        case ValidRequest = "0"
        case InvalidOrUnsupportedRequest = "1"
        case NoDataFound = "2"
        case NotAuthorized = "3"
        case DataTemporarilyUnavailable = "4"
        case RequestForDataNotSupported = "5"
        case Other = "99"
    }

    public enum TotNoParties : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1512
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DocumentationText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1513
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPartyRelationships : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1514
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyRelationship : String {

        public static var tag: Int {
            1515
        }

        case IsAlso = "0"
        case ClearsFor = "1"
        case ClearsThrough = "2"
        case TradesFor = "3"
        case TradesThrough = "4"
        case Sponsors = "5"
        case SponsoredThrough = "6"
        case ProvidesGuaranteeFor = "7"
        case IsGuaranteedBy = "8"
        case MemberOf = "9"
        case HasMembers = "10"
        case ProvidesMarketplaceFor = "11"
        case ParticipantOfMarketplace = "12"
        case CarriesPositionsFor = "13"
        case PostsTradesTo = "14"
        case EntersTradesFor = "15"
        case EntersTradesThrough = "16"
        case ProvidesQuotesTo = "17"
        case RequestsQuotesFrom = "18"
        case InvestsFor = "19"
        case InvestsThrough = "20"
        case BrokersTradesFor = "21"
        case BrokersTradesThrough = "22"
        case ProvidesTradingServicesFor = "23"
        case UsesTradingServicesOf = "24"
        case ApprovesOf = "25"
        case ApprovedBy = "26"
        case ParentFirmFor = "27"
        case SubsidiaryOf = "28"
        case RegulatoryOwnerOf = "29"
        case OwnedByRegulatory = "30"
        case Controls = "31"
        case IsControlledBy = "32"
        case LegalOwnerOf = "33"
        case OwnedByLegal = "34"
        case BeneficialOwnerOf = "35"
        case OwnedByBeneficial = "36"
        case SettlesFor = "37"
        case SettlesThrough = "38"
    }

    public enum NoPartyDetailAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1516
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1517
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailAltIDSource : String {

        public static var tag: Int {
            1518
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum NoPartyDetailAltSubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1519
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailAltSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1520
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailAltSubIDType : String {

        public static var tag: Int {
            1521
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum DifferentialPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1522
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdAckStatus : String {

        public static var tag: Int {
            1523
        }

        case Accepted = "0"
        case Rejected = "1"
        case Received = "2"
    }

    public enum PriceQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1524
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedDocumentationTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1525
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPriceQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1526
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedDocumentationText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1527
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPriceQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1528
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRiskLimitTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1529
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitType : String {

        public static var tag: Int {
            1530
        }

        case CreditLimit = "0"
        case GrossLimit = "1"
        case NetLimit = "2"
        case Exposure = "3"
        case LongLimit = "4"
        case ShortLimit = "5"
        case CashMargin = "6"
        case AdditionalMargin = "7"
        case TotalMargin = "8"
        case LimitConsumed = "9"
        case ClipSize = "10"
        case MaxNotionalOrderSize = "11"
        case DV01PV01Limit = "12"
        case CS01Limit = "13"
        case VolumeLimitPerTimePeriod = "14"
        case VolFilledPctOrdVolTmPeriod = "15"
        case NotlFilledPctNotlTmPeriod = "16"
        case TransactionExecutionLimitPerTimePeriod = "17"
    }

    public enum RiskLimitAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1531
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1532
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitPlatform : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1533
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRiskInstrumentScopes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1534
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeOperator : String {

        public static var tag: Int {
            1535
        }

        case Include = "1"
        case Exclude = "2"
    }

    public enum InstrumentScopeSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1536
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSymbolSfx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1537
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1538
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityIDSource : String {

        public static var tag: Int {
            1539
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum NoInstrumentScopeSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1540
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1541
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityAltIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1542
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeProduct : String {

        public static var tag: Int {
            1543
        }

        case AGENCY = "1"
        case COMMODITY = "2"
        case CORPORATE = "3"
        case CURRENCY = "4"
        case EQUITY = "5"
        case GOVERNMENT = "6"
        case INDEX = "7"
        case LOAN = "8"
        case MONEYMARKET = "9"
        case MORTGAGE = "10"
        case MUNICIPAL = "11"
        case OTHER = "12"
        case FINANCING = "13"
    }

    public enum InstrumentScopeProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1544
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityGroup : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1545
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeCFICode : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1546
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityType : String {

        public static var tag: Int {
            1547
        }

        case USTreasuryNoteOld = "UST"
        case USTreasuryBillOld = "USTB"
        case EuroSupranationalCoupons = "EUSUPRA"
        case FederalAgencyCoupon = "FAC"
        case FederalAgencyDiscountNote = "FADN"
        case PrivateExportFunding = "PEF"
        case USDSupranationalCoupons = "SUPRA"
        case CorporateBond = "CORP"
        case CorporatePrivatePlacement = "CPP"
        case ConvertibleBond = "CB"
        case DualCurrency = "DUAL"
        case EuroCorporateBond = "EUCORP"
        case EuroCorporateFloatingRateNotes = "EUFRN"
        case USCorporateFloatingRateNotes = "FRN"
        case IndexedLinked = "XLINKD"
        case StructuredNotes = "STRUCT"
        case YankeeCorporateBond = "YANK"
        case ForeignExchangeContract = "FOR"
        case NonDeliverableForward = "FXNDF"
        case FXSpot = "FXSPOT"
        case FXForward = "FXFWD"
        case FXSwap = "FXSWAP"
        case NonDeliverableSwap = "FXNDS"
        case Cap = "CAP"
        case CreditDefaultSwap = "CDS"
        case Collar = "CLLR"
        case CommoditySwap = "CMDTYSWAP"
        case Exotic = "EXOTIC"
        case OptionsOnCombo = "OOC"
        case Floor = "FLR"
        case FRA = "FRA"
        case Future = "FUT"
        case DerivativeForward = "FWD"
        case InterestRateSwap = "IRS"
        case TotalReturnSwap = "TRS"
        case LoanLease = "LOANLEASE"
        case OptionsOnFutures = "OOF"
        case OptionsOnPhysical = "OOP"
        case Option = "OPT"
        case SpotForward = "SPOTFWD"
        case SwapOption = "SWAPTION"
        case Transmission = "XMISSION"
        case Index = "INDEX"
        case BondBasket = "BDBSKT"
        case ContractForDifference = "CFD"
        case CorrelationSwap = "CRLTNSWAP"
        case DiviendSwap = "DVDNDSWAP"
        case EquityBasket = "EQBSKT"
        case EquityForward = "EQFWD"
        case ReturnSwap = "RTRNSWAP"
        case VarianceSwap = "VARSWAP"
        case PortfolioSwaps = "PRTFLIOSWAP"
        case FuturesOnASwap = "FUTSWAP"
        case ForwardsOnASwap = "FWDSWAP "
        case ForwardFreightAgreement = "FWDFRTAGMT "
        case SpreadBetting = "SPREADBET"
        case ExchangeTradedCommodity = "ETC"
        case CommonStock = "CS"
        case PreferredStock = "PS"
        case DepositoryReceipts = "DR"
        case Repurchase = "REPO"
        case Forward = "FORWARD"
        case BuySellback = "BUYSELL"
        case SecuritiesLoan = "SECLOAN"
        case SecuritiesPledge = "SECPLEDGE"
        case DeliveryVersusPledge = "DVPLDG"
        case CollateralBasket = "COLLBSKT"
        case StructuredFinanceProduct = "SFP"
        case MarginLoan = "MRGNLOAN"
        case BradyBond = "BRADY"
        case CanadianTreasuryNotes = "CAN"
        case CanadianTreasuryBills = "CTB"
        case EuroSovereigns = "EUSOV"
        case CanadianProvincialBonds = "PROV"
        case TreasuryBill = "TB"
        case USTreasuryBond = "TBOND"
        case InterestStripFromAnyBondOrNote = "TINT"
        case USTreasuryBill = "TBILL"
        case TreasuryInflationProtectedSecurities = "TIPS"
        case PrincipalStripOfACallableBondOrNote = "TCAL"
        case PrincipalStripFromANonCallableBondOrNote = "TPRN"
        case USTreasuryNote = "TNOTE"
        case TermLoan = "TERM"
        case RevolverLoan = "RVLV"
        case Revolver = "RVLVTRM"
        case BridgeLoan = "BRIDGE"
        case LetterOfCredit = "LOFC"
        case SwingLineFacility = "SWING"
        case DebtorInPossession = "DINP"
        case Defaulted = "DEFLTED"
        case Withdrawn = "WITHDRN"
        case Replaced = "REPLACD"
        case Matured = "MATURED"
        case Amended = "AMENDED"
        case Retired = "RETIRED"
        case BankersAcceptance = "BA"
        case BankDepositoryNote = "BDN"
        case BankNotes = "BN"
        case BillOfExchanges = "BOX"
        case CanadianMoneyMarkets = "CAMM"
        case CertificateOfDeposit = "CD"
        case CallLoans = "CL"
        case CommercialPaper = "CP"
        case DepositNotes = "DN"
        case EuroCertificateOfDeposit = "EUCD"
        case EuroCommercialPaper = "EUCP"
        case LiquidityNote = "LQN"
        case MediumTermNotes = "MTN"
        case Overnight = "ONITE"
        case PromissoryNote = "PN"
        case ShortTermLoanNote = "STN"
        case PlazosFijos = "PZFJ"
        case SecuredLiquidityNote = "SLQN"
        case TimeDeposit = "TD"
        case TermLiquidityNote = "TLQN"
        case ExtendedCommNote = "XCN"
        case YankeeCertificateOfDeposit = "YCD"
        case AssetBackedSecurities = "ABS"
        case CanadianMortgageBonds = "CMB"
        case Corp = "CMBS"
        case CollateralizedMortgageObligation = "CMO"
        case IOETTEMortgage = "IET"
        case MortgageBackedSecurities = "MBS"
        case MortgageInterestOnly = "MIO"
        case MortgagePrincipalOnly = "MPO"
        case MortgagePrivatePlacement = "MPP"
        case MiscellaneousPassThrough = "MPT"
        case Pfandbriefe = "PFAND"
        case ToBeAnnounced = "TBA"
        case OtherAnticipationNotes = "AN"
        case CertificateOfObligation = "COFO"
        case CertificateOfParticipation = "COFP"
        case GeneralObligationBonds = "GO"
        case MandatoryTender = "MT"
        case RevenueAnticipationNote = "RAN"
        case RevenueBonds = "REV"
        case SpecialAssessment = "SPCLA"
        case SpecialObligation = "SPCLO"
        case SpecialTax = "SPCLT"
        case TaxAnticipationNote = "TAN"
        case TaxAllocation = "TAXA"
        case TaxExemptCommercialPaper = "TECP"
        case TaxableMunicipalCP = "TMCP"
        case TaxRevenueAnticipationNote = "TRAN"
        case VariableRateDemandNote = "VRDN"
        case Warrant = "WAR"
        case MutualFund = "MF"
        case MultilegInstrument = "MLEG"
        case NoSecurityType = "NONE"
        case Wildcard = "?"
        case Cash = "CASH"
        case Other = "Other"
        case ExchangeTradedNote = "ETN"
        case SecuritizedDerivative = "SECDERIV"
    }

    public enum InstrumentScopeSecuritySubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1548
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1549
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeMaturityTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1550
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeRestructuringType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1551
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSeniority : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1552
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopePutOrCall : String {

        public static var tag: Int {
            1553
        }

        case Put = "0"
        case Call = "1"
        case Other = "2"
        case Chooser = "3"
    }

    public enum InstrumentScopeFlexibleIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1554
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeCouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1555
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1556
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeSettlType : String {

        public static var tag: Int {
            1557
        }

        case Regular = "0"
        case Cash = "1"
        case NextDay = "2"
        case TPlus2 = "3"
        case TPlus3 = "4"
        case TPlus4 = "5"
        case Future = "6"
        case WhenAndIfIssued = "7"
        case SellersOption = "8"
        case TPlus5 = "9"
        case BrokenDate = "B"
        case FXSpotNextSettlement = "C"
    }

    public enum RiskInstrumentMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1558
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRiskWarningLevels : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1559
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskWarningLevelPercent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1560
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskWarningLevelName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1561
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRelatedPartyDetailID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1562
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1563
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailIDSource : String {

        public static var tag: Int {
            1564
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum RelatedPartyDetailRole : String {

        public static var tag: Int {
            1565
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoRelatedPartyDetailSubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1566
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1567
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailSubIDType : String {

        public static var tag: Int {
            1568
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoRelatedPartyDetailAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1569
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1570
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailAltIDSource : String {

        public static var tag: Int {
            1571
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum NoRelatedPartyDetailAltSubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1572
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailAltSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1573
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPartyDetailAltSubIDType : String {

        public static var tag: Int {
            1574
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum SwapSubClass : String {

        public static var tag: Int {
            1575
        }

        case Amortizing = "AMTZ"
        case Compounding = "COMP"
        case ConstantNotionalSchedule = "CNST"
        case AccretingNotionalSchedule = "ACRT"
        case CustomNotionalSchedule = "CUST"
    }

    public enum DerivativePriceQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1576
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1577
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedEventTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1578
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1579
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlRateIndexLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1580
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExpirationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1581
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSecurityClassifications : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1582
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityClassificationReason : String {

        public static var tag: Int {
            1583
        }

        case Fee = "0"
        case CreditControls = "1"
        case Margin = "2"
        case EntitlementOrEligibility = "3"
        case MarketData = "4"
        case AccountSelection = "5"
        case DeliveryProcess = "6"
        case Sector = "7"
    }

    public enum SecurityClassificationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1584
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosAmtReason : String {

        public static var tag: Int {
            1585
        }

        case OptionsSettlement = "0"
        case PendingErosionAdjustment = "1"
        case FinalErosionAdjustment = "2"
        case TearUpCouponAmount = "3"
        case PriceAlignmentInterest = "4"
        case DeliveryInvoiceCharges = "5"
        case DeliveryStorageCharges = "6"
    }

    public enum NoLegPosAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1586
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPosAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1587
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPosAmtType : String {

        public static var tag: Int {
            1588
        }

        case CashAmount = "CASH"
        case CashResidualAmount = "CRES"
        case FinalMarkToMarketAmount = "FMTM"
        case IncrementalMarkToMarketAmount = "IMTM"
        case PremiumAmount = "PREM"
        case StartOfDayMarkToMarketAmount = "SMTM"
        case TradeVariationAmount = "TVAR"
        case ValueAdjustedAmount = "VADJ"
        case SettlementValue = "SETL"
        case InitialTradeCouponAmount = "ICPN"
        case AccruedCouponAmount = "ACPN"
        case CouponAmount = "CPN"
        case IncrementalAccruedCoupon = "IACPN"
        case CollateralizedMarkToMarket = "CMTM"
        case IncrementalCollateralizedMarkToMarket = "ICMTM"
        case CompensationAmount = "DLV"
        case TotalBankedAmount = "BANK"
        case TotalCollateralizedAmount = "COLAT"
        case LongPairedSwapNotionalValue = "LSNV"
        case ShortPairedSwapNotionalValue = "SSNV"
        case StartOfDayAccruedCoupon = "SACPN"
        case NetPresentValue = "NPV"
        case StartOfDayNetPresentValue = "SNPV"
        case NetCashFlow = "NCF"
        case PresentValueOfFees = "PVFEES"
        case PresentValueOneBasisPoints = "PV01"
        case FiveYearEquivalentNotional = "5YREN"
        case UndiscountedMarkToMarket = "UMTM"
        case MarkToModel = "MTD"
        case MarkToMarketVariance = "VMTM"
        case MarkToModelVariance = "VMTD"
        case UpfrontPayment = "UPFRNT"
        case EndVale = "ENDV"
        case OutstandingMarginLoan = "MGNLN"
        case LoanValue = "LNVL"
    }

    public enum LegPosCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1589
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPosAmtReason : String {

        public static var tag: Int {
            1590
        }

        case OptionsSettlement = "0"
        case PendingErosionAdjustment = "1"
        case FinalErosionAdjustment = "2"
        case TearUpCouponAmount = "3"
        case PriceAlignmentInterest = "4"
        case DeliveryInvoiceCharges = "5"
        case DeliveryStorageCharges = "6"
    }

    public enum LegQtyType : String {

        public static var tag: Int {
            1591
        }

        case Units = "0"
        case Contracts = "1"
        case UnitsOfMeasurePerTimeUnit = "2"
    }

    public enum DiscountFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1592
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ParentAllocID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1593
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityGroup : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1594
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PositionContingentPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1595
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearingTradePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1596
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideClearingTradePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1597
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideClearingTradePriceType : String {

        public static var tag: Int {
            1598
        }

        case TradeClearingAtExecutionPrice = "0"
        case TradeClearingAtAlternateClearingPrice = "1"
    }

    public enum SidePriceDifferential : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1599
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FIXEngineName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1600
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FIXEngineVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1601
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FIXEngineVendor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1602
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplicationSystemName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1603
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplicationSystemVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1604
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplicationSystemVendor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1605
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NumOfSimpleInstruments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1606
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityRejectReason : String {

        public static var tag: Int {
            1607
        }

        case InvalidInstrumentRequested = "1"
        case InstrumentAlreadyExists = "2"
        case RequestTypeNotSupported = "3"
        case SystemUnavailableForInstrumentCreation = "4"
        case IneligibleInstrumentGroup = "5"
        case InstrumentIDUnavailable = "6"
        case InvalidOrMissingDataOnOptionLeg = "7"
        case InvalidOrMissingDataOnFutureLeg = "8"
        case InvalidOrMissingDataOnFXLeg = "10"
        case InvalidLegPriceSpecified = "11"
        case InvalidInstrumentStructureSpecified = "12"
    }

    public enum InitialDisplayQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1608
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ThrottleStatus : String {

        public static var tag: Int {
            1609
        }

        case ThrottleLimitNotExceededNotQueued = "0"
        case QueuedDueToThrottleLimitExceeded = "1"
    }

    public enum NoThrottles : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1610
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ThrottleAction : String {

        public static var tag: Int {
            1611
        }

        case QueueInbound = "0"
        case QueueOutbound = "1"
        case Reject = "2"
        case Disconnect = "3"
        case Warning = "4"
    }

    public enum ThrottleType : String {

        public static var tag: Int {
            1612
        }

        case InboundRate = "0"
        case OutstandingRequests = "1"
    }

    public enum ThrottleNoMsgs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1613
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ThrottleTimeInterval : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1614
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ThrottleTimeUnit : String {

        public static var tag: Int {
            1615
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum InstrumentScopeSecurityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1616
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAsgnType : String {

        public static var tag: Int {
            1617
        }

        case Assignment = "1"
        case Rejected = "2"
        case Terminate = "3"
    }

    public enum NoThrottleMsgType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1618
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ThrottleMsgType : String {

        public static var tag: Int {
            1619
        }

        case Heartbeat = "0"
        case TestRequest = "1"
        case ResendRequest = "2"
        case Reject = "3"
        case SequenceReset = "4"
        case Logout = "5"
        case IOI = "6"
        case Advertisement = "7"
        case ExecutionReport = "8"
        case OrderCancelReject = "9"
        case Logon = "A"
        case News = "B"
        case Email = "C"
        case NewOrderSingle = "D"
        case NewOrderList = "E"
        case OrderCancelRequest = "F"
        case OrderCancelReplaceRequest = "G"
        case OrderStatusRequest = "H"
        case AllocationInstruction = "J"
        case ListCancelRequest = "K"
        case ListExecute = "L"
        case ListStatusRequest = "M"
        case ListStatus = "N"
        case AllocationInstructionAck = "P"
        case DontKnowTrade = "Q"
        case QuoteRequest = "R"
        case Quote = "S"
        case SettlementInstructions = "T"
        case MarketDataRequest = "V"
        case MarketDataSnapshotFullRefresh = "W"
        case MarketDataIncrementalRefresh = "X"
        case MarketDataRequestReject = "Y"
        case QuoteCancel = "Z"
        case QuoteStatusRequest = "a"
        case MassQuoteAck = "b"
        case SecurityDefinitionRequest = "c"
        case SecurityDefinition = "d"
        case SecurityStatusRequest = "e"
        case SecurityStatus = "f"
        case TradingSessionStatusRequest = "g"
        case TradingSessionStatus = "h"
        case MassQuote = "i"
        case BusinessMessageReject = "j"
        case BidRequest = "k"
        case BidResponse = "l"
        case ListStrikePrice = "m"
        case XMLnonFIX = "n"
        case RegistrationInstructions = "o"
        case RegistrationInstructionsResponse = "p"
        case OrderMassCancelRequest = "q"
        case OrderMassCancelReport = "r"
        case NewOrderCross = "s"
        case CrossOrderCancelReplaceRequest = "t"
        case CrossOrderCancelRequest = "u"
        case SecurityTypeRequest = "v"
        case SecurityTypes = "w"
        case SecurityListRequest = "x"
        case SecurityList = "y"
        case DerivativeSecurityListRequest = "z"
        case DerivativeSecurityList = "AA"
        case NewOrderMultileg = "AB"
        case MultilegOrderCancelReplace = "AC"
        case TradeCaptureReportRequest = "AD"
        case TradeCaptureReport = "AE"
        case OrderMassStatusRequest = "AF"
        case QuoteRequestReject = "AG"
        case RFQRequest = "AH"
        case QuoteStatusReport = "AI"
        case QuoteResponse = "AJ"
        case Confirmation = "AK"
        case PositionMaintenanceRequest = "AL"
        case PositionMaintenanceReport = "AM"
        case RequestForPositions = "AN"
        case RequestForPositionsAck = "AO"
        case PositionReport = "AP"
        case TradeCaptureReportRequestAck = "AQ"
        case TradeCaptureReportAck = "AR"
        case AllocationReport = "AS"
        case AllocationReportAck = "AT"
        case ConfirmationAck = "AU"
        case SettlementInstructionRequest = "AV"
        case AssignmentReport = "AW"
        case CollateralRequest = "AX"
        case CollateralAssignment = "AY"
        case CollateralResponse = "AZ"
        case CollateralReport = "BA"
        case CollateralInquiry = "BB"
        case NetworkCounterpartySystemStatusRequest = "BC"
        case NetworkCounterpartySystemStatusResponse = "BD"
        case UserRequest = "BE"
        case UserResponse = "BF"
        case CollateralInquiryAck = "BG"
        case ConfirmationRequest = "BH"
        case ContraryIntentionReport = "BO"
        case SecurityDefinitionUpdateReport = "BP"
        case SecurityListUpdateReport = "BK"
        case AdjustedPositionReport = "BL"
        case AllocationInstructionAlert = "BM"
        case ExecutionAck = "BN"
        case TradingSessionList = "BJ"
        case TradingSessionListRequest = "BI"
        case SettlementObligationReport = "BQ"
        case DerivativeSecurityListUpdateReport = "BR"
        case TradingSessionListUpdateReport = "BS"
        case MarketDefinitionRequest = "BT"
        case MarketDefinition = "BU"
        case MarketDefinitionUpdateReport = "BV"
        case ApplicationMessageRequest = "BW"
        case ApplicationMessageRequestAck = "BX"
        case ApplicationMessageReport = "BY"
        case OrderMassActionReport = "BZ"
        case OrderMassActionRequest = "CA"
        case UserNotification = "CB"
        case StreamAssignmentRequest = "CC"
        case StreamAssignmentReport = "CD"
        case StreamAssignmentReportACK = "CE"
        case PartyDetailsListRequest = "CF"
        case PartyDetailsListReport = "CG"
        case MarginRequirementInquiry = "CH"
        case MarginRequirementInquiryAck = "CI"
        case MarginRequirementReport = "CJ"
        case PartyDetailsListUpdateReport = "CK"
        case PartyRiskLimitsRequest = "CL"
        case PartyRiskLimitsReport = "CM"
        case SecurityMassStatusRequest = "CN"
        case SecurityMassStatus = "CO"
        case AccountSummaryReport = "CQ"
        case PartyRiskLimitsUpdateReport = "CR"
        case PartyRiskLimitsDefinitionRequest = "CS"
        case PartyRiskLimitsDefinitionRequestAck = "CT"
        case PartyEntitlementsRequest = "CU"
        case PartyEntitlementsReport = "CV"
        case QuoteAck = "CW"
        case PartyDetailsDefinitionRequest = "CX"
        case PartyDetailsDefinitionRequestAck = "CY"
        case PartyEntitlementsUpdateReport = "CZ"
        case PartyEntitlementsDefinitionRequest = "DA"
        case PartyEntitlementsDefinitionRequestAck = "DB"
        case TradeMatchReport = "DC"
        case TradeMatchReportAck = "DD"
        case PartyRiskLimitsReportAck = "DE"
        case PartyRiskLimitCheckRequest = "DF"
        case PartyRiskLimitCheckRequestAck = "DG"
        case PartyActionRequest = "DH"
        case PartyActionReport = "DI"
        case MassOrder = "DJ"
        case MassOrderAck = "DK"
        case PositionTransferInstruction = "DL"
        case PositionTransferInstructionAck = "DM"
        case PositionTransferReport = "DN"
        case MarketDataStatisticsRequest = "DO"
        case MarketDataStatisticsReport = "DP"
        case CollateralReportAck = "DQ"
        case MarketDataReport = "DR"
        case CrossRequest = "DS"
        case CrossRequestAck = "DT"
        case AllocationInstructionAlertRequest = "DU"
        case AllocationInstructionAlertRequestAck = "DV"
        case TradeAggregationRequest = "DW"
        case TradeAggregationReport = "DX"
        case PayManagementReport = "EA"
        case PayManagementReportAck = "EB"
        case PayManagementRequest = "DY"
        case PayManagementRequestAck = "DZ"
    }

    public enum InstrumentScopeEncodedSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1620
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentScopeEncodedSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1621
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillYieldType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1622
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillYield : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1623
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMatchInst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1624
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchInst : String {

        public static var tag: Int {
            1625
        }

        case Match = "1"
        case DoNotMatch = "2"
    }

    public enum MatchAttribTagID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1626
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchAttribValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1627
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TriggerScope : String {

        public static var tag: Int {
            1628
        }

        case ThisOrder = "0"
        case OtherOrder = "1"
        case AllOtherOrdersForGivenSecurity = "2"
        case AllOtherOrdersForGivenSecurityAndPrice = "3"
        case AllOtherOrdersForGivenSecurityAndSide = "4"
        case AllOtherOrdersForGivenSecurityPriceAndSide = "5"
    }

    public enum ExposureDuration : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1629
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLimitAmts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1630
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LimitAmtType : String {

        public static var tag: Int {
            1631
        }

        case CreditLimit = "0"
        case GrossPositionLimit = "1"
        case NetPositionLimit = "2"
        case RiskExposureLimit = "3"
        case LongPositionLimit = "4"
        case ShortPositionLimit = "5"
    }

    public enum LastLimitAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1632
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LimitAmtRemaining : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1633
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LimitAmtCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1634
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginReqmtInqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1635
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMarginReqmtInqQualifier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1636
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginReqmtInqQualifier : String {

        public static var tag: Int {
            1637
        }

        case Summary = "0"
        case Detail = "1"
        case ExcessDeficit = "2"
        case NetPosition = "3"
    }

    public enum MarginReqmtRptType : String {

        public static var tag: Int {
            1638
        }

        case Summary = "0"
        case Detail = "1"
        case ExcessDeficit = "2"
    }

    public enum MarginClass : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1639
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginReqmtInqStatus : String {

        public static var tag: Int {
            1640
        }

        case Accepted = "0"
        case AcceptedWithWarnings = "1"
        case Completed = "2"
        case CompletedWithWarnings = "3"
        case Rejected = "4"
    }

    public enum MarginReqmtInqResult : String {

        public static var tag: Int {
            1641
        }

        case Successful = "0"
        case InvalidOrUnknownInstrument = "1"
        case InvalidOrUnknownMarginClass = "2"
        case InvalidParties = "3"
        case InvalidTransportTypeReq = "4"
        case InvalidDestinationReq = "5"
        case NoMarginReqFound = "6"
        case MarginReqInquiryQualifierNotSupported = "7"
        case UnauthorizedForMarginReqInquiry = "8"
        case Other = "99"
    }

    public enum MarginReqmtRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1642
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMarginAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1643
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginAmtType : String {

        public static var tag: Int {
            1644
        }

        case AdditionalMargin = "1"
        case AdjustedMargin = "2"
        case UnadjustedMargin = "3"
        case BinaryAddOnAmount = "4"
        case CashBalanceAmount = "5"
        case ConcentrationMargin = "6"
        case CoreMargin = "7"
        case DeliveryMargin = "8"
        case DiscretionaryMargin = "9"
        case FuturesSpreadMargin = "10"
        case InitialMargin = "11"
        case LiquidatingMargin = "12"
        case MarginCallAmount = "13"
        case MarginDeficitAmount = "14"
        case MarginExcessAmount = "15"
        case OptionPremiumAmount = "16"
        case PremiumMargin = "17"
        case ReserveMargin = "18"
        case SecurityCollateralAmount = "19"
        case StressTestAddOnAmount = "20"
        case SuperMargin = "21"
        case TotalMargin = "22"
        case VariationMargin = "23"
        case SecondaryVariationMargin = "24"
        case RolledUpMarginDeficit = "25"
        case SpreadResponseMargin = "26"
        case SystemicRiskMargin = "27"
        case CurveRiskMargin = "28"
        case IndexSpreadRiskMargin = "29"
        case SectorRiskMargin = "30"
        case JumpToDefaultRiskMargin = "31"
        case BasisRiskMargin = "32"
        case InterestRateRiskMargin = "33"
        case JumpToHealthRiskMargin = "34"
        case OtherRiskMargin = "35"
    }

    public enum MarginAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1645
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginAmtCcy : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1646
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRelatedInstruments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1647
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedInstrumentType : String {

        public static var tag: Int {
            1648
        }

        case HedgesForInstrument = "1"
        case Underlier = "2"
        case EquityEquivalent = "3"
        case NearestExchangeTradedContract = "4"
        case RetailEquivalent = "5"
        case Leg = "6"
    }

    public enum RelatedSymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1649
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1650
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedSecurityIDSource : String {

        public static var tag: Int {
            1651
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum RelatedSecurityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1652
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedMaturityMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1653
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CoveredQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1654
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketMakerActivity : String {

        public static var tag: Int {
            1655
        }

        case NoParticipation = "0"
        case BuyParticipation = "1"
        case SellParticipation = "2"
        case BothBuyAndSellParticipation = "3"
    }

    public enum NoInstrumentScopes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1656
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRequestingPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1657
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RequestingPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1658
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RequestingPartyIDSource : String {

        public static var tag: Int {
            1659
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum RequestingPartyRole : String {

        public static var tag: Int {
            1660
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoRequestingPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1661
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RequestingPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1662
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RequestingPartySubIDType : String {

        public static var tag: Int {
            1663
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum EncodedRejectTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1664
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedRejectText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1665
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1666
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1667
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRequestedRiskLimitType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1668
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRiskLimits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1669
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1670
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPartyDetails : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1671
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailStatus : String {

        public static var tag: Int {
            1672
        }

        case Active = "0"
        case Suspended = "1"
        case Halted = "2"
    }

    public enum MatchInstMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1673
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailRoleQualifier : String {

        public static var tag: Int {
            1674
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum RelatedPartyDetailRoleQualifier : String {

        public static var tag: Int {
            1675
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum NoPartyUpdates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1676
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPartyRiskLimits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1677
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedOptionExpirationDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1678
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecurityMassTradingStatus : String {

        public static var tag: Int {
            1679
        }

        case OpeningDelay = "1"
        case TradingHalt = "2"
        case Resume = "3"
        case NoOpen = "4"
        case PriceIndication = "5"
        case TradingRangeIndication = "6"
        case MarketImbalanceBuy = "7"
        case MarketImbalanceSell = "8"
        case MarketOnCloseImbalanceBuy = "9"
        case MarketOnCloseImbalanceSell = "10"
        case NoMarketImbalance = "12"
        case NoMarketOnCloseImbalance = "13"
        case ITSPreOpening = "14"
        case NewPriceIndication = "15"
        case TradeDisseminationTime = "16"
        case ReadyToTrade = "17"
        case NotAvailableForTrading = "18"
        case NotTradedOnThisMarket = "19"
        case UnknownOrInvalid = "20"
        case PreOpen = "21"
        case OpeningRotation = "22"
        case FastMarket = "23"
        case PreCross = "24"
        case Cross = "25"
        case PostClose = "26"
        case NoCancel = "27"
    }

    public enum SecurityMassTradingEvent : String {

        public static var tag: Int {
            1680
        }

        case OrderImbalance = "1"
        case TradingResumes = "2"
        case PriceVolatilityInterruption = "3"
        case ChangeOfTradingSession = "4"
        case ChangeOfTradingSubsession = "5"
        case ChangeOfSecurityTradingStatus = "6"
        case ChangeOfBookType = "7"
        case ChangeOfMarketDepth = "8"
        case CorporateAction = "9"
    }

    public enum MassHaltReason : String {

        public static var tag: Int {
            1681
        }

        case NewsDissemination = "0"
        case OrderInflux = "1"
        case OrderImbalance = "2"
        case AdditionalInformation = "3"
        case NewsPending = "4"
        case EquipmentChangeover = "5"
    }

    public enum MDSecurityTradingStatus : String {

        public static var tag: Int {
            1682
        }

        case OpeningDelay = "1"
        case TradingHalt = "2"
        case Resume = "3"
        case NoOpen = "4"
        case PriceIndication = "5"
        case TradingRangeIndication = "6"
        case MarketImbalanceBuy = "7"
        case MarketImbalanceSell = "8"
        case MarketOnCloseImbalanceBuy = "9"
        case MarketOnCloseImbalanceSell = "10"
        case NoMarketImbalance = "12"
        case NoMarketOnCloseImbalance = "13"
        case ITSPreOpening = "14"
        case NewPriceIndication = "15"
        case TradeDisseminationTime = "16"
        case ReadyToTrade = "17"
        case NotAvailableForTrading = "18"
        case NotTradedOnThisMarket = "19"
        case UnknownOrInvalid = "20"
        case PreOpen = "21"
        case OpeningRotation = "22"
        case FastMarket = "23"
        case PreCross = "24"
        case Cross = "25"
        case PostClose = "26"
        case NoCancel = "27"
    }

    public enum MDSubFeedType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1683
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDHaltReason : String {

        public static var tag: Int {
            1684
        }

        case NewsDissemination = "0"
        case OrderInflux = "1"
        case OrderImbalance = "2"
        case AdditionalInformation = "3"
        case NewsPending = "4"
        case EquipmentChangeover = "5"
    }

    public enum ThrottleInst : String {

        public static var tag: Int {
            1685
        }

        case RejectIfThrottleLimitExceeded = "0"
        case QueueIfThrottleLimitExceeded = "1"
    }

    public enum ThrottleCountIndicator : String {

        public static var tag: Int {
            1686
        }

        case OutstandingRequestsUnchanged = "0"
        case OutstandingRequestsDecreased = "1"
    }

    public enum ShortSaleRestriction : String {

        public static var tag: Int {
            1687
        }

        case NoRestrictions = "0"
        case SecurityNotShortable = "1"
        case SecurityNotShortableAtOrBelowBestBid = "2"
        case SecurityNotShortableWithoutPreBorrow = "3"
    }

    public enum ShortSaleExemptionReason : String {

        public static var tag: Int {
            1688
        }

        case ExemptionReasonUnknown = "0"
        case IncomingSSE = "1"
        case AboveNationalBestBid = "2"
        case DelayedDelivery = "3"
        case OddLot = "4"
        case DomesticArbitrage = "5"
        case InternationalArbitrage = "6"
        case UnderwriterOrSyndicateDistribution = "7"
        case RisklessPrincipal = "8"
        case VWAP = "9"
    }

    public enum LegShortSaleExemptionReason : String {

        public static var tag: Int {
            1689
        }

        case ExemptionReasonUnknown = "0"
        case IncomingSSE = "1"
        case AboveNationalBestBid = "2"
        case DelayedDelivery = "3"
        case OddLot = "4"
        case DomesticArbitrage = "5"
        case InternationalArbitrage = "6"
        case UnderwriterOrSyndicateDistribution = "7"
        case RisklessPrincipal = "8"
        case VWAP = "9"
    }

    public enum SideShortSaleExemptionReason : String {

        public static var tag: Int {
            1690
        }

        case ExemptionReasonUnknown = "0"
        case IncomingSSE = "1"
        case AboveNationalBestBid = "2"
        case DelayedDelivery = "3"
        case OddLot = "4"
        case DomesticArbitrage = "5"
        case InternationalArbitrage = "6"
        case UnderwriterOrSyndicateDistribution = "7"
        case RisklessPrincipal = "8"
        case VWAP = "9"
    }

    public enum PartyDetailID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1691
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailIDSource : String {

        public static var tag: Int {
            1692
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum PartyDetailRole : String {

        public static var tag: Int {
            1693
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoPartyDetailSubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1694
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1695
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailSubIDType : String {

        public static var tag: Int {
            1696
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum EncodedOptionExpirationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1697
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikeUnitOfMeasure : String {

        public static var tag: Int {
            1698
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum AccountSummaryReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1699
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSettlementAmounts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1700
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlementAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1701
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlementAmountCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1702
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoCollateralAmounts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1703
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CurrentCollateralAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1704
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1705
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1706
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPayCollects : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1707
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayCollectType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1708
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayCollectCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1709
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1710
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollectAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1711
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayCollectMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1712
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayCollectMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1713
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginAmountMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1714
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginAmountMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1715
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1716
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1717
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1718
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPriceUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1719
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1720
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPriceUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1721
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1722
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativePriceUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1723
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderOrigination : String {

        public static var tag: Int {
            1724
        }

        case OrderReceivedFromCustomer = "1"
        case OrderReceivedFromWithinFirm = "2"
        case OrderReceivedFromAnotherBrokerDealer = "3"
        case OrderReceivedFromCustomerOrWithFirm = "4"
        case OrderReceivedFromDirectAccessCustomer = "5"
        case OrderReceivedFromForeignDealerEquivalent = "6"
        case OrderReceivedFromExecutionOnlyService = "7"
    }

    public enum OriginatingDeptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1725
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReceivingDeptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1726
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InformationBarrierID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1727
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FirmGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1728
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FirmMnemonic : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1729
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1730
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AvgPxGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1731
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FirmAllocText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1732
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedFirmAllocTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1733
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedFirmAllocText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1734
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocationRollupInstruction : String {

        public static var tag: Int {
            1735
        }

        case Rollup = "0"
        case DoNotRollUp = "1"
    }

    public enum AllocGroupQuantity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1736
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocGroupRemainingQuantity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1737
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocReversalStatus : String {

        public static var tag: Int {
            1738
        }

        case Completed = "0"
        case Refused = "1"
        case Cancelled = "2"
    }

    public enum ObligationType : String {

        public static var tag: Int {
            1739
        }

        case Bond = "0"
        case ConvertBond = "1"
        case Mortgage = "2"
        case Loan = "3"
    }

    public enum TradePriceNegotiationMethod : String {

        public static var tag: Int {
            1740
        }

        case PercentPar = "0"
        case DealSpread = "1"
        case UpfrontPnts = "2"
        case UpfrontAmt = "3"
        case ParUpfrontAmt = "4"
        case SpreadUpfrontAmt = "5"
        case UpfrontPntsAmt = "6"
    }

    public enum UpfrontPriceType : String {

        public static var tag: Int {
            1741
        }

        case Percentage = "1"
        case FixedAmount = "3"
    }

    public enum UpfrontPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1742
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastUpfrontPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1743
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ApplLevelRecoveryIndicator : String {

        public static var tag: Int {
            1744
        }

        case NoApplRecoveryNeeded = "0"
        case ApplRecoveryNeeded = "1"
    }

    public enum BidMDEntryID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1745
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferMDEntryID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1746
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BidQuoteID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1747
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferQuoteID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1748
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalBidSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1749
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalOfferSize : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1750
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryQuoteID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1751
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CustodialLotID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1752
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum VersusPurchaseDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1753
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum VersusPurchasePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1754
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CurrentCostBasis : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1755
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCustodialLotID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1756
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegVersusPurchaseDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1757
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegVersusPurchasePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1758
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCurrentCostBasis : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1759
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitRequestType : String {

        public static var tag: Int {
            1760
        }

        case Definitions = "1"
        case Utilization = "2"
        case DefinitionsAndUtilizations = "3"
    }

    public enum RiskLimitRequestResult : String {

        public static var tag: Int {
            1761
        }

        case Successful = "0"
        case InvalidParty = "1"
        case InvalidRelatedParty = "2"
        case InvalidRiskLimitType = "3"
        case InvalidRiskLimitID = "4"
        case InvalidRiskLimitAmount = "5"
        case InvalidRiskWarningLevelAction = "6"
        case InvalidRiskInstrumentScope = "7"
        case RiskLimitActionsNotSupported = "8"
        case WarningLevelsNotSupported = "9"
        case WarningLevelActionsNotSupported = "10"
        case RiskInstrumentScopeNotSupported = "11"
        case RiskLimitNotApprovedForParty = "12"
        case RiskLimitAlreadyDefinedForParty = "13"
        case InstrumentNotApprovedForParty = "14"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum RiskLimitRequestStatus : String {

        public static var tag: Int {
            1762
        }

        case Accepted = "0"
        case AcceptedWithChanges = "1"
        case Rejected = "2"
        case AcceptancePending = "3"
    }

    public enum RiskLimitStatus : String {

        public static var tag: Int {
            1763
        }

        case Accepted = "0"
        case AcceptedWithChanges = "1"
        case Rejected = "2"
    }

    public enum RiskLimitResult : String {

        public static var tag: Int {
            1764
        }

        case Successful = "0"
        case InvalidParty = "1"
        case InvalidRelatedParty = "2"
        case InvalidRiskLimitType = "3"
        case InvalidRiskLimitID = "4"
        case InvalidRiskLimitAmount = "5"
        case InvalidRiskWarningLevelAction = "6"
        case InvalidRiskInstrumentScope = "7"
        case RiskLimitActionsNotSupported = "8"
        case WarningLevelsNotSupported = "9"
        case WarningLevelActionsNotSupported = "10"
        case RiskInstrumentScopeNotSupported = "11"
        case RiskLimitNotApprovedForParty = "12"
        case RiskLimitAlreadyDefinedForParty = "13"
        case InstrumentNotApprovedForParty = "14"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum RiskLimitUtilizationPercent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1765
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitUtilizationAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1766
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitAction : String {

        public static var tag: Int {
            1767
        }

        case QueueInbound = "0"
        case QueueOutbound = "1"
        case Reject = "2"
        case Disconnect = "3"
        case Warning = "4"
        case PingCreditCheckWithRevalidation = "5"
        case PingCreditCheckNoRevalidation = "6"
        case PushCreditCheckWithRevalidation = "7"
        case PushCreditCheckNoRevalidation = "8"
        case Suspend = "9"
        case HaltTrading = "10"
    }

    public enum RiskWarningLevelAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1768
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskWarningLevelAction : String {

        public static var tag: Int {
            1769
        }

        case QueueInbound = "0"
        case QueueOutbound = "1"
        case Reject = "2"
        case Disconnect = "3"
        case Warning = "4"
        case PingCreditCheckWithRevalidation = "5"
        case PingCreditCheckNoRevalidation = "6"
        case PushCreditCheckWithRevalidation = "7"
        case PushCreditCheckNoRevalidation = "8"
        case Suspend = "9"
        case HaltTrading = "10"
    }

    public enum EntitlementRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1770
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1771
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPartyEntitlements : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1772
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoEntitlements : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1773
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1774
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementType : String {

        public static var tag: Int {
            1775
        }

        case Trade = "0"
        case MakeMarkets = "1"
        case HoldPositions = "2"
        case PerformGiveUps = "3"
        case SubmitIOIs = "4"
        case SubscribeMarketData = "5"
        case ShortWithPreBorrow = "6"
        case SubmitQuoteRequests = "7"
        case RespondToQuoteRequests = "8"
    }

    public enum EntitlementID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1776
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoEntitlementAttrib : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1777
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementAttribType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1778
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementAttribDatatype : String {

        public static var tag: Int {
            1779
        }

        case Tenor = "29"
        case Pattern = "32"
        case Reserved100Plus = "33"
        case Reserved1000Plus = "34"
        case Reserved4000Plus = "35"
        case String = "14"
        case MultipleCharValue = "15"
        case Currency = "16"
        case Exchange = "17"
        case MonthYear = "18"
        case UTCTimestamp = "19"
        case UTCTimeOnly = "20"
        case LocalMktDate = "21"
        case UTCDateOnly = "22"
        case data = "23"
        case MultipleStringValue = "24"
        case Country = "25"
        case Language = "26"
        case TZTimeOnly = "27"
        case TZTimestamp = "28"
        case XMLData = "31"
        case char = "12"
        case Boolean = "13"
        case float = "6"
        case Qty = "7"
        case Price = "8"
        case PriceOffset = "9"
        case Amt = "10"
        case Percentage = "11"
        case int = "1"
        case Length = "2"
        case NumInGroup = "3"
        case SeqNum = "4"
        case TagNum = "5"
        case DayOfMonth = "30"
    }

    public enum EntitlementAttribValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1780
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementAttribCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1781
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1782
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1783
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementPlatform : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1784
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradSesControl : String {

        public static var tag: Int {
            1785
        }

        case Automatic = "0"
        case Manual = "1"
    }

    public enum TradeVolType : String {

        public static var tag: Int {
            1786
        }

        case NumberOfUnits = "0"
        case NumberOfRoundLots = "1"
    }

    public enum RefTickTableID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1787
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1788
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTargetMarketSegments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1789
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1790
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAffectedMarketSegments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1791
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AffectedMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1792
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNotAffectedMarketSegments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1793
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NotAffectedMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1794
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOrderEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1795
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderEventType : String {

        public static var tag: Int {
            1796
        }

        case Added = "1"
        case Modified = "2"
        case Deleted = "3"
        case PartiallyFilled = "4"
        case Filled = "5"
        case Suspended = "6"
        case Released = "7"
        case Restated = "8"
        case Locked = "9"
        case Triggered = "10"
        case Activated = "11"
    }

    public enum OrderEventExecID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1797
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderEventReason : String {

        public static var tag: Int {
            1798
        }

        case AddOrderRequest = "1"
        case ModifyOrderRequest = "2"
        case DeleteOrderRequest = "3"
        case OrderEnteredOOB = "4"
        case OrderModifiedOOB = "5"
        case OrderDeletedOOB = "6"
        case OrderActivatedOrTriggered = "7"
        case OrderExpired = "8"
        case ReserveOrderRefreshed = "9"
        case AwayMarketBetter = "10"
        case CorporateAction = "11"
        case StartOfDay = "12"
        case EndOfDay = "13"
    }

    public enum OrderEventPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1799
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderEventQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1800
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderEventLiquidityIndicator : String {

        public static var tag: Int {
            1801
        }

        case NeitherAddedNorRemovedLiquidity = "0"
        case AddedLiquidity = "1"
        case RemovedLiquidity = "2"
        case LiquidityRoutedOut = "3"
        case Auction = "4"
        case TriggeredStopOrder = "5"
        case TriggeredContingencyOrder = "6"
        case TriggeredMarketOrder = "7"
        case RemovedLiquidityAfterFirmOrderCommitment = "8"
        case AuctionExecutionAfterFirmOrderCommitment = "9"
    }

    public enum OrderEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1802
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AuctionType : String {

        public static var tag: Int {
            1803
        }

        case None = "0"
        case BlockOrderAuction = "1"
        case DirectedOrderAuction = "2"
        case ExposureOrderAuction = "3"
        case FlashOrderAuction = "4"
        case FacilitationOrderAuction = "5"
        case SolicitationOrderAuction = "6"
        case PriceImprovementMechanism = "7"
        case DirectedOrderPriceImprovementMechanism = "8"
    }

    public enum AuctionAllocationPct : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1804
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AuctionInstruction : String {

        public static var tag: Int {
            1805
        }

        case AutomatedAuctionPermitted = "0"
        case AutomatedAuctionNotPermitted = "1"
    }

    public enum RefClOrdID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1806
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LockType : String {

        public static var tag: Int {
            1807
        }

        case NotLocked = "0"
        case AwayMarketNetter = "1"
        case ThreeTickLocked = "2"
        case LockedByMarketMaker = "3"
        case DirectedOrderLock = "4"
        case MultilegLock = "5"
        case MarketOrderLock = "6"
        case PreAssignmentLock = "7"
    }

    public enum LockedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1808
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryLockedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1809
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReleaseInstruction : String {

        public static var tag: Int {
            1810
        }

        case ISO = "1"
        case NoAwayMarketBetterCheck = "2"
    }

    public enum ReleaseQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1811
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDisclosureInstructions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1812
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DisclosureType : String {

        public static var tag: Int {
            1813
        }

        case Volume = "1"
        case Price = "2"
        case Side = "3"
        case AON = "4"
        case General = "5"
        case ClearingAccount = "6"
        case CMTAAccount = "7"
    }

    public enum DisclosureInstruction : String {

        public static var tag: Int {
            1814
        }

        case No = "0"
        case Yes = "1"
        case UseDefaultSetting = "2"
    }

    public enum TradingCapacity : String {

        public static var tag: Int {
            1815
        }

        case Customer = "1"
        case CustomerProfessional = "2"
        case BrokerDealer = "3"
        case CustomerBrokerDealer = "4"
        case Principal = "5"
        case MarketMaker = "6"
        case AwayMarketMaker = "7"
        case SystematicInternaliser = "8"
    }

    public enum ClearingAccountType : String {

        public static var tag: Int {
            1816
        }

        case Customer = "1"
        case Firm = "2"
        case MarketMaker = "3"
    }

    public enum LegClearingAccountType : String {

        public static var tag: Int {
            1817
        }

        case Customer = "1"
        case Firm = "2"
        case MarketMaker = "3"
    }

    public enum TargetPartyRoleQualifier : String {

        public static var tag: Int {
            1818
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum RelatedHighPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1819
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedLowPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1820
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPriceSource : String {

        public static var tag: Int {
            1821
        }

        case NBBid = "1"
        case NBOffer = "2"
    }

    public enum MinQtyMethod : String {

        public static var tag: Int {
            1822
        }

        case Once = "1"
        case Multiple = "2"
    }

    public enum Triggered : String {

        public static var tag: Int {
            1823
        }

        case NotTriggered = "0"
        case Triggered = "1"
        case StopOrderTriggered = "2"
        case OCOOrderTriggered = "3"
        case OTOOrderTriggered = "4"
        case OUOOrderTriggered = "5"
    }

    public enum AffectedOrigClOrdID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1824
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NotAffSecondaryOrderID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1825
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EventTimePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1826
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EventTimeUnit : String {

        public static var tag: Int {
            1827
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LastQtyVariance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1828
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoCrossLegs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1829
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPriceIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1830
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPriceSecondaryIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1831
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearedIndicator : String {

        public static var tag: Int {
            1832
        }

        case NotCleared = "0"
        case Cleared = "1"
        case Submitted = "2"
        case Rejected = "3"
    }

    public enum ContractRefPosType : String {

        public static var tag: Int {
            1833
        }

        case TwoComponentIntercommoditySpread = "0"
        case IndexOrBasket = "1"
        case TwoComponentLocationBasis = "2"
        case Other = "99"
    }

    public enum PositionCapacity : String {

        public static var tag: Int {
            1834
        }

        case Principal = "0"
        case Agent = "1"
        case Customer = "2"
        case Counterparty = "3"
    }

    public enum PosQtyUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1835
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosQtyUnitOfMeasure : String {

        public static var tag: Int {
            1836
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingContractPriceRefMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1837
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTradePriceConditions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1838
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradePriceCondition : String {

        public static var tag: Int {
            1839
        }

        case SpecialCumDividend = "0"
        case SpecialCumRights = "1"
        case SpecialExDividend = "2"
        case SpecialExRights = "3"
        case SpecialCumCoupon = "4"
        case SpecialCumCapitalRepayments = "5"
        case SpecialExCoupon = "6"
        case SpecialExCapitalRepayments = "7"
        case CashSettlement = "8"
        case SpecialCumBonus = "9"
        case SpecialPrice = "10"
        case SpecialExBonus = "11"
        case GuaranteedDelivery = "12"
        case SpecialDividend = "13"
        case PriceImprovement = "14"
        case NonPriceFormingTrade = "15"
        case TradeExemptedFromTradingObligation = "16"
        case PricePending = "17"
        case PriceNotApplicable = "18"
    }

    public enum TradeAllocStatus : String {

        public static var tag: Int {
            1840
        }

        case PendingClear = "0"
        case Claimed = "1"
        case Cleared = "2"
        case Rejected = "3"
    }

    public enum NoTradeQtys : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1841
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeQtyType : String {

        public static var tag: Int {
            1842
        }

        case ClearedQuantity = "0"
        case LongSideClaimedQuantity = "1"
        case ShortSideClaimedQuantity = "2"
        case LongSideRejectedQuantity = "3"
        case ShortSideRejectedQuantity = "4"
        case PendingQuantity = "5"
        case TransactionQuantity = "6"
        case RemainingQuantity = "7"
        case PreviousRemainingQuantity = "8"
    }

    public enum TradeQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1843
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTradeAllocAmts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1844
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAllocAmtType : String {

        public static var tag: Int {
            1845
        }

        case CashAmount = "CASH"
        case CashResidualAmount = "CRES"
        case FinalMarkToMarketAmount = "FMTM"
        case IncrementalMarkToMarketAmount = "IMTM"
        case PremiumAmount = "PREM"
        case StartOfDayMarkToMarketAmount = "SMTM"
        case TradeVariationAmount = "TVAR"
        case ValueAdjustedAmount = "VADJ"
        case SettlementValue = "SETL"
        case InitialTradeCouponAmount = "ICPN"
        case AccruedCouponAmount = "ACPN"
        case CouponAmount = "CPN"
        case IncrementalAccruedCoupon = "IACPN"
        case CollateralizedMarkToMarket = "CMTM"
        case IncrementalCollateralizedMarkToMarket = "ICMTM"
        case CompensationAmount = "DLV"
        case TotalBankedAmount = "BANK"
        case TotalCollateralizedAmount = "COLAT"
        case LongPairedSwapNotionalValue = "LSNV"
        case ShortPairedSwapNotionalValue = "SSNV"
        case StartOfDayAccruedCoupon = "SACPN"
        case NetPresentValue = "NPV"
        case StartOfDayNetPresentValue = "SNPV"
        case NetCashFlow = "NCF"
        case PresentValueOfFees = "PVFEES"
        case PresentValueOneBasisPoints = "PV01"
        case FiveYearEquivalentNotional = "5YREN"
        case UndiscountedMarkToMarket = "UMTM"
        case MarkToModel = "MTD"
        case MarkToMarketVariance = "VMTM"
        case MarkToModelVariance = "VMTD"
        case UpfrontPayment = "UPFRNT"
        case EndVale = "ENDV"
        case OutstandingMarginLoan = "MGNLN"
        case LoanValue = "LNVL"
    }

    public enum TradeAllocAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1846
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAllocCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1847
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAllocGroupInstruction : String {

        public static var tag: Int {
            1848
        }

        case Add = "0"
        case DoNotAdd = "1"
    }

    public enum OffsetInstruction : String {

        public static var tag: Int {
            1849
        }

        case Offset = "0"
        case Onset = "1"
    }

    public enum TradeAllocAmtReason : String {

        public static var tag: Int {
            1850
        }

        case OptionsSettlement = "0"
        case PendingErosionAdjustment = "1"
        case FinalErosionAdjustment = "2"
        case TearUpCouponAmount = "3"
        case PriceAlignmentInterest = "4"
        case DeliveryInvoiceCharges = "5"
        case DeliveryStorageCharges = "6"
    }

    public enum StrategyLinkID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1851
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideAvgPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1852
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideAvgPxIndicator : String {

        public static var tag: Int {
            1853
        }

        case NoAvgPricing = "0"
        case TradeIsPartAvgPriceGrp = "1"
        case LastTradeIsPartAvgPriceGrp = "2"
    }

    public enum SideAvgPxGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1854
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRelatedTrades : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1855
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1856
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedTradeIDSource : String {

        public static var tag: Int {
            1857
        }

        case NonFIXSource = "0"
        case TradeID = "1"
        case SecondaryTradeID = "2"
        case TradeReportID = "3"
        case FirmTradeID = "4"
        case SecondaryFirmTradeID = "5"
        case RegulatoryTradeID = "6"
    }

    public enum RelatedTradeDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1858
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedTradeMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1859
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedTradeQuantity : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1860
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRelatedPositions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1861
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPositionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1862
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedPositionIDSource : String {

        public static var tag: Int {
            1863
        }

        case PosMaintRptID = "1"
        case TransferID = "2"
        case PositionEntityID = "3"
    }

    public enum RelatedPositionDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1864
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteAckStatus : String {

        public static var tag: Int {
            1865
        }

        case ReceivedNotYetProcessed = "0"
        case Accepted = "1"
        case Rejected = "2"
    }

    public enum StrikeIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1866
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1867
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoValueChecks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1868
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValueCheckType : String {

        public static var tag: Int {
            1869
        }

        case PriceCheck = "1"
        case NotionalValueCheck = "2"
        case QuantityCheck = "3"
    }

    public enum ValueCheckAction : String {

        public static var tag: Int {
            1870
        }

        case DoNotCheck = "0"
        case Check = "1"
        case BestEffort = "2"
    }

    public enum LegSecurityXMLLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1871
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityXML : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1872
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecurityXMLSchema : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1873
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityXMLLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1874
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityXML : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1875
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityXMLSchema : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1876
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyDetailRequestResult : String {

        public static var tag: Int {
            1877
        }

        case Successful = "0"
        case InvalidParty = "1"
        case InvalidRelatedParty = "2"
        case InvalidPartyStatus = "3"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum PartyDetailRequestStatus : String {

        public static var tag: Int {
            1878
        }

        case Accepted = "0"
        case AcceptedWithChanges = "1"
        case Rejected = "2"
        case AcceptancePending = "3"
    }

    public enum PartyDetailDefinitionStatus : String {

        public static var tag: Int {
            1879
        }

        case Accepted = "0"
        case AcceptedWithChanges = "1"
        case Rejected = "2"
    }

    public enum PartyDetailDefinitionResult : String {

        public static var tag: Int {
            1880
        }

        case Successful = "0"
        case InvalidParty = "1"
        case InvalidRelatedParty = "2"
        case InvalidPartyStatus = "3"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum EntitlementRequestResult : String {

        public static var tag: Int {
            1881
        }

        case Successful = "0"
        case InvalidParty = "1"
        case InvalidRelatedParty = "2"
        case InvalidEntitlementType = "3"
        case InvalidEntitlementID = "4"
        case InvalidEntitlementAttribute = "5"
        case InvalidInstrumentScope = "6"
        case InvalidMarketSegmentScope = "7"
        case InvalidStartDate = "8"
        case InvalidEndDate = "9"
        case InstrumentScopeNotSupported = "10"
        case MarketSegmentScopeNotSupported = "11"
        case EntitlementNotApprovedForParty = "12"
        case EntitlementAlreadyDefinedForParty = "13"
        case InstrumentNotApprovedForParty = "14"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum EntitlementRequestStatus : String {

        public static var tag: Int {
            1882
        }

        case Accepted = "0"
        case AcceptedWithChanges = "1"
        case Rejected = "2"
        case AcceptancePending = "3"
    }

    public enum EntitlementStatus : String {

        public static var tag: Int {
            1883
        }

        case Accepted = "0"
        case AcceptedWithChanges = "1"
        case Rejected = "2"
        case Pending = "3"
        case Requested = "4"
        case Deferred = "5"
    }

    public enum EntitlementResult : String {

        public static var tag: Int {
            1884
        }

        case Successful = "0"
        case InvalidParty = "1"
        case InvalidRelatedParty = "2"
        case InvalidEntitlementType = "3"
        case InvalidEntitlementID = "4"
        case InvalidEntitlementAttribute = "5"
        case InvalidInstrumentScope = "6"
        case InvalidMarketSegmentScope = "7"
        case InvalidStartDate = "8"
        case InvalidEndDate = "9"
        case InstrumentScopeNotSupported = "10"
        case MarketSegmentScopeNotSupported = "11"
        case EntitlementNotApprovedForParty = "12"
        case EntitlementAlreadyDefinedForParty = "13"
        case InstrumentNotApprovedForParty = "14"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum EntitlementRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1885
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPriceUnitOfMeasure : String {

        public static var tag: Int {
            1886
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum SettlPriceUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1887
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeMatchTimestamp : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1888
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoInstrmtMatchSides : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1889
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTrdMatchSides : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1890
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdMatchSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1891
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegExecs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1892
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExecID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1893
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1894
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegTradeReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1895
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeMatchAckStatus : String {

        public static var tag: Int {
            1896
        }

        case ReceivedNotProcessed = "0"
        case Accepted = "1"
        case Rejected = "2"
    }

    public enum TradeMatchRejectReason : String {

        public static var tag: Int {
            1897
        }

        case Successful = "0"
        case InvalidPartyInformation = "1"
        case UnknownInstrument = "2"
        case Unauthorized = "3"
        case InvalidTradeType = "4"
        case Other = "99"
    }

    public enum SideMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1898
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideVenueType : String {

        public static var tag: Int {
            1899
        }

        case Electronic = "E"
        case Pit = "P"
        case ExPit = "X"
        case ClearingHouse = "C"
        case RegisteredMarket = "R"
        case OffMarket = "O"
        case CentralLimitOrderBook = "B"
        case QuoteDrivenMarket = "Q"
        case DarkOrderBook = "D"
        case AuctionDrivenMarket = "A"
        case QuoteNegotiation = "N"
        case VoiceNegotiation = "V"
        case HybridMarket = "H"
    }

    public enum SideExecRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1900
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExecRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1901
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HaircutIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1902
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegulatoryTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1903
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegulatoryTradeIDEvent : String {

        public static var tag: Int {
            1904
        }

        case InitialBlockTrade = "0"
        case Allocation = "1"
        case Clearing = "2"
        case Compression = "3"
        case Novation = "4"
        case Termination = "5"
        case PostTrdVal = "6"
    }

    public enum RegulatoryTradeIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1905
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegulatoryTradeIDType : String {

        public static var tag: Int {
            1906
        }

        case Current = "0"
        case Previous = "1"
        case Block = "2"
        case Related = "3"
        case ClearedBlockTrade = "4"
        case TradingVenueTransactionIdentifier = "5"
    }

    public enum NoRegulatoryTradeIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1907
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAllocRegulatoryTradeIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1908
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocRegulatoryTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1909
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocRegulatoryTradeIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1910
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocRegulatoryTradeIDEvent : String {

        public static var tag: Int {
            1911
        }

        case InitialBlockTrade = "0"
        case Allocation = "1"
        case Clearing = "2"
        case Compression = "3"
        case Novation = "4"
        case Termination = "5"
        case PostTrdVal = "6"
    }

    public enum AllocRegulatoryTradeIDType : String {

        public static var tag: Int {
            1912
        }

        case Current = "0"
        case Previous = "1"
        case Block = "2"
        case Related = "3"
        case ClearedBlockTrade = "4"
        case TradingVenueTransactionIdentifier = "5"
    }

    public enum NumOfCompetitors : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1913
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ResponseTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1914
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteDisplayTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1915
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExposureDurationUnit : String {

        public static var tag: Int {
            1916
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum CoverPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1917
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoClearingAccountTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1918
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPriceMovements : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1919
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPriceMovementValues : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1920
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceMovementValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1921
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceMovementPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1922
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceMovementType : String {

        public static var tag: Int {
            1923
        }

        case Amount = "0"
        case Percentage = "1"
    }

    public enum ClearingIntention : String {

        public static var tag: Int {
            1924
        }

        case DoNotIntendToClear = "0"
        case IntendToClear = "1"
    }

    public enum TradeClearingInstruction : String {

        public static var tag: Int {
            1925
        }

        case ProcessNormally = "0"
        case ExcludeFromAllNetting = "1"
        case BilateralNettingOnly = "2"
        case ExClearing = "3"
        case SpecialTrade = "4"
        case MultilateralNetting = "5"
        case ClearAgainstCentralCounterparty = "6"
        case ExcludeFromCentralCounterparty = "7"
        case ManualMode = "8"
        case AutomaticPostingMode = "9"
        case AutomaticGiveUpMode = "10"
        case QualifiedServiceRepresentativeQSR = "11"
        case CustomerTrade = "12"
        case SelfClearing = "13"
        case BuyIn = "14"
    }

    public enum BackloadedTradeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1926
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ConfirmationMethod : String {

        public static var tag: Int {
            1927
        }

        case NonElectronic = "0"
        case Electronic = "1"
        case Unconfirmed = "2"
    }

    public enum MandatoryClearingIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1928
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MixedSwapIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1929
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OffMarketPriceIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1930
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum VerificationMethod : String {

        public static var tag: Int {
            1931
        }

        case NonElectronic = "0"
        case Electronic = "1"
    }

    public enum ClearingRequirementException : String {

        public static var tag: Int {
            1932
        }

        case NoException = "0"
        case Exception = "1"
        case EndUserException = "2"
        case InterAffiliateException = "3"
        case TreasuryAffiliateException = "4"
        case CooperativeException = "5"
    }

    public enum IRSDirection : String {

        public static var tag: Int {
            1933
        }

        case Pay = "PAY"
        case Rcv = "RCV"
        case NA = "NA"
    }

    public enum RegulatoryReportType : String {

        public static var tag: Int {
            1934
        }

        case RT = "0"
        case PET = "1"
        case Snapshot = "2"
        case Confirmation = "3"
        case RTPET = "4"
        case PETConfirmation = "5"
        case RTPETConfirmation = "6"
        case PostTrade = "7"
        case Verification = "8"
        case PstTrdEvnt = "9"
        case PstTrdEvntRTReportable = "10"
        case LMTF = "11"
        case DATF = "12"
        case VOLO = "13"
        case FWAF = "14"
        case IDAF = "15"
        case VOLW = "16"
        case FULF = "17"
        case FULA = "18"
        case FULV = "19"
        case FULJ = "20"
        case COAF = "21"
        case Order = "22"
        case ChildOrder = "23"
        case OrderRoute = "24"
        case Trade = "25"
        case Quote = "26"
        case Supplement = "27"
        case NewTransaction = "28"
        case TransactionCorrection = "29"
        case TransactionModification = "30"
        case CollateralUpdate = "31"
        case MarginUpdate = "32"
        case TransactionReportedInError = "33"
        case TerminationEarlyTermination = "34"
    }

    public enum VoluntaryRegulatoryReport : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1935
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeCollateralization : String {

        public static var tag: Int {
            1936
        }

        case Uncollateralized = "0"
        case PartiallyCollateralized = "1"
        case OneWayCollaterallization = "2"
        case FullyCollateralized = "3"
        case NetExposure = "4"
    }

    public enum TradeContinuation : String {

        public static var tag: Int {
            1937
        }

        case Novation = "0"
        case PartialNovation = "1"
        case TradeUnwind = "2"
        case PartialTradeUnwind = "3"
        case Exercise = "4"
        case Netting = "5"
        case FullNetting = "6"
        case PartialNetting = "7"
        case Amendment = "8"
        case Increase = "9"
        case CreditEvent = "10"
        case StrategicRestructuring = "11"
        case SuccessionEventReorganization = "12"
        case SuccessionEventRenaming = "13"
        case Porting = "14"
        case Withdrawl = "15"
        case Void = "16"
        case AccountTransfer = "17"
        case GiveUp = "18"
        case TakeUp = "19"
        case AveragePricing = "20"
        case Reversal = "21"
        case AllocTrdPosting = "22"
        case Cascade = "23"
        case Delivery = "24"
        case OptionAsgn = "25"
        case Expiration = "26"
        case Maturity = "27"
        case EqualPosAdj = "28"
        case UnequalPosAdj = "29"
        case Correction = "30"
        case EarlyTermination = "31"
        case Rerate = "32"
        case Other = "99"
    }

    public enum AssetClass : String {

        public static var tag: Int {
            1938
        }

        case InterestRate = "1"
        case Currency = "2"
        case Credit = "3"
        case Equity = "4"
        case Commodity = "5"
        case Other = "6"
        case Cash = "7"
        case Debt = "8"
        case Fund = "9"
        case LoanFacility = "10"
        case Index = "11"
    }

    public enum AssetSubClass : String {

        public static var tag: Int {
            1939
        }

        case Metals = "13"
        case Bullion = "14"
        case Energy = "15"
        case CommodityIndex = "16"
        case Agricultural = "17"
        case Environmental = "18"
        case Freight = "19"
        case Fertilizer = "41"
        case IndustrialProduct = "42"
        case Inflation = "43"
        case Paper = "44"
        case Polypropylene = "45"
        case OfficialEconomicStatistics = "46"
        case SingleName = "4"
        case CreditIndex = "5"
        case IndexTranche = "6"
        case CreditBasket = "7"
        case Basket = "3"
        case FXCrossRates = "38"
        case FXEmergingMarkets = "39"
        case FXMajors = "40"
        case Government = "20"
        case Agency = "21"
        case Corporate = "22"
        case Financing = "23"
        case MoneyMarket = "24"
        case Mortgage = "25"
        case Municipal = "26"
        case Common = "9"
        case Preferred = "10"
        case EquityIndex = "11"
        case EquityBasket = "12"
        case DividendIndex = "34"
        case StockDividend = "35"
        case ExchangeTradedFund = "36"
        case VolatilityIndex = "37"
        case MutualFund = "27"
        case CollectiveInvestmentVehicle = "28"
        case InvestmentProgram = "29"
        case SpecializedAccountProgram = "30"
        case SingleCurrency = "1"
        case CrossCurrency = "2"
        case TermLoan = "31"
        case BridgeLoan = "32"
        case LetterOfCredit = "33"
        case Exotic = "8"
        case OtherC10 = "47"
        case Other = "48"
    }

    public enum AssetType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1940
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SwapClass : String {

        public static var tag: Int {
            1941
        }

        case BasisSwap = "BS"
        case IndexSwap = "IX"
        case BroadBasedSecuritySwap = "BB"
        case BasketSwap = "SK"
    }

    public enum NthToDefault : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1942
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MthToDefault : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1943
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettledEntityMatrixSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1944
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettledEntityMatrixPublicationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1945
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CouponType : String {

        public static var tag: Int {
            1946
        }

        case Zero = "0"
        case FixedRate = "1"
        case FloatingRate = "2"
        case Structured = "3"
    }

    public enum TotalIssuedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1947
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CouponFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1948
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CouponFrequencyUnit : String {

        public static var tag: Int {
            1949
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum CouponDayCount : String {

        public static var tag: Int {
            1950
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum ConvertibleBondEquityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1951
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ConvertibleBondEquityIDSource : String {

        public static var tag: Int {
            1952
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum ContractPriceRefMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1953
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LienSeniority : String {

        public static var tag: Int {
            1954
        }

        case Unknown = "0"
        case FirstLien = "1"
        case SecondLien = "2"
        case ThirdLien = "3"
    }

    public enum LoanFacility : String {

        public static var tag: Int {
            1955
        }

        case BridgeLoan = "0"
        case LetterOfCredit = "1"
        case RevolvingLoan = "2"
        case SwinglineFunding = "3"
        case TermLoan = "4"
        case TradeClaim = "5"
    }

    public enum ReferenceEntityType : String {

        public static var tag: Int {
            1956
        }

        case Asian = "1"
        case AustralianNewZealand = "2"
        case EuropeanEmergingMarkets = "3"
        case Japanese = "4"
        case NorthAmericanHighYield = "5"
        case NorthAmericanInsurance = "6"
        case NorthAmericanInvestmentGrade = "7"
        case Singaporean = "8"
        case WesternEuropean = "9"
        case WesternEuropeanInsurance = "10"
    }

    public enum IndexSeries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1957
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IndexAnnexVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1958
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IndexAnnexDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1959
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IndexAnnexSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1960
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AgreementVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1961
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MasterConfirmationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1962
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MasterConfirmationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1963
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MasterConfirmationAnnexDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1964
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MasterConfirmationAnnexDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1965
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BrokerConfirmationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1966
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CreditSupportAgreementDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1967
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CreditSupportAgreementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1968
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CreditSupportAgreementID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1969
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum GoverningLaw : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1970
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSideRegulatoryTradeIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1971
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideRegulatoryTradeID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1972
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideRegulatoryTradeIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1973
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideRegulatoryTradeIDEvent : String {

        public static var tag: Int {
            1974
        }

        case InitialBlockTrade = "0"
        case Allocation = "1"
        case Clearing = "2"
        case Compression = "3"
        case Novation = "4"
        case Termination = "5"
    }

    public enum SideRegulatoryTradeIDType : String {

        public static var tag: Int {
            1975
        }

        case Current = "0"
        case Previous = "1"
        case Block = "2"
        case Related = "3"
    }

    public enum NoSecondaryAssetClasses : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1976
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryAssetClass : String {

        public static var tag: Int {
            1977
        }

        case InterestRate = "1"
        case Currency = "2"
        case Credit = "3"
        case Equity = "4"
        case Commodity = "5"
        case Other = "6"
        case Cash = "7"
        case Debt = "8"
        case Fund = "9"
        case LoanFacility = "10"
        case Index = "11"
    }

    public enum SecondaryAssetSubClass : String {

        public static var tag: Int {
            1978
        }

        case Metals = "13"
        case Bullion = "14"
        case Energy = "15"
        case CommodityIndex = "16"
        case Agricultural = "17"
        case Environmental = "18"
        case Freight = "19"
        case Fertilizer = "41"
        case IndustrialProduct = "42"
        case Inflation = "43"
        case Paper = "44"
        case Polypropylene = "45"
        case OfficialEconomicStatistics = "46"
        case SingleName = "4"
        case CreditIndex = "5"
        case IndexTranche = "6"
        case CreditBasket = "7"
        case Basket = "3"
        case FXCrossRates = "38"
        case FXEmergingMarkets = "39"
        case FXMajors = "40"
        case Government = "20"
        case Agency = "21"
        case Corporate = "22"
        case Financing = "23"
        case MoneyMarket = "24"
        case Mortgage = "25"
        case Municipal = "26"
        case Common = "9"
        case Preferred = "10"
        case EquityIndex = "11"
        case EquityBasket = "12"
        case DividendIndex = "34"
        case StockDividend = "35"
        case ExchangeTradedFund = "36"
        case VolatilityIndex = "37"
        case MutualFund = "27"
        case CollectiveInvestmentVehicle = "28"
        case InvestmentProgram = "29"
        case SpecializedAccountProgram = "30"
        case SingleCurrency = "1"
        case CrossCurrency = "2"
        case TermLoan = "31"
        case BridgeLoan = "32"
        case LetterOfCredit = "33"
        case Exotic = "8"
        case OtherC10 = "47"
        case Other = "48"
    }

    public enum SecondaryAssetType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1979
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BlockTrdAllocIndicator : String {

        public static var tag: Int {
            1980
        }

        case BlockToBeAllocated = "0"
        case BlockNotToBeAllocated = "1"
        case AllocatedTrade = "2"
    }

    public enum NoUnderlyingEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1981
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEventType : String {

        public static var tag: Int {
            1982
        }

        case Put = "1"
        case Call = "2"
        case Tender = "3"
        case SinkingFundCall = "4"
        case Activation = "5"
        case Inactiviation = "6"
        case LastEligibleTradeDate = "7"
        case SwapStartDate = "8"
        case SwapEndDate = "9"
        case SwapRollDate = "10"
        case SwapNextStartDate = "11"
        case SwapNextRollDate = "12"
        case FirstDeliveryDate = "13"
        case LastDeliveryDate = "14"
        case InitialInventoryDueDate = "15"
        case FinalInventoryDueDate = "16"
        case FirstIntentDate = "17"
        case LastIntentDate = "18"
        case PositionRemovalDate = "19"
        case MinimumNotice = "20"
        case DeliveryStartTime = "21"
        case DeliveryEndTime = "22"
        case FirstNoticeDate = "23"
        case LastNoticeDate = "24"
        case FirstExerciseDate = "25"
        case RedemptionDate = "26"
        case TrdCntntnEfctvDt = "27"
        case Other = "99"
    }

    public enum UnderlyingEventDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1983
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEventTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1984
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEventTimeUnit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1985
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEventTimePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1986
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEventPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1987
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingConstituentWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1988
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCouponType : String {

        public static var tag: Int {
            1989
        }

        case Zero = "0"
        case FixedRate = "1"
        case FloatingRate = "2"
        case Structured = "3"
    }

    public enum UnderlyingTotalIssuedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1990
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCouponFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1991
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCouponFrequencyUnit : String {

        public static var tag: Int {
            1992
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingCouponDayCount : String {

        public static var tag: Int {
            1993
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum UnderlyingObligationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1994
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingObligationIDSource : String {

        public static var tag: Int {
            1995
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingEquityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            1996
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEquityIDSource : String {

        public static var tag: Int {
            1997
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingLienSeniority : String {

        public static var tag: Int {
            1998
        }

        case Unknown = "0"
        case FirstLien = "1"
        case SecondLien = "2"
        case ThirdLien = "3"
    }

    public enum UnderlyingLoanFacility : String {

        public static var tag: Int {
            1999
        }

        case BridgeLoan = "0"
        case LetterOfCredit = "1"
        case RevolvingLoan = "2"
        case SwinglineFunding = "3"
        case TermLoan = "4"
        case TradeClaim = "5"
    }

    public enum UnderlyingReferenceEntityType : String {

        public static var tag: Int {
            2000
        }

        case Asian = "1"
        case AustralianNewZealand = "2"
        case EuropeanEmergingMarkets = "3"
        case Japanese = "4"
        case NorthAmericanHighYield = "5"
        case NorthAmericanInsurance = "6"
        case NorthAmericanInvestmentGrade = "7"
        case Singaporean = "8"
        case WesternEuropean = "9"
        case WesternEuropeanInsurance = "10"
    }

    public enum StrikeIndexSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2001
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValuationSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2002
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingIndexSeries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2003
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingIndexAnnexVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2004
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingIndexAnnexDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2005
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingIndexAnnexSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2006
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2007
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecurityGroup : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2008
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettleOnOpenFlag : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2009
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAssignmentMethod : String {

        public static var tag: Int {
            2010
        }

        case ProRata = "P"
        case Random = "R"
    }

    public enum UnderlyingSecurityStatus : String {

        public static var tag: Int {
            2011
        }

        case Active = "1"
        case Inactive = "2"
        case ActiveClosingOrdersOnly = "3"
        case Expired = "4"
        case Delisted = "5"
        case KnockedOut = "6"
        case KnockOutRevoked = "7"
        case PendingExpiry = "8"
        case Suspended = "9"
        case Published = "10"
        case PendingDeletion = "11"
    }

    public enum UnderlyingObligationType : String {

        public static var tag: Int {
            2012
        }

        case Bond = "0"
        case ConvertibleBond = "1"
        case Mortgage = "2"
        case Loan = "3"
    }

    public enum UnderlyingAssetClass : String {

        public static var tag: Int {
            2013
        }

        case InterestRate = "1"
        case Currency = "2"
        case Credit = "3"
        case Equity = "4"
        case Commodity = "5"
        case Other = "6"
        case Cash = "7"
        case Debt = "8"
        case Fund = "9"
        case LoanFacility = "10"
        case Index = "11"
    }

    public enum UnderlyingAssetSubClass : String {

        public static var tag: Int {
            2014
        }

        case Metals = "13"
        case Bullion = "14"
        case Energy = "15"
        case CommodityIndex = "16"
        case Agricultural = "17"
        case Environmental = "18"
        case Freight = "19"
        case Fertilizer = "41"
        case IndustrialProduct = "42"
        case Inflation = "43"
        case Paper = "44"
        case Polypropylene = "45"
        case OfficialEconomicStatistics = "46"
        case SingleName = "4"
        case CreditIndex = "5"
        case IndexTranche = "6"
        case CreditBasket = "7"
        case Basket = "3"
        case FXCrossRates = "38"
        case FXEmergingMarkets = "39"
        case FXMajors = "40"
        case Government = "20"
        case Agency = "21"
        case Corporate = "22"
        case Financing = "23"
        case MoneyMarket = "24"
        case Mortgage = "25"
        case Municipal = "26"
        case Common = "9"
        case Preferred = "10"
        case EquityIndex = "11"
        case EquityBasket = "12"
        case DividendIndex = "34"
        case StockDividend = "35"
        case ExchangeTradedFund = "36"
        case VolatilityIndex = "37"
        case MutualFund = "27"
        case CollectiveInvestmentVehicle = "28"
        case InvestmentProgram = "29"
        case SpecializedAccountProgram = "30"
        case SingleCurrency = "1"
        case CrossCurrency = "2"
        case TermLoan = "31"
        case BridgeLoan = "32"
        case LetterOfCredit = "33"
        case Exotic = "8"
        case OtherC10 = "47"
        case Other = "48"
    }

    public enum UnderlyingAssetType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2015
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSwapClass : String {

        public static var tag: Int {
            2016
        }

        case BasisSwap = "BS"
        case IndexSwap = "IX"
        case BroadBasedSecuritySwap = "BB"
        case BasketSwap = "SK"
    }

    public enum UnderlyingNthToDefault : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2017
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMthToDefault : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2018
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettledEntityMatrixSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2019
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettledEntityMatrixPublicationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2020
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStrikeMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2021
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStrikeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2022
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStrikePriceDeterminationMethod : String {

        public static var tag: Int {
            2023
        }

        case FixedStrike = "1"
        case StrikeSetAtExpiration = "2"
        case StrikeSetToAverageAcrossLife = "3"
        case StrikeSetToOptimalValue = "4"
    }

    public enum UnderlyingStrikePriceBoundaryMethod : String {

        public static var tag: Int {
            2024
        }

        case LessThan = "1"
        case LessThanOrEqual = "2"
        case Equal = "3"
        case GreaterThanOrEqual = "4"
        case GreaterThan = "5"
    }

    public enum UnderlyingStrikePriceBoundaryPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2025
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMinPriceIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2026
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMinPriceIncrementAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2027
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptPayoutType : String {

        public static var tag: Int {
            2028
        }

        case Vanilla = "1"
        case Capped = "2"
        case Binary = "3"
        case Asian = "4"
        case Barrier = "5"
        case DigitalBarrier = "6"
        case Lookback = "7"
        case OtherPathDependent = "8"
        case Other = "99"
    }

    public enum UnderlyingOptPayoutAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2029
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPriceQuoteMethod : String {

        public static var tag: Int {
            2030
        }

        case Standard = "STD"
        case Index = "INX"
        case InterestRateIndex = "INT"
        case PercentOfPar = "PCTPAR"
    }

    public enum UnderlyingValuationMethod : String {

        public static var tag: Int {
            2031
        }

        case PremiumStyle = "EQTY"
        case FuturesStyleMarkToMarket = "FUT"
        case FuturesStyleWithAnAttachedCashAdjustment = "FUTDA"
        case CDSStyleCollateralization = "CDS"
        case CDSInDeliveryUseRecoveryRateToCalculate = "CDSD"
    }

    public enum UnderlyingListMethod : String {

        public static var tag: Int {
            2032
        }

        case PreListedOnly = "0"
        case UserRequested = "1"
    }

    public enum UnderlyingCapPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2033
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFloorPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2034
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFlexibleIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2035
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFlexProductEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2036
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2037
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNTPositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2038
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPool : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2039
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingContractSettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2040
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDatedDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2041
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInterestAccrualDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2042
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingShortSaleRestriction : String {

        public static var tag: Int {
            2043
        }

        case NoRestrictions = "0"
        case SecurityNotShortable = "1"
        case SecurityNotShortableAtOrBelowBestBid = "2"
        case SecurityNotShortableWithoutPreBorrow = "3"
    }

    public enum UnderlyingRefTickTableID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2044
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2045
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventType : String {

        public static var tag: Int {
            2046
        }

        case Capped = "1"
        case Trigger = "2"
        case KnockInUp = "3"
        case KnockInDown = "4"
        case KnockOutUp = "5"
        case KnockOutDown = "6"
        case Underlying = "7"
        case ResetBarrier = "8"
        case RollingBarrier = "9"
        case OneTouch = "10"
        case NoTouch = "11"
        case DblOneTouch = "12"
        case DblNoTouch = "13"
        case FXComposite = "14"
        case FXQuanto = "15"
        case FXCrssCcy = "16"
        case StrkSpread = "17"
        case ClndrSpread = "18"
        case PxObsvtn = "19"
        case PassThrough = "20"
        case StrkSched = "21"
        case EquityValuation = "22"
        case DividendValuation = "23"
    }

    public enum UnderlyingComplexOptPayoutAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2047
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2048
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPriceBoundaryMethod : String {

        public static var tag: Int {
            2049
        }

        case LessThanComplexEventPrice = "1"
        case LessThanOrEqualToComplexEventPrice = "2"
        case EqualToComplexEventPrice = "3"
        case GreaterThanOrEqualToComplexEventPrice = "4"
        case GreaterThanComplexEventPrice = "5"
    }

    public enum UnderlyingComplexEventPriceBoundaryPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2050
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPriceTimeType : String {

        public static var tag: Int {
            2051
        }

        case Expiration = "1"
        case Immediate = "2"
        case SpecifiedDate = "3"
        case Close = "4"
        case Open = "5"
        case OfficialSettlPrice = "6"
        case DerivativesClose = "7"
        case AsSpecifiedMasterConfirmation = "8"
    }

    public enum UnderlyingComplexEventCondition : String {

        public static var tag: Int {
            2052
        }

        case And = "1"
        case Or = "2"
    }

    public enum NoUnderlyingComplexEventDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2053
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2054
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2055
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2056
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventStartTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2057
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventEndTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2058
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2059
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEventType : String {

        public static var tag: Int {
            2060
        }

        case Put = "1"
        case Call = "2"
        case Tender = "3"
        case SinkingFundCall = "4"
        case Activation = "5"
        case Inactiviation = "6"
        case LastEligibleTradeDate = "7"
        case SwapStartDate = "8"
        case SwapEndDate = "9"
        case SwapRollDate = "10"
        case SwapNextStartDate = "11"
        case SwapNextRollDate = "12"
        case FirstDeliveryDate = "13"
        case LastDeliveryDate = "14"
        case InitialInventoryDueDate = "15"
        case FinalInventoryDueDate = "16"
        case FirstIntentDate = "17"
        case LastIntentDate = "18"
        case PositionRemovalDate = "19"
        case MinimumNotice = "20"
        case DeliveryStartTime = "21"
        case DeliveryEndTime = "22"
        case FirstNoticeDate = "23"
        case LastNoticeDate = "24"
        case FirstExerciseDate = "25"
        case RedemptionDate = "26"
        case TrdCntntnEfctvDt = "27"
        case Other = "99"
    }

    public enum LegEventDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2061
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEventTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2062
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEventTimeUnit : String {

        public static var tag: Int {
            2063
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegEventTimePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2064
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEventPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2065
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2066
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAssetClass : String {

        public static var tag: Int {
            2067
        }

        case InterestRate = "1"
        case Currency = "2"
        case Credit = "3"
        case Equity = "4"
        case Commodity = "5"
        case Other = "6"
        case Cash = "7"
        case Debt = "8"
        case Fund = "9"
        case LoanFacility = "10"
        case Index = "11"
    }

    public enum LegAssetSubClass : String {

        public static var tag: Int {
            2068
        }

        case Metals = "13"
        case Bullion = "14"
        case Energy = "15"
        case CommodityIndex = "16"
        case Agricultural = "17"
        case Environmental = "18"
        case Freight = "19"
        case Fertilizer = "41"
        case IndustrialProduct = "42"
        case Inflation = "43"
        case Paper = "44"
        case Polypropylene = "45"
        case OfficialEconomicStatistics = "46"
        case SingleName = "4"
        case CreditIndex = "5"
        case IndexTranche = "6"
        case CreditBasket = "7"
        case Basket = "3"
        case FXCrossRates = "38"
        case FXEmergingMarkets = "39"
        case FXMajors = "40"
        case Government = "20"
        case Agency = "21"
        case Corporate = "22"
        case Financing = "23"
        case MoneyMarket = "24"
        case Mortgage = "25"
        case Municipal = "26"
        case Common = "9"
        case Preferred = "10"
        case EquityIndex = "11"
        case EquityBasket = "12"
        case DividendIndex = "34"
        case StockDividend = "35"
        case ExchangeTradedFund = "36"
        case VolatilityIndex = "37"
        case MutualFund = "27"
        case CollectiveInvestmentVehicle = "28"
        case InvestmentProgram = "29"
        case SpecializedAccountProgram = "30"
        case SingleCurrency = "1"
        case CrossCurrency = "2"
        case TermLoan = "31"
        case BridgeLoan = "32"
        case LetterOfCredit = "33"
        case Exotic = "8"
        case OtherC10 = "47"
        case Other = "48"
    }

    public enum LegAssetType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2069
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSwapClass : String {

        public static var tag: Int {
            2070
        }

        case BasisSwap = "BS"
        case IndexSwap = "IX"
        case BroadBasedSecuritySwap = "BB"
        case BasketSwap = "SK"
    }

    public enum UnderlyingEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2071
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingEventTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2072
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2073
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegEventTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2074
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegEventText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2075
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegSecondaryAssetClasses : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2076
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecondaryAssetClass : String {

        public static var tag: Int {
            2077
        }

        case InterestRate = "1"
        case Currency = "2"
        case Credit = "3"
        case Equity = "4"
        case Commodity = "5"
        case Other = "6"
        case Cash = "7"
        case Debt = "8"
        case Fund = "9"
        case LoanFacility = "10"
        case Index = "11"
    }

    public enum LegSecondaryAssetSubClass : String {

        public static var tag: Int {
            2078
        }

        case Metals = "13"
        case Bullion = "14"
        case Energy = "15"
        case CommodityIndex = "16"
        case Agricultural = "17"
        case Environmental = "18"
        case Freight = "19"
        case Fertilizer = "41"
        case IndustrialProduct = "42"
        case Inflation = "43"
        case Paper = "44"
        case Polypropylene = "45"
        case OfficialEconomicStatistics = "46"
        case SingleName = "4"
        case CreditIndex = "5"
        case IndexTranche = "6"
        case CreditBasket = "7"
        case Basket = "3"
        case FXCrossRates = "38"
        case FXEmergingMarkets = "39"
        case FXMajors = "40"
        case Government = "20"
        case Agency = "21"
        case Corporate = "22"
        case Financing = "23"
        case MoneyMarket = "24"
        case Mortgage = "25"
        case Municipal = "26"
        case Common = "9"
        case Preferred = "10"
        case EquityIndex = "11"
        case EquityBasket = "12"
        case DividendIndex = "34"
        case StockDividend = "35"
        case ExchangeTradedFund = "36"
        case VolatilityIndex = "37"
        case MutualFund = "27"
        case CollectiveInvestmentVehicle = "28"
        case InvestmentProgram = "29"
        case SpecializedAccountProgram = "30"
        case SingleCurrency = "1"
        case CrossCurrency = "2"
        case TermLoan = "31"
        case BridgeLoan = "32"
        case LetterOfCredit = "33"
        case Exotic = "8"
        case OtherC10 = "47"
        case Other = "48"
    }

    public enum LegSecondaryAssetType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2079
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingSecondaryAssetClasses : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2080
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecondaryAssetClass : String {

        public static var tag: Int {
            2081
        }

        case InterestRate = "1"
        case Currency = "2"
        case Credit = "3"
        case Equity = "4"
        case Commodity = "5"
        case Other = "6"
        case Cash = "7"
        case Debt = "8"
        case Fund = "9"
        case LoanFacility = "10"
        case Index = "11"
    }

    public enum UnderlyingSecondaryAssetSubClass : String {

        public static var tag: Int {
            2082
        }

        case Metals = "13"
        case Bullion = "14"
        case Energy = "15"
        case CommodityIndex = "16"
        case Agricultural = "17"
        case Environmental = "18"
        case Freight = "19"
        case Fertilizer = "41"
        case IndustrialProduct = "42"
        case Inflation = "43"
        case Paper = "44"
        case Polypropylene = "45"
        case OfficialEconomicStatistics = "46"
        case SingleName = "4"
        case CreditIndex = "5"
        case IndexTranche = "6"
        case CreditBasket = "7"
        case Basket = "3"
        case FXCrossRates = "38"
        case FXEmergingMarkets = "39"
        case FXMajors = "40"
        case Government = "20"
        case Agency = "21"
        case Corporate = "22"
        case Financing = "23"
        case MoneyMarket = "24"
        case Mortgage = "25"
        case Municipal = "26"
        case Common = "9"
        case Preferred = "10"
        case EquityIndex = "11"
        case EquityBasket = "12"
        case DividendIndex = "34"
        case StockDividend = "35"
        case ExchangeTradedFund = "36"
        case VolatilityIndex = "37"
        case MutualFund = "27"
        case CollectiveInvestmentVehicle = "28"
        case InvestmentProgram = "29"
        case SpecializedAccountProgram = "30"
        case SingleCurrency = "1"
        case CrossCurrency = "2"
        case TermLoan = "31"
        case BridgeLoan = "32"
        case LetterOfCredit = "33"
        case Exotic = "8"
        case OtherC10 = "47"
        case Other = "48"
    }

    public enum UnderlyingSecondaryAssetType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2083
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PreviousClearingBusinessDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2084
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValuationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2085
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2086
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValuationBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2087
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginAmtFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2088
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginAmtFXRateCalc : String {

        public static var tag: Int {
            2089
        }

        case Divide = "D"
        case Multiply = "M"
    }

    public enum CollateralFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2090
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralFXRateCalc : String {

        public static var tag: Int {
            2091
        }

        case Divide = "D"
        case Multiply = "M"
    }

    public enum CollateralAmountMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2092
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralAmountMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2093
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayCollectFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2094
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayCollectFXRateCalc : String {

        public static var tag: Int {
            2095
        }

        case Divide = "D"
        case Multiply = "M"
    }

    public enum PosAmtStreamDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2096
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PositionFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2097
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PositionFXRateCalc : String {

        public static var tag: Int {
            2098
        }

        case Divide = "D"
        case Multiply = "M"
    }

    public enum PosAmtMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2099
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosAmtMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2100
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TerminatedIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2101
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ShortMarkingExemptIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2102
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedRegulatoryTradeIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2103
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAttachments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2104
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2105
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentMediaType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2106
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentClassification : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2107
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentExternalURL : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2108
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentEncodingType : String {

        public static var tag: Int {
            2109
        }

        case Base64 = "0"
        case RawBinary = "1"
    }

    public enum UnencodedAttachmentLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2110
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAttachmentLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2111
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAttachment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2112
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAttachmentKeywords : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2113
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AttachmentKeyword : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2114
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NegotiationMethod : String {

        public static var tag: Int {
            2115
        }

        case AutoSpot = "0"
        case NegotiatedSpot = "1"
        case PhoneSpot = "2"
    }

    public enum NextAuctionTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2116
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexOptPayoutPaySide : String {

        public static var tag: Int {
            2117
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum ComplexOptPayoutReceiveSide : String {

        public static var tag: Int {
            2118
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum ComplexOptPayoutUnderlier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2119
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexOptPayoutPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2120
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexOptPayoutTime : String {

        public static var tag: Int {
            2121
        }

        case Close = "0"
        case Open = "1"
        case OfficialSettl = "2"
        case ValuationTime = "3"
        case ExcahgneSettlTime = "4"
        case DerivativesClose = "5"
        case AsSpecified = "6"
    }

    public enum ComplexOptPayoutCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2122
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPricePercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2123
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCurrencyOne : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2124
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCurrencyTwo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2125
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventQuoteBasis : String {

        public static var tag: Int {
            2126
        }

        case Currency1PerCurrency2 = "0"
        case Currency2PerCurrency1 = "1"
    }

    public enum ComplexEventFixedFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2127
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2128
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCalculationAgent : String {

        public static var tag: Int {
            2129
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum ComplexEventStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2130
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventStrikeFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2131
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventStrikeNumberOfOptions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2132
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventsXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2133
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventNotifyingParty : String {

        public static var tag: Int {
            2134
        }

        case SellerNotifies = "0"
        case BuyerNotifies = "1"
        case SellerOrBuyerNotifies = "2"
    }

    public enum ComplexEventCreditEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2135
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventStandardSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2136
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventMinimumSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2137
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2138
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2139
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ValuationReferenceModel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2140
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrategyType : String {

        public static var tag: Int {
            2141
        }

        case Straddle = "STD"
        case Strangle = "STG"
        case Butterfly = "BF"
        case Condor = "CNDR"
        case CallableInversibleSnowball = "CISN"
        case Other = "OTHER"
    }

    public enum CommonPricingIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2142
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlDisruptionProvision : String {

        public static var tag: Int {
            2143
        }

        case Negotiation = "1"
        case Cancellation = "2"
    }

    public enum InstrumentRoundingDirection : String {

        public static var tag: Int {
            2144
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum InstrumentRoundingPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2145
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettleOnOpenFlag : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2146
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInstrmtAssignmentMethod : String {

        public static var tag: Int {
            2147
        }

        case ProRata = "P"
        case Random = "R"
    }

    public enum LegSecurityStatus : String {

        public static var tag: Int {
            2148
        }

        case Active = "1"
        case Inactive = "2"
        case ActiveClosingOrdersOnly = "3"
        case Expired = "4"
        case Delisted = "5"
        case KnockedOut = "6"
        case KnockOutRevoked = "7"
        case PendingExpiry = "8"
        case Suspended = "9"
        case Published = "10"
        case PendingDeletion = "11"
    }

    public enum LegRestructuringType : String {

        public static var tag: Int {
            2149
        }

        case FullRestructuring = "FR"
        case ModifiedRestructuring = "MR"
        case ModifiedModRestructuring = "MM"
        case NoRestructuringSpecified = "XR"
    }

    public enum LegSeniority : String {

        public static var tag: Int {
            2150
        }

        case SeniorSecured = "SD"
        case Senior = "SR"
        case Subordinated = "SB"
        case Junior = "JR"
        case Mezzanine = "MZ"
        case SeniorNonPreferred = "SN"
    }

    public enum LegNotionalPercentageOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2151
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOriginalNotionalPercentageOutstanding : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2152
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAttachmentPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2153
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDetachmentPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2154
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegObligationType : String {

        public static var tag: Int {
            2155
        }

        case Bond = "0"
        case ConvertBond = "1"
        case Mortgage = "2"
        case Loan = "3"
    }

    public enum LegSwapSubClass : String {

        public static var tag: Int {
            2156
        }

        case Amortizing = "AMTZ"
        case Compounding = "COMP"
        case ConstantNotionalSchedule = "CNST"
        case AccretingNotionalSchedule = "ACRT"
        case CustomNotionalSchedule = "CUST"
    }

    public enum LegNthToDefault : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2157
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMthToDefault : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2158
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettledEntityMatrixSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2159
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettledEntityMatrixPublicationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2160
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCouponType : String {

        public static var tag: Int {
            2161
        }

        case Zero = "0"
        case FixedRate = "1"
        case FloatingRate = "2"
        case Structured = "3"
    }

    public enum LegTotalIssuedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2162
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCouponFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2163
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCouponFrequencyUnit : String {

        public static var tag: Int {
            2164
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegCouponDayCount : String {

        public static var tag: Int {
            2165
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum LegConvertibleBondEquityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2166
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegConvertibleBondEquityIDSource : String {

        public static var tag: Int {
            2167
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum LegContractPriceRefMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2168
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegLienSeniority : String {

        public static var tag: Int {
            2169
        }

        case Unknown = "0"
        case FirstLien = "1"
        case SecondLien = "2"
        case ThirdLien = "3"
    }

    public enum LegLoanFacility : String {

        public static var tag: Int {
            2170
        }

        case BridgeLoan = "0"
        case LetterOfCredit = "1"
        case RevolvingLoan = "2"
        case SwinglineFunding = "3"
        case TermLoan = "4"
        case TradeClaim = "5"
    }

    public enum LegReferenceEntityType : String {

        public static var tag: Int {
            2171
        }

        case Asian = "1"
        case AustralianNewZealand = "2"
        case EuropeanEmergingMarkets = "3"
        case Japanese = "4"
        case NorthAmericanHighYield = "5"
        case NorthAmericanInsurance = "6"
        case NorthAmericanInvestmentGrade = "7"
        case Singaporean = "8"
        case WesternEuropean = "9"
        case WesternEuropeanInsurance = "10"
    }

    public enum LegIndexSeries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2172
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIndexAnnexVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2173
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIndexAnnexDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2174
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegIndexAnnexSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2175
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2176
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlRateIndexLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2177
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExpirationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2178
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegOptionExpirationDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2179
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegOptionExpirationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2180
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2181
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2182
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeUnitOfMeasure : String {

        public static var tag: Int {
            2183
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegStrikeIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2184
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeIndexSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2185
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikePriceDeterminationMethod : String {

        public static var tag: Int {
            2186
        }

        case FixedStrike = "1"
        case StrikeSetAtExpiration = "2"
        case StrikeSetToAverageAcrossLife = "3"
        case StrikeSetToOptimalValue = "4"
    }

    public enum LegStrikePriceBoundaryMethod : String {

        public static var tag: Int {
            2187
        }

        case LessThan = "1"
        case LessThanOrEqual = "2"
        case Equal = "3"
        case GreaterThanOrEqual = "4"
        case GreaterThan = "5"
    }

    public enum LegStrikePriceBoundaryPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2188
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegUnderlyingPriceDeterminationMethod : String {

        public static var tag: Int {
            2189
        }

        case Regular = "1"
        case SpecialReference = "2"
        case OptimalValue = "3"
        case AverageValue = "4"
    }

    public enum LegMinPriceIncrement : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2190
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMinPriceIncrementAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2191
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlMethod : String {

        public static var tag: Int {
            2192
        }

        case CashSettlementRequired = "C"
        case PhysicalSettlementRequired = "P"
        case Election = "E"
    }

    public enum LegOptPayoutType : String {

        public static var tag: Int {
            2193
        }

        case Vanilla = "1"
        case Capped = "2"
        case Binary = "3"
        case Asian = "4"
        case Barrier = "5"
        case DigitalBarrier = "6"
        case Lookback = "7"
        case OtherPathDependent = "8"
        case Other = "99"
    }

    public enum LegOptPayoutAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2194
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPriceQuoteMethod : String {

        public static var tag: Int {
            2195
        }

        case Standard = "STD"
        case Index = "INX"
        case InterestRateIndex = "INT"
        case PercentOfPar = "PCTPAR"
    }

    public enum LegValuationMethod : String {

        public static var tag: Int {
            2196
        }

        case PremiumStyle = "EQTY"
        case FuturesStyleMarkToMarket = "FUT"
        case FuturesStyleWithAnAttachedCashAdjustment = "FUTDA"
        case CDSStyleCollateralization = "CDS"
        case CDSInDeliveryUseRecoveryRateToCalculate = "CDSD"
    }

    public enum LegValuationSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2197
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegValuationReferenceModel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2198
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegListMethod : String {

        public static var tag: Int {
            2199
        }

        case PreListedOnly = "0"
        case UserRequested = "1"
    }

    public enum LegCapPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2200
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFloorPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2201
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFlexibleIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2202
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFlexProductEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2203
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventStartTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2204
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2205
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegNTPositionLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2206
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCPProgram : String {

        public static var tag: Int {
            2207
        }

        case Program3a3 = "1"
        case Program42 = "2"
        case Program3a2 = "3"
        case Program3a3And3c7 = "4"
        case Program3a4 = "5"
        case Program3a5 = "6"
        case Program3a7 = "7"
        case Program3c7 = "8"
        case Other = "99"
    }

    public enum LegCPRegType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2208
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegShortSaleRestriction : String {

        public static var tag: Int {
            2209
        }

        case NoRestrictions = "0"
        case SecurityNotShortable = "1"
        case SecurityNotShortableAtOrBelowBestBid = "2"
        case SecurityNotShortableWithoutPreBorrow = "3"
    }

    public enum AssetGroup : String {

        public static var tag: Int {
            2210
        }

        case Financials = "1"
        case Commodities = "2"
        case AlternativeInvestments = "3"
    }

    public enum LegStrategyType : String {

        public static var tag: Int {
            2211
        }

        case Straddle = "STD"
        case Strangle = "STG"
        case Butterfly = "BF"
        case Condor = "CNDR"
        case CallableInversibleSnowball = "CISN"
        case Other = "OTHER"
    }

    public enum LegCommonPricingIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2212
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlDisruptionProvision : String {

        public static var tag: Int {
            2213
        }

        case Negotiation = "1"
        case Cancellation = "2"
    }

    public enum LegInstrumentRoundingDirection : String {

        public static var tag: Int {
            2214
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum LegInstrumentRoundingPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2215
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2216
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeAmountDue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2217
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2218
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventType : String {

        public static var tag: Int {
            2219
        }

        case Capped = "1"
        case Trigger = "2"
        case KnockInUp = "3"
        case KnockInDown = "4"
        case KnockOutUp = "5"
        case KnockOutDown = "6"
        case Underlying = "7"
        case ResetBarrier = "8"
        case RollingBarrier = "9"
        case OneTouch = "10"
        case NoTouch = "11"
        case DblOneTouch = "12"
        case DblNoTouch = "13"
        case FXComposite = "14"
        case FXQuanto = "15"
        case FXCrssCcy = "16"
        case StrkSpread = "17"
        case ClndrSpread = "18"
        case PxObsvtn = "19"
        case PassThrough = "20"
        case StrkSched = "21"
        case EquityValuation = "22"
        case DividendValuation = "23"
    }

    public enum LegComplexOptPayoutPaySide : String {

        public static var tag: Int {
            2220
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegComplexOptPayoutReceiveSide : String {

        public static var tag: Int {
            2221
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegComplexOptPayoutUnderlier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2222
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexOptPayoutAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2223
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexOptPayoutPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2224
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexOptPayoutTime : String {

        public static var tag: Int {
            2225
        }

        case Close = "0"
        case Open = "1"
        case OfficialSettl = "2"
        case ValuationTime = "3"
        case ExcahgneSettlTime = "4"
        case DerivativesClose = "5"
        case AsSpecified = "6"
    }

    public enum LegComplexOptPayoutCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2226
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2227
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPricePercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2228
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPriceBoundaryMethod : String {

        public static var tag: Int {
            2229
        }

        case LessThanComplexEventPrice = "1"
        case LessThanOrEqualToComplexEventPrice = "2"
        case EqualToComplexEventPrice = "3"
        case GreaterThanOrEqualToComplexEventPrice = "4"
        case GreaterThanComplexEventPrice = "5"
    }

    public enum LegComplexEventPriceBoundaryPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2230
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPriceTimeType : String {

        public static var tag: Int {
            2231
        }

        case Expiration = "1"
        case Immediate = "2"
        case SpecifiedDate = "3"
        case Close = "4"
        case Open = "5"
        case OfficialSettlPrice = "6"
        case DerivativesClose = "7"
        case AsSpecifiedMasterConfirmation = "8"
    }

    public enum LegComplexEventCondition : String {

        public static var tag: Int {
            2232
        }

        case And = "1"
        case Or = "2"
    }

    public enum LegComplexEventCurrencyOne : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2233
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCurrencyTwo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2234
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventQuoteBasis : String {

        public static var tag: Int {
            2235
        }

        case Currency1PerCurrency2 = "0"
        case Currency2PerCurrency1 = "1"
    }

    public enum LegComplexEventFixedFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2236
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2237
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCalculationAgent : String {

        public static var tag: Int {
            2238
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum LegComplexEventStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2239
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventStrikeFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2240
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventStrikeNumberOfOptions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2241
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventsXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2242
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventNotifyingParty : String {

        public static var tag: Int {
            2243
        }

        case SellerNotifies = "0"
        case BuyerNotifies = "1"
        case SellerOrBuyerNotifies = "2"
    }

    public enum LegComplexEventCreditEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2244
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventStandardSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2245
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventMinimumSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2246
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventEndTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2247
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2248
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2249
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2250
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2251
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2252
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2253
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegInstrumentParties : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2254
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInstrumentPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2255
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInstrumentPartyIDSource : String {

        public static var tag: Int {
            2256
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum LegInstrumentPartyRole : String {

        public static var tag: Int {
            2257
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoLegInstrumentPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2258
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInstrumentPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2259
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegInstrumentPartySubIDType : String {

        public static var tag: Int {
            2260
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum UnderlyingComplexOptPayoutPaySide : String {

        public static var tag: Int {
            2261
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingComplexOptPayoutReceiveSide : String {

        public static var tag: Int {
            2262
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingComplexOptPayoutUnderlier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2263
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexOptPayoutPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2264
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexOptPayoutTime : String {

        public static var tag: Int {
            2265
        }

        case Close = "0"
        case Open = "1"
        case OfficialSettl = "2"
        case ValuationTime = "3"
        case ExcahgneSettlTime = "4"
        case DerivativesClose = "5"
        case AsSpecified = "6"
    }

    public enum UnderlyingComplexOptPayoutCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2266
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPricePercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2267
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCurrencyOne : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2268
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCurrencyTwo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2269
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventQuoteBasis : String {

        public static var tag: Int {
            2270
        }

        case Currency1PerCurrency2 = "0"
        case Currency2PerCurrency1 = "1"
    }

    public enum UnderlyingComplexEventFixedFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2271
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2272
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCalculationAgent : String {

        public static var tag: Int {
            2273
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum UnderlyingComplexEventStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2274
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventStrikeFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2275
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventStrikeNumberOfOptions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2276
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventsXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2277
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventNotifyingParty : String {

        public static var tag: Int {
            2278
        }

        case SellerNotifies = "0"
        case BuyerNotifies = "1"
        case SellerOrBuyerNotifies = "2"
    }

    public enum UnderlyingComplexEventCreditEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2279
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventStandardSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2280
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventMinimumSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2281
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2282
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2283
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2284
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlRateIndexLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2285
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExpirationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2286
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingOptionExpirationDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2287
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingOptionExpirationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2288
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSwapSubClass : String {

        public static var tag: Int {
            2289
        }

        case Amortizing = "AMTZ"
        case Compounding = "COMP"
        case ConstantNotionalSchedule = "CNST"
        case AccretingNotionalSchedule = "ACRT"
        case CustomNotionalSchedule = "CUST"
    }

    public enum UnderlyingStrikeUnitOfMeasure : String {

        public static var tag: Int {
            2290
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingStrikeIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2291
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStrikeIndexSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2292
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingValuationSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2293
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingValuationReferenceModel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2294
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStrategyType : String {

        public static var tag: Int {
            2295
        }

        case Straddle = "STD"
        case Strangle = "STG"
        case Butterfly = "BF"
        case Condor = "CNDR"
        case CallableInversibleSnowball = "CISN"
        case Other = "OTHER"
    }

    public enum UnderlyingCommonPricingIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2296
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlDisruptionProvision : String {

        public static var tag: Int {
            2297
        }

        case Negotiation = "1"
        case Cancellation = "2"
    }

    public enum UnderlyingInstrumentRoundingDirection : String {

        public static var tag: Int {
            2298
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum UnderlyingInstrumentRoundingPrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2299
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocGrossTradeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2300
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastQtyChanged : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2301
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2302
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum HistoricalReportIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2303
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAssetAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2304
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AssetAttributeType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2305
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AssetAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2306
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AssetAttributeLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2307
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegAssetAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2308
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAssetAttributeType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2309
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAssetAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2310
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAssetAttributeLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2311
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingAssetAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2312
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAssetAttributeType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2313
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAssetAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2314
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAssetAttributeLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2315
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitReportStatus : String {

        public static var tag: Int {
            2316
        }

        case Accepted = "0"
        case Rejected = "1"
    }

    public enum RiskLimitReportRejectReason : String {

        public static var tag: Int {
            2317
        }

        case UnkRiskLmtRprtID = "0"
        case UnkPty = "1"
        case Other = "99"
    }

    public enum RiskLimitCheckRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2318
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitCheckID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2319
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitCheckTransType : String {

        public static var tag: Int {
            2320
        }

        case New = "0"
        case Cancel = "1"
        case Replace = "2"
    }

    public enum RiskLimitCheckType : String {

        public static var tag: Int {
            2321
        }

        case Submit = "0"
        case LimitConsumed = "1"
    }

    public enum RiskLimitCheckRequestRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2322
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitCheckRequestType : String {

        public static var tag: Int {
            2323
        }

        case AllOrNone = "0"
        case Partial = "1"
    }

    public enum RiskLimitCheckAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2324
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitCheckRequestStatus : String {

        public static var tag: Int {
            2325
        }

        case Approved = "0"
        case PartiallyApproved = "1"
        case Rejected = "2"
        case ApprovalPending = "3"
        case Cancelled = "4"
    }

    public enum RiskLimitCheckRequestResult : String {

        public static var tag: Int {
            2326
        }

        case Successful = "0"
        case InvalidParty = "1"
        case ReqExceedsCreditLimit = "2"
        case ReqExceedsClipSizeLimit = "3"
        case ReqExceedsMaxNotional = "4"
        case Other = "99"
    }

    public enum RiskLimitApprovedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2327
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyActionRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2328
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyActionType : String {

        public static var tag: Int {
            2329
        }

        case Suspend = "0"
        case HaltTrading = "1"
        case Reinstate = "2"
    }

    public enum ApplTestMessageIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2330
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyActionReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2331
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyActionResponse : String {

        public static var tag: Int {
            2332
        }

        case Accepted = "0"
        case Completed = "1"
        case Rejected = "2"
    }

    public enum PartyActionRejectReason : String {

        public static var tag: Int {
            2333
        }

        case InvalidParty = "0"
        case UnkReqParty = "1"
        case NotAuthorized = "98"
        case Other = "99"
    }

    public enum RefRiskLimitCheckID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2334
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RefRiskLimitCheckIDType : String {

        public static var tag: Int {
            2335
        }

        case RiskLimitRequestID = "0"
        case RiskLimitCheckID = "1"
        case OutOfBandID = "3"
    }

    public enum RiskLimitVelocityPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2336
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitVelocityUnit : String {

        public static var tag: Int {
            2337
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum RequestingPartyRoleQualifier : String {

        public static var tag: Int {
            2338
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum RiskLimitCheckModelType : String {

        public static var tag: Int {
            2339
        }

        case None = "0"
        case PlusOneModel = "1"
        case PingModel = "2"
        case PushModel = "3"
    }

    public enum EventMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2340
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEventMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2341
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingEventMonthYear : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2342
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RiskLimitCheckStatus : String {

        public static var tag: Int {
            2343
        }

        case Accepted = "0"
        case Rejected = "1"
        case ClaimRequired = "2"
        case PreDefinedLimitCheckSucceeded = "3"
        case PreDefinedLimitCheckFailed = "4"
        case PreDefinedAutoAcceptRuleInvoked = "5"
        case PreDefinedAutoRejectRuleInvoked = "6"
        case AcceptedByClearingFirm = "7"
        case RejectedByClearingFirm = "8"
        case Pending = "9"
        case AcceptedByCreditHub = "10"
        case RejectedByCreditHub = "11"
        case PendingCreditHubCheck = "12"
        case AcceptedByExecVenue = "13"
        case RejectedByExecVenue = "14"
    }

    public enum SideRiskLimitCheckStatus : String {

        public static var tag: Int {
            2344
        }

        case Accepted = "0"
        case Rejected = "1"
        case ClaimRequired = "2"
        case PreDefinedLimitCheckSucceeded = "3"
        case PreDefinedLimitCheckFailed = "4"
        case PreDefinedAutoAcceptRuleInvoked = "5"
        case PreDefinedAutoRejectRuleInvoked = "6"
        case AcceptedByClearingFirm = "7"
        case RejectedByClearingFirm = "8"
        case Pending = "9"
        case AcceptedByCreditHub = "10"
        case RejectedByCreditHub = "11"
        case PendingCreditHubCheck = "12"
        case AcceptedByExecVenue = "13"
        case RejectedByExecVenue = "14"
    }

    public enum NoEntitlementTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2345
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMidPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2346
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegulatoryTransactionType : String {

        public static var tag: Int {
            2347
        }

        case None = "0"
        case SEFRequiredTransaction = "1"
        case SEFPermittedTransaction = "2"
    }

    public enum LegAssetGroup : String {

        public static var tag: Int {
            2348
        }

        case Financials = "1"
        case Commodities = "2"
        case AlternativeInvestments = "3"
    }

    public enum PricePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2349
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralPortfolioID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2350
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedComplianceTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2351
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedComplianceText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2352
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradingUnitPeriodMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2353
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegTradingUnitPeriodMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2354
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PartyRiskLimitStatus : String {

        public static var tag: Int {
            2355
        }

        case Disabled = "0"
        case Enabled = "1"
    }

    public enum RemunerationIndicator : String {

        public static var tag: Int {
            2356
        }

        case NoRemunerationPaid = "0"
        case RemunerationPaid = "1"
    }

    public enum LegTotalTradeQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2357
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegLastMultipliedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2358
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegTotalGrossTradeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2359
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegTotalTradeMultipliedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2360
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CompressionGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2361
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SelfMatchPreventionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2362
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingTradingUnitPeriodMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2363
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosReportAction : String {

        public static var tag: Int {
            2364
        }

        case New = "1"
        case Replace = "2"
        case Cancel = "3"
        case Reverse = "4"
    }

    public enum SettlForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2365
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPriceFxRateCalc : String {

        public static var tag: Int {
            2366
        }

        case Multiply = "M"
        case Divide = "D"
    }

    public enum TotalTradeQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2367
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LastMultipliedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2368
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalGrossTradeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2369
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalTradeMultipliedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2370
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedTradeContinuationText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2371
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedTradeContinuationTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2372
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum IntraFirmTradeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2373
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeContinuationText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2374
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TaxonomyType : String {

        public static var tag: Int {
            2375
        }

        case ISINOrAltInstrmtID = "I"
        case InterimTaxonomy = "E"
    }

    public enum PartyRoleQualifier : String {

        public static var tag: Int {
            2376
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum DerivativeInstrumentPartyRoleQualifier : String {

        public static var tag: Int {
            2377
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum InstrumentPartyRoleQualifier : String {

        public static var tag: Int {
            2378
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum LegInstrumentPartyRoleQualifier : String {

        public static var tag: Int {
            2379
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum LegProvisionPartyRoleQualifier : String {

        public static var tag: Int {
            2380
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum Nested2PartyRoleQualifier : String {

        public static var tag: Int {
            2381
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum Nested3PartyRoleQualifier : String {

        public static var tag: Int {
            2382
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum Nested4PartyRoleQualifier : String {

        public static var tag: Int {
            2383
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum NestedPartyRoleQualifier : String {

        public static var tag: Int {
            2384
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum ProvisionPartyRoleQualifier : String {

        public static var tag: Int {
            2385
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum RequestedPartyRoleQualifier : String {

        public static var tag: Int {
            2386
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum TradeContingency : String {

        public static var tag: Int {
            2387
        }

        case DoesNotApply = "0"
        case ContingentTrade = "1"
        case NonContingentTrade = "2"
    }

    public enum RootPartyRoleQualifier : String {

        public static var tag: Int {
            2388
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum SettlPartyRoleQualifier : String {

        public static var tag: Int {
            2389
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum TradeConfirmationReferenceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2390
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrumentPartyRoleQualifier : String {

        public static var tag: Int {
            2391
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum AllocRefRiskLimitCheckID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2392
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocRefRiskLimitCheckIDType : String {

        public static var tag: Int {
            2393
        }

        case RiskLimitRequestID = "0"
        case RiskLimitCheckID = "1"
        case OutOfBandID = "3"
    }

    public enum LimitUtilizationAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2394
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LimitAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2395
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LimitRole : String {

        public static var tag: Int {
            2396
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum RegulatoryTradeIDScope : String {

        public static var tag: Int {
            2397
        }

        case ClearingMember = "1"
        case Client = "2"
    }

    public enum SideRegulatoryTradeIDScope : String {

        public static var tag: Int {
            2398
        }

        case ClearingMember = "1"
        case Client = "2"
    }

    public enum AllocRegulatoryTradeIDScope : String {

        public static var tag: Int {
            2399
        }

        case ClearingMember = "1"
        case Client = "2"
    }

    public enum EffectiveBusinessDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2400
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ListManualOrderIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2401
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EntitlementSubType : String {

        public static var tag: Int {
            2402
        }

        case OrderEntry = "1"
        case HItLift = "2"
        case ViewIndicativePx = "3"
        case ViewExecutablePx = "4"
        case SingleQuote = "5"
        case StreamingQuotes = "6"
        case SingleBroker = "7"
        case MultiBrokers = "8"
    }

    public enum QuoteModelType : String {

        public static var tag: Int {
            2403
        }

        case QuoteEntry = "1"
        case QuoteModification = "2"
    }

    public enum ComplianceText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2404
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExecMethod : String {

        public static var tag: Int {
            2405
        }

        case Unspecified = "0"
        case Manual = "1"
        case Automated = "2"
        case VoiceBrokered = "3"
    }

    public enum AllocRegulatoryLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2406
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2407
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2408
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2409
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2410
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegulatoryLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2411
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RateSourceReferemcePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2412
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedToSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2413
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedToSecurityIDSource : String {

        public static var tag: Int {
            2414
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum RelatedToStreamXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2415
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideRegulatoryLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2416
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedToDividendPeriodXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2417
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FirmTradeEventID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2418
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2419
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2420
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2421
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2422
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassOrderRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2423
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassOrderReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2424
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassOrderRequestStatus : String {

        public static var tag: Int {
            2425
        }

        case Accepted = "1"
        case AcceptedWithAdditionalEvents = "2"
        case Rejected = "3"
    }

    public enum MassOrderRequestResult : String {

        public static var tag: Int {
            2426
        }

        case Successful = "0"
        case ResponseLevelNotSupported = "1"
        case InvalidMarket = "2"
        case InvalidMarketSegment = "3"
        case Other = "99"
    }

    public enum OrderResponseLevel : String {

        public static var tag: Int {
            2427
        }

        case NoAck = "0"
        case MinimumAck = "1"
        case AckEach = "2"
        case SummaryAck = "3"
    }

    public enum NoOrderEntries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2428
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderEntryAction : String {

        public static var tag: Int {
            2429
        }

        case Add = "1"
        case Modify = "2"
        case Delete = "3"
        case Suspend = "4"
        case Release = "5"
    }

    public enum OrderEntryID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2430
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExecTypeReason : String {

        public static var tag: Int {
            2431
        }

        case OrdAddedOnRequest = "1"
        case OrdReplacedOnRequest = "2"
        case OrdCxldOnRequest = "3"
        case UnsolicitedOrdCxl = "4"
        case NonRestingOrdAddedOnRequest = "5"
        case OrdReplacedWithNonRestingOrdOnRequest = "6"
        case TriggerOrdReplacedOnRequest = "7"
        case SuspendedOrdReplacedOnRequest = "8"
        case SuspendedOrdCxldOnRequest = "9"
        case OrdCxlPending = "10"
        case PendingCxlExecuted = "11"
        case RestingOrdTriggered = "12"
        case SuspendedOrdActivated = "13"
        case ActiveOrdSuspended = "14"
        case OrdExpired = "15"
    }

    public enum TotNoOrderEntries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2432
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTargetPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2433
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2434
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TargetPartySubIDType : String {

        public static var tag: Int {
            2435
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum TransferInstructionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2436
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TransferID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2437
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TransferReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2438
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TransferTransType : String {

        public static var tag: Int {
            2439
        }

        case New = "0"
        case Replace = "1"
        case Cancel = "2"
    }

    public enum TransferType : String {

        public static var tag: Int {
            2440
        }

        case RequestTransfer = "0"
        case AcceptTransfer = "1"
        case DeclineTransfer = "2"
    }

    public enum TransferScope : String {

        public static var tag: Int {
            2441
        }

        case InterFirmTransfer = "0"
        case IntraFirmTransfer = "1"
        case CMTA = "2"
    }

    public enum TransferStatus : String {

        public static var tag: Int {
            2442
        }

        case Received = "0"
        case RejectedByIntermediary = "1"
        case AcceptPending = "2"
        case Accepted = "3"
        case Declined = "4"
        case Cancelled = "5"
    }

    public enum TransferRejectReason : String {

        public static var tag: Int {
            2443
        }

        case Success = "0"
        case InvalidParty = "1"
        case UnknownInstrument = "2"
        case UnauthorizedToSubmitXfer = "3"
        case UnknownPosition = "4"
        case Other = "99"
    }

    public enum TransferReportType : String {

        public static var tag: Int {
            2444
        }

        case Submit = "0"
        case Alleged = "1"
    }

    public enum AggressorTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2445
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AggressorSide : String {

        public static var tag: Int {
            2446
        }

        case Buy = "1"
        case Sell = "2"
        case BuyMinus = "3"
        case SellPlus = "4"
        case SellShort = "5"
        case SellShortExempt = "6"
        case Undisclosed = "7"
        case Cross = "8"
        case CrossShort = "9"
        case CrossShortExempt = "A"
        case AsDefined = "B"
        case Opposite = "C"
        case Subscribe = "D"
        case Redeem = "E"
        case Lend = "F"
        case Borrow = "G"
        case SellUndisclosed = "H"
    }

    public enum FastMarketIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2447
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LinkageHandlingIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2448
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NumberOfBuyOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2449
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NumberOfSellOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2450
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlPriceDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2451
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticReqID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2452
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticRptID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2453
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2454
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2455
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticType : String {

        public static var tag: Int {
            2456
        }

        case Count = "1"
        case AverageVolume = "2"
        case TotalVolume = "3"
        case Distribution = "4"
        case Ratio = "5"
        case Liquidity = "6"
        case VWAP = "7"
        case Volatility = "8"
        case Duration = "9"
        case Tick = "10"
        case AverageValue = "11"
        case TotalValue = "12"
        case High = "13"
        case Low = "14"
        case Midpoint = "15"
        case First = "16"
        case Last = "17"
        case Final = "18"
        case ExchangeBest = "19"
        case ExchangeBestWithVolume = "20"
        case ConsolidatedBest = "21"
        case ConsolidatedBestWithVolume = "22"
        case TWAP = "23"
        case AverageDuration = "24"
        case AveragePrice = "25"
        case TotalFees = "26"
        case TotalBenefits = "27"
        case MedianValue = "28"
        case AverageLiquidity = "29"
        case MedianDuration = "30"
    }

    public enum MDStatisticScope : String {

        public static var tag: Int {
            2457
        }

        case BidPrices = "1"
        case OfferPrices = "2"
        case BidDepth = "3"
        case OfferDepth = "4"
        case Orders = "5"
        case Quotes = "6"
        case OrdersAndQuotes = "7"
        case Trades = "8"
        case TradePrices = "9"
        case AuctionPrices = "10"
        case OpeningPrices = "11"
        case ClosingPrices = "12"
        case SettlementPrices = "13"
        case UnderlyingPrices = "14"
        case OpenInterest = "15"
        case IndexValues = "16"
        case MarginRates = "17"
        case Outages = "18"
        case ScheduledAuctions = "19"
        case ReferencePrices = "20"
        case TradeValue = "21"
        case MarketDataFeeItems = "22"
        case Rebates = "23"
        case Discounts = "24"
        case Payments = "25"
        case Taxes = "26"
        case Levies = "27"
        case Benefits = "28"
        case Fees = "29"
        case OrdersRFQs = "30"
        case MarketMakers = "31"
        case TradingInterruptions = "32"
        case TradingSuspensions = "33"
        case NoQuotes = "34"
        case RequestForQuotes = "35"
        case TradeVolume = "36"
    }

    public enum MDStatisticSubScope : String {

        public static var tag: Int {
            2458
        }

        case Visible = "1"
        case Hidden = "2"
        case Indicative = "3"
        case Tradeable = "4"
        case Passive = "5"
        case MarketConsensus = "6"
        case Power = "7"
        case HardwareError = "8"
        case SoftwareError = "9"
        case NetworkError = "10"
        case Failed = "11"
        case Executed = "12"
        case Entered = "13"
        case Modified = "14"
        case Cancelled = "15"
        case MarketDataAccess = "16"
        case TerminalAccess = "17"
        case Volume = "18"
        case Cleared = "19"
        case Settled = "20"
        case Other = "21"
        case Monetary = "22"
        case NonMonetary = "23"
        case Gross = "24"
        case LargeInScale = "25"
        case NeitherHiddenNorLargeInScale = "26"
        case CorporateAction = "27"
        case VenueDecision = "28"
        case MinimumTimePeriod = "29"
        case Open = "30"
        case NotExecuted = "31"
        case Aggressive = "32"
        case Directed = "33"
    }

    public enum MDStatisticScopeType : String {

        public static var tag: Int {
            2459
        }

        case EntryRate = "1"
        case ModificationRate = "2"
        case CancelRate = "3"
        case DownwardMove = "4"
        case UpwardMove = "5"
    }

    public enum MDStatisticFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2460
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticFrequencyUnit : String {

        public static var tag: Int {
            2461
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum MDStatisticDelayPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2462
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticDelayUnit : String {

        public static var tag: Int {
            2463
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum MDStatisticIntervalType : String {

        public static var tag: Int {
            2464
        }

        case SlidingWindow = "1"
        case SlidingWindowPeak = "2"
        case FixedDateRange = "3"
        case FixedTimeRange = "4"
        case CurrentTimeUnit = "5"
        case PreviousTimeUnit = "6"
        case MaximumRange = "7"
        case MaximumRangeUpToPreviousTimeUnit = "8"
    }

    public enum MDStatisticIntervalTypeUnit : String {

        public static var tag: Int {
            2465
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum MDStatisticIntervalPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2466
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticIntervalUnit : String {

        public static var tag: Int {
            2467
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum MDStatisticStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2468
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2469
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticStartTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2470
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticEndTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2471
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticRatioType : String {

        public static var tag: Int {
            2472
        }

        case BuyersToSellers = "1"
        case UpticksToDownticks = "2"
        case MarketMakerToNonMarketMaker = "3"
        case AutomatedToNonAutomated = "4"
        case OrdersToTrades = "5"
        case QuotesToTrades = "6"
        case OrdersAndQuotesToTrades = "7"
        case FailedToTotalTradedValue = "8"
        case BenefitsToTotalTradedValue = "9"
        case FeesToTotalTradedValue = "10"
        case TradeVolumeToTotalTradedVolume = "11"
        case OrdersToTotalNumberOrders = "12"
    }

    public enum MDStatisticRequestResult : String {

        public static var tag: Int {
            2473
        }

        case Successful = "0"
        case InvalidOrUnknownMarket = "1"
        case InvalidOrUnknownMarketSegment = "2"
        case InvalidOrUnknownSecurityList = "3"
        case InvalidOrUnknownInstruments = "4"
        case InvalidParties = "5"
        case TradeDateOutOfSupportedRange = "6"
        case UnsupportedStatisticType = "7"
        case UnsupportedScopeOrSubScope = "8"
        case UnsupportedScopeType = "9"
        case MarketDepthNotSupported = "10"
        case FrequencyNotSupported = "11"
        case UnsupportedStatisticInterval = "12"
        case UnsupportedStatisticDateRange = "13"
        case UnsupportedStatisticTimeRange = "14"
        case UnsupportedRatioType = "15"
        case InvalidOrUnknownTradeInputSource = "16"
        case InvalidOrUnknownTradingSession = "17"
        case UnauthorizedForStatisticRequest = "18"
        case Other = "99"
    }

    public enum NoMDStatistics : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2474
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2475
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2476
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticStatus : String {

        public static var tag: Int {
            2477
        }

        case Active = "1"
        case Inactive = "2"
    }

    public enum MDStatisticValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2478
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDStatisticValueType : String {

        public static var tag: Int {
            2479
        }

        case Absolute = "1"
        case Percentage = "2"
    }

    public enum MDStatisticValueUnit : String {

        public static var tag: Int {
            2480
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum EncodedMDStatisticDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2481
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMDStatisticDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2482
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocRiskLimitCheckStatus : String {

        public static var tag: Int {
            2483
        }

        case Accepted = "0"
        case Rejected = "1"
        case ClaimRequired = "2"
        case PreDefinedLimitCheckSucceeded = "3"
        case PreDefinedLimitCheckFailed = "4"
        case PreDefinedAutoAcceptRuleInvoked = "5"
        case PreDefinedAutoRejectRuleInvoked = "6"
        case AcceptedByClearingFirm = "7"
        case RejectedByClearingFirm = "8"
        case Pending = "9"
        case AcceptedByCreditHub = "10"
        case RejectedByCreditHub = "11"
        case PendingCreditHubCheck = "12"
        case AcceptedByExecVenue = "13"
        case RejectedByExecVenue = "14"
    }

    public enum FirmTransactionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2484
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TransactionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2485
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum WireReference : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2486
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollRptRejectReason : String {

        public static var tag: Int {
            2487
        }

        case UnknownTrade = "0"
        case UnknownInstrument = "1"
        case UnknownCounterparty = "2"
        case UnknownPosition = "3"
        case UnacceptableCollateral = "4"
        case Other = "99"
    }

    public enum CollRptStatus : String {

        public static var tag: Int {
            2488
        }

        case Accepted = "0"
        case Received = "1"
        case Rejected = "2"
    }

    public enum PackageID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2489
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2490
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAssetGroup : String {

        public static var tag: Int {
            2491
        }

        case Financials = "1"
        case Commodities = "2"
        case AlternativeInvestments = "3"
    }

    public enum LegDifferentialPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2492
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegDocumentationText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2493
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegDocumentationTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2494
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAgreementCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2495
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAgreementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2496
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAgreementDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2497
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAgreementID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2498
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAgreementVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2499
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBrokerConfirmationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2500
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCreditSupportAgreementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2501
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCreditSupportAgreementDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2502
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCreditSupportAgreementID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2503
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryType : String {

        public static var tag: Int {
            2504
        }

        case VersusPayment = "0"
        case Free = "1"
        case TriParty = "2"
        case HoldInCustody = "3"
        case DeliverByValue = "4"
    }

    public enum LegDocumentationText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2505
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2506
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegGoverningLaw : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2507
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarginRatio : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2508
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMasterConfirmationAnnexDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2509
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMasterConfirmationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2510
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMasterConfirmationDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2511
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMasterConfirmationAnnexDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2512
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2513
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegTerminationType : String {

        public static var tag: Int {
            2514
        }

        case Overnight = "1"
        case Term = "2"
        case Flexible = "3"
        case Open = "4"
    }

    public enum AllocCalculatedCcyQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2515
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralRequestInstruction : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2516
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralRequestLinkID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2517
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralRequestNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2518
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNumCollateralRequests : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2519
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum WarningText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2520
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedWarningText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2521
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedWarningTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2522
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CrossedIndicator : String {

        public static var tag: Int {
            2523
        }

        case NoCross = "0"
        case CrossRejected = "1"
        case CrossAccepted = "2"
    }

    public enum TradeReportingIndicator : String {

        public static var tag: Int {
            2524
        }

        case NotReported = "0"
        case OnBook = "1"
        case SISeller = "2"
        case SIBuyer = "3"
        case NonSISeller = "4"
        case SubDelegationByFirm = "5"
        case Reportable = "6"
        case NonSIBuyer = "7"
        case OffBook = "8"
        case NotReportable = "9"
    }

    public enum AffiliatedFirmsTradeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2525
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InternationalSwapIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2526
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MultiAssetSwapIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2527
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearingSettlPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2528
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoRelativeValues : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2529
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelativeValueType : String {

        public static var tag: Int {
            2530
        }

        case ASWSpread = "1"
        case OIS = "2"
        case ZSpread = "3"
        case DiscountMargin = "4"
        case ISpread = "5"
        case OAS = "6"
        case GSpread = "7"
        case CDSBasis = "8"
        case CDSInterpolatedBasis = "9"
    }

    public enum RelativeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2531
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelativeValueSide : String {

        public static var tag: Int {
            2532
        }

        case Bid = "1"
        case Mid = "2"
        case Offer = "3"
    }

    public enum BidSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2533
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OfferSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2534
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDReportEvent : String {

        public static var tag: Int {
            2535
        }

        case StartInstrumentRefData = "1"
        case EndInstrumentRefData = "2"
        case StartOffMarketTrades = "3"
        case EndOffMarketTrades = "4"
        case StartOrderBookTrades = "5"
        case EndOrderBookTrades = "6"
        case StartOpenInterest = "7"
        case EndOpenInterest = "8"
        case StartSettlementPrices = "9"
        case EndSettlementPrices = "10"
        case StartStatsRefData = "11"
        case EndStatsRefData = "12"
        case StartStatistics = "13"
        case EndStatistics = "14"
    }

    public enum MDReportCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2536
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoMarketSegmentReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2537
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoInstrumentReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2538
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoPartyDetailReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2539
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoEntitlementReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2540
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotNoRiskLimitReports : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2541
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketSegmentStatus : String {

        public static var tag: Int {
            2542
        }

        case Active = "1"
        case Inactive = "2"
        case Published = "3"
    }

    public enum MarketSegmentType : String {

        public static var tag: Int {
            2543
        }

        case Pool = "1"
        case Retail = "2"
        case Wholesale = "3"
    }

    public enum MarketSegmentSubType : String {

        public static var tag: Int {
            2544
        }

        case InterProductSpread = "1"
    }

    public enum NoRelatedMarketSegments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2545
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2546
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketSegmentRelationship : String {

        public static var tag: Int {
            2547
        }

        case MarketSegmentPoolMember = "1"
        case RetailSegment = "2"
        case WholesaleSegment = "3"
    }

    public enum NoAuctionTypeRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2548
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AuctionTypeProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2549
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPriceRangeRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2550
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StartPriceRange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2551
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EndPriceRange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2552
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceRangeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2553
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceRangePercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2554
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceRangeProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2555
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceRangeRuleID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2556
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FastMarketPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2557
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoQuoteSizeRules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2558
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteSideIndicator : String {

        public static var tag: Int {
            2559
        }

        case No = "N"
        case Yes = "Y"
    }

    public enum NoFlexProductEligibilities : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2560
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FlexProductEligibilityComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2561
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NumOfComplexInstruments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2562
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDepthTimeInterval : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2563
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDepthTimeIntervalUnit : String {

        public static var tag: Int {
            2564
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum MDRecoveryTimeInterval : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2565
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MDRecoveryTimeIntervalUnit : String {

        public static var tag: Int {
            2566
        }

        case Seconds = "0"
        case TenthsOfASecond = "1"
        case HundredthsOfASecond = "2"
        case Milliseconds = "3"
        case Microseconds = "4"
        case Nanoseconds = "5"
        case Minutes = "10"
        case Hours = "11"
        case Days = "12"
        case Weeks = "13"
        case Months = "14"
        case Years = "15"
    }

    public enum PrimaryServiceLocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2567
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryServiceLocationID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2568
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchRuleProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2569
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CustomerPriority : String {

        public static var tag: Int {
            2570
        }

        case NoPriority = "0"
        case UnconditionalPriority = "1"
    }

    public enum TickRuleProductComplex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2571
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PreviousAdjustedOpenInterest : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2572
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PreviousUnadjustedOpenInterest : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2573
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LowExercisePriceOptionIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2574
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BlockTradeEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2575
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InstrumentPricePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2576
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikePricePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2577
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrigStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2578
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlSubMethod : String {

        public static var tag: Int {
            2579
        }

        case Shares = "1"
        case Derivatives = "2"
        case PaymentVsPayment = "3"
        case Notional = "4"
        case Cascade = "5"
        case Repurchase = "6"
        case Other = "99"
    }

    public enum NoClearingPriceParameters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2580
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BusinessDayType : String {

        public static var tag: Int {
            2581
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ClearingPriceOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2582
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum VegaMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2583
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AnnualTradingBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2584
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TotalTradingBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2585
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradingBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2586
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RealizedVariance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2587
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StandardVariance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2588
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RelatedClosePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2589
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OvernightInterestRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2590
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AccumulatedReturnModifiedVariationMargin : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2591
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CalculationMethod : String {

        public static var tag: Int {
            2592
        }

        case Automatic = "0"
        case Manual = "1"
    }

    public enum NoOrderAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2593
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderAttributeType : String {

        public static var tag: Int {
            2594
        }

        case AggregatedOrder = "0"
        case PendingAllocation = "1"
        case LiquidityProvisionActivityOrder = "2"
        case RiskReductionOrder = "3"
        case AlgorithmicOrder = "4"
        case SystemicInternaliserOrder = "5"
        case AllExecutionsSubmittedToAPA = "6"
        case OrderExecutionInstructedByClient = "7"
        case LargeInScale = "8"
        case Hidden = "9"
        case SubjectToEUSTO = "10"
        case SubjectToUKSTO = "11"
        case RepresentativeOrder = "12"
        case LinkageType = "13"
        case ExemptFromSTO = "14"
    }

    public enum OrderAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2595
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeltaCrossed : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2596
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventFuturesPriceValuation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2597
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventOptionsPriceValuation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2598
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPVFinalPriceElectionFallback : String {

        public static var tag: Int {
            2599
        }

        case Close = "0"
        case HedgeElection = "1"
    }

    public enum StrikeIndexCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2600
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StrikeIndexQuote : String {

        public static var tag: Int {
            2601
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum ExtraordinaryEventAdjustmentMethod : String {

        public static var tag: Int {
            2602
        }

        case CalculationAgent = "0"
        case OptionsExchange = "1"
    }

    public enum ExchangeLookAlike : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2603
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeIndexCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2604
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStrikeIndexQuote : String {

        public static var tag: Int {
            2605
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum LegExtraordinaryEventAdjustmentMethod : String {

        public static var tag: Int {
            2606
        }

        case CalculationAgent = "0"
        case OptionsExchange = "1"
    }

    public enum LegExchangeLookAlike : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2607
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventFuturesPriceValuation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2608
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventOptionsPriceValuation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2609
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPVFinalPriceElectionFallback : String {

        public static var tag: Int {
            2610
        }

        case Close = "0"
        case HedgeElection = "1"
    }

    public enum UnderlyingComplexEventFuturesPriceValuation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2611
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventOptionsPriceValuation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2612
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPVFinalPriceElectionFallback : String {

        public static var tag: Int {
            2613
        }

        case Close = "0"
        case HedgeElection = "1"
    }

    public enum UnderlyingNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2614
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNotionalCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2615
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNotionalDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2616
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNotionalAdjustments : String {

        public static var tag: Int {
            2617
        }

        case Execution = "0"
        case PortfolioRebalancing = "1"
        case Standard = "2"
    }

    public enum PositionID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2618
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNotionalXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2619
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFutureID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2620
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFutureIDSource : String {

        public static var tag: Int {
            2621
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingStrikeIndexCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2622
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStrikeIndexQuote : String {

        public static var tag: Int {
            2623
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum UnderlyingExtraordinaryEventAdjustmentMethod : String {

        public static var tag: Int {
            2624
        }

        case CalculationAgent = "0"
        case OptionsExchange = "1"
    }

    public enum UnderlyingExchangeLookAlike : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2625
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAverageVolumeLimitationPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2626
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAverageVolumeLimitationPeriodDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2627
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDepositoryReceiptIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2628
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOpenUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2629
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingBasketDivisor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2630
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingInstrumentXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2631
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralAmountType : String {

        public static var tag: Int {
            2632
        }

        case MarketValuation = "0"
        case PortfolioValue = "1"
        case ValueConfirmed = "2"
        case CollateralCreditValue = "3"
        case AdditionalCollateralValue = "4"
        case EstimatedMarketValuation = "5"
    }

    public enum NoMiscFeeSubTypes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2633
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2634
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeSubTypeAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2635
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MiscFeeSubTypeDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2636
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMiscFeeSubTypeDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2637
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMiscFeeSubTypeDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2638
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoCommissions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2639
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2640
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionAmountType : String {

        public static var tag: Int {
            2641
        }

        case Unspecified = "0"
        case Acceptance = "1"
        case Broker = "2"
        case ClearingBroker = "3"
        case Retail = "4"
        case SalesCommission = "5"
        case LocalCommission = "6"
        case ResearchPayment = "7"
    }

    public enum CommissionBasis : String {

        public static var tag: Int {
            2642
        }

        case PerUnit = "1"
        case Percent = "2"
        case Absolute = "3"
        case PercentageWaivedCashDiscount = "4"
        case PercentageWaivedEnhancedUnits = "5"
        case PointsPerBondOrContract = "6"
        case BasisPoints = "7"
        case AmountPerContract = "8"
    }

    public enum CommissionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2643
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionUnitOfMeasure : String {

        public static var tag: Int {
            2644
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum CommissionUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2645
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2646
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionSharedIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2647
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionAmountShared : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2648
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2649
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2650
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedCommissionDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2651
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedCommissionDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2652
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAllocCommissions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2653
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2654
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionAmountType : String {

        public static var tag: Int {
            2655
        }

        case Unspecified = "0"
        case Acceptance = "1"
        case Broker = "2"
        case ClearingBroker = "3"
        case Retail = "4"
        case SalesCommission = "5"
        case LocalCommission = "6"
        case ResearchPayment = "7"
    }

    public enum AllocCommissionBasis : String {

        public static var tag: Int {
            2656
        }

        case PerUnit = "1"
        case Percent = "2"
        case Absolute = "3"
        case PercentageWaivedCashDiscount = "4"
        case PercentageWaivedEnhancedUnits = "5"
        case PointsPerBondOrContract = "6"
        case BasisPoints = "7"
        case AmountPerContract = "8"
    }

    public enum AllocCommissionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2657
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionUnitOfMeasure : String {

        public static var tag: Int {
            2658
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum AllocCommissionUnitOfMeasureCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2659
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2660
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionSharedIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2661
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionAmountShared : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2662
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2663
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocCommissionDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2664
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAllocCommissionDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2665
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAllocCommissionDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2666
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AlgorithmicTradeIndicator : String {

        public static var tag: Int {
            2667
        }

        case NonAlgorithmicTrade = "0"
        case AlgorithmicTrade = "1"
    }

    public enum NoTrdRegPublications : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2668
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdRegPublicationType : String {

        public static var tag: Int {
            2669
        }

        case PreTradeTransparencyWaiver = "0"
        case PostTradeDeferral = "1"
        case ExemptFromPublication = "2"
        case OrderLevelPublicationToSubscribers = "3"
        case PriceLevelPublicationToSubscribers = "4"
        case OrderLevelPublicationToThePublic = "5"
        case PublicationInternalToExecutionVenue = "6"
    }

    public enum TrdRegPublicationReason : String {

        public static var tag: Int {
            2670
        }

        case NoBookOrderDueToAverageSpreadPrice = "0"
        case NoBookOrderDueToRefPrice = "1"
        case NoBookOrderDueToOtherConditions = "2"
        case NoPublicPriceDueToRefPrice = "3"
        case NoPublicPriceDueToIlliquid = "4"
        case NoPublicPriceDueToOrderSize = "5"
        case DeferralDueToLargeInScale = "6"
        case DeferralDueToIlliquid = "7"
        case DeferralDueToSizeSpecific = "8"
        case NoPublicPriceDueToLargeInScale = "9"
        case NoPublicPriceSizeDueToOrderHidden = "10"
        case ExemptedDueToSecuritiesFinancingTransaction = "11"
        case ExemptedDueToESCBPolicyTransaction = "12"
        case ExceptionDueToReportByPaper = "13"
        case ExceptionDueToTradeExecutedWithNonReportingParty = "14"
        case ExceptionDueToIntraFirmOrder = "15"
    }

    public enum SideTradeReportingIndicator : String {

        public static var tag: Int {
            2671
        }

        case NotReported = "0"
        case OnBook = "1"
        case SISeller = "2"
        case SIBuyer = "3"
        case NonSISeller = "4"
        case SubDelegationByFirm = "5"
        case Reportable = "6"
        case NonSIBuyer = "7"
        case OffBook = "8"
        case NotReportable = "9"
    }

    public enum CrossRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2672
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillMatchID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2673
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FillMatchSubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2674
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MassActionReason : String {

        public static var tag: Int {
            2675
        }

        case None = "0"
        case TradingRiskControl = "1"
        case ClearingRiskControl = "2"
        case MarketMakerProtection = "3"
        case StopTrading = "4"
        case EmergencyAction = "5"
        case SessionLossLogout = "6"
        case DuplicateLogin = "7"
        case ProductNotTraded = "8"
        case InstrumentNotTraded = "9"
        case CompleInstrumentDeleted = "10"
        case CircuitBreakerActivated = "11"
        case Other = "99"
    }

    public enum MaximumPricePercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2676
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NotAffectedReason : String {

        public static var tag: Int {
            2677
        }

        case OrderSuspended = "0"
        case InstrumentSuspended = "1"
    }

    public enum TotalNotAffectedOrders : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2678
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderOwnershipIndicator : String {

        public static var tag: Int {
            2679
        }

        case NoChange = "0"
        case ExecutingPartyChange = "1"
        case EnteringPartyChange = "2"
        case SpecifiedPartyChange = "3"
    }

    public enum LegAccount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2680
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum InTheMoneyCondition : String {

        public static var tag: Int {
            2681
        }

        case StandardITM = "0"
        case ATMITM = "1"
        case ATMCallITM = "2"
        case ATMPutITM = "3"
    }

    public enum LegInTheMoneyCondition : String {

        public static var tag: Int {
            2682
        }

        case StandardITM = "0"
        case ATMITM = "1"
        case ATMCallITM = "2"
        case ATMPutITM = "3"
    }

    public enum UnderlyingInTheMoneyCondition : String {

        public static var tag: Int {
            2683
        }

        case StandardITM = "0"
        case ATMITM = "1"
        case ATMCallITM = "2"
        case ATMPutITM = "3"
    }

    public enum DerivativeInTheMoneyCondition : String {

        public static var tag: Int {
            2684
        }

        case StandardITM = "0"
        case ATMITM = "1"
        case ATMCallITM = "2"
        case ATMPutITM = "3"
    }

    public enum ContraryInstructionEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2685
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegContraryInstructionEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2686
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingContraryInstructionEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2687
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DerivativeContraryInstructionEligibilityIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2688
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralMarketPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2689
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralPercentOverage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2690
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSideCollateralAmounts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2691
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralAmountMarketID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2692
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralAmountMarketSegmentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2693
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralAmountType : String {

        public static var tag: Int {
            2694
        }

        case MarketValuation = "0"
        case PortfolioValue = "1"
        case ValueConfirmed = "2"
        case CollateralCreditValue = "3"
        case AdditionalCollateralValue = "4"
        case EstimatedMarketValuation = "5"
    }

    public enum SideCollateralCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2695
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2696
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralFXRateCalc : String {

        public static var tag: Int {
            2697
        }

        case Divide = "D"
        case Multiply = "M"
    }

    public enum SideCollateralMarketPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2698
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralPercentOverage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2699
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralPortfolioID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2700
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2701
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCurrentCollateralAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2702
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideHaircutIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2703
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExDestinationType : String {

        public static var tag: Int {
            2704
        }

        case NoRestriction = "0"
        case TradedOnlyOnTradingVenue = "1"
        case TradedOnlyOnSI = "2"
        case TradedOnTradingVenueOrSI = "3"
    }

    public enum MarketCondition : String {

        public static var tag: Int {
            2705
        }

        case Normal = "0"
        case Stressed = "1"
        case Exceptional = "2"
    }

    public enum NoQuoteAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2706
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum QuoteAttributeType : String {

        public static var tag: Int {
            2707
        }

        case QuoteAboveStandardMarketSize = "0"
        case QuoteAboveSpecificInstrumentSize = "1"
        case QuoteApplicableForLiquidtyProvisionActivity = "2"
        case QuoteIssuerStatus = "3"
        case BidOrAskRequest = "4"
    }

    public enum QuoteAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2708
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPriceQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2709
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceQualifier : String {

        public static var tag: Int {
            2710
        }

        case AccruedInterestIsFactored = "0"
        case TaxIsFactored = "1"
        case BondAmortizationIsFactored = "2"
    }

    public enum MDValueTier : String {

        public static var tag: Int {
            2711
        }

        case Range1 = "1"
        case Range2 = "2"
        case Range3 = "3"
    }

    public enum MiscFeeQualifier : String {

        public static var tag: Int {
            2712
        }

        case Contributes = "0"
        case DoesNotContribute = "1"
    }

    public enum MiscFeeDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2713
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FinancialInstrumentFullName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2714
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedFinancialInstrumentFullNameLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2715
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedFinancialInstrumentFullName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2716
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFinancialInstrumentFullName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2717
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegFinancialInstrumentFullNameLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2718
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegFinancialInstrumentFullName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2719
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFinancialInstrumentFullName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2720
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingFinancialInstrumentFullNameLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2721
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingFinancialInstrumentFullName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2722
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingIndexCurveUnit : String {

        public static var tag: Int {
            2723
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2724
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommissionAmountSubType : String {

        public static var tag: Int {
            2725
        }

        case ResearchPaymentAccount = "0"
        case CommissionSharingAgreement = "1"
        case OtherTypeResearchPayment = "2"
    }

    public enum AllocCommissionAmountSubType : String {

        public static var tag: Int {
            2726
        }

        case ResearchPaymentAccount = "0"
        case CommissionSharingAgreement = "1"
        case OtherTypeResearchPayment = "2"
    }

    public enum AllocLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2727
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FloatingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2728
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FloatingRateIndexCurveSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2729
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FloatingRateIndexCurveUnit : String {

        public static var tag: Int {
            2730
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum FloatingRateIndexID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2731
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FloatingRateIndexIDSource : String {

        public static var tag: Int {
            2732
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum IndexRollMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2733
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoIndexRollMonths : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2734
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AssetSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2735
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CommodityFinalPriceType : String {

        public static var tag: Int {
            2736
        }

        case ArgusMcCloskey = "0"
        case Baltic = "1"
        case Exchange = "2"
        case GlobalCoal = "3"
        case IHSMcCloskey = "4"
        case Platts = "5"
        case Other = "99"
    }

    public enum FinancialInstrumentShortName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2737
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NextIndexRollDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2738
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAssetSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2739
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFinancialInstrumentShortName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2740
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SecondaryAssetSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2741
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFinancialInstrumentShortName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2742
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSecondaryAssetSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2743
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAssetSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2744
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSecondaryAssetSubType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2745
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoReferenceDataDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2746
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReferenceDataDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2747
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReferenceDataDateType : String {

        public static var tag: Int {
            2748
        }

        case AdmitToTradeRequestDate = "0"
        case AdmitToTradeApprovalDate = "1"
        case AdmitToTradeOrFirstTradeDate = "2"
        case TerminationDate = "3"
    }

    public enum ExecutionTimestamp : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2749
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReportingPx : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2750
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReportingQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2751
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryRouteOrCharter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2752
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnTrigger : String {

        public static var tag: Int {
            2753
        }

        case Dividend = "1"
        case Variance = "2"
        case Volatility = "3"
        case TotalReturn = "4"
        case ContractForDifference = "5"
        case CreditDefault = "6"
        case SpreadBet = "7"
        case Price = "8"
        case ForwardPriceUnderlyingInstrument = "9"
        case Other = "99"
    }

    public enum LegDeliveryRouteOrCharter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2754
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnTrigger : String {

        public static var tag: Int {
            2755
        }

        case Dividend = "1"
        case Variance = "2"
        case Volatility = "3"
        case TotalReturn = "4"
        case ContractForDifference = "5"
        case CreditDefault = "6"
        case SpreadBet = "7"
        case Price = "8"
        case ForwardPriceUnderlyingInstrument = "9"
        case Other = "99"
    }

    public enum UnderlyingDeliveryRouteOrCharter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2756
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnTrigger : String {

        public static var tag: Int {
            2757
        }

        case Dividend = "1"
        case Variance = "2"
        case Volatility = "3"
        case TotalReturn = "4"
        case ContractForDifference = "5"
        case CreditDefault = "6"
        case SpreadBet = "7"
        case Price = "8"
        case ForwardPriceUnderlyingInstrument = "9"
        case Other = "99"
    }

    public enum AllocRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2758
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum GroupAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2759
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum GroupRemainingAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2760
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocGroupAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2761
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PriceMarkup : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2762
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AveragePriceType : String {

        public static var tag: Int {
            2763
        }

        case TimeWeightedAveragePrice = "0"
        case VolumeWeightedAveragePrice = "1"
        case PercentOfVolumeAvveragePrice = "2"
        case LimitOrderAveragePrice = "3"
    }

    public enum AveragePriceStartTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2764
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AveragePriceEndTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2765
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderPercentOfTotalVolume : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2766
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllocGroupStatus : String {

        public static var tag: Int {
            2767
        }

        case Added = "0"
        case Canceled = "1"
        case Replaced = "2"
        case Changed = "3"
        case Pending = "4"
    }

    public enum AllocRequestStatus : String {

        public static var tag: Int {
            2768
        }

        case Accepted = "0"
        case Rejected = "1"
    }

    public enum AllocAvgPxIndicator : String {

        public static var tag: Int {
            2769
        }

        case NoAveragePricing = "0"
        case Trade = "1"
        case LastTrade = "2"
        case NotionalValueAveragePxGroupTrade = "3"
        case AveragePricedTrade = "4"
    }

    public enum AllocAvgPxGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2770
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PreviousAllocGroupID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2771
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMatchExceptions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2772
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchExceptionType : String {

        public static var tag: Int {
            2773
        }

        case NoMatchingConfirmation = "0"
        case NoMatchingAllocation = "1"
        case AllocationDataElementMissing = "2"
        case ConfirmationDataElementMissing = "3"
        case DataDifferenceNotWithinTolerance = "4"
        case MatchWithinTolerance = "5"
        case Other = "99"
    }

    public enum MatchExceptionElementType : String {

        public static var tag: Int {
            2774
        }

        case AccruedInterest = "1"
        case DealPrice = "2"
        case TradeDate = "3"
        case SettlementDate = "4"
        case SideIndicator = "5"
        case TradedCurrency = "6"
        case AccountID = "7"
        case ExecutingBrokerID = "8"
        case SettlementCurrencyAndAmount = "9"
        case InvestmentManagerID = "10"
        case NetAmount = "11"
        case PlaceOfSettlement = "12"
        case Commissions = "13"
        case SecurityIdentifier = "14"
        case QualityAllocated = "15"
        case Principal = "16"
        case Fees = "17"
        case Tax = "18"
    }

    public enum MatchExceptionElementName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2775
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchExceptionAllocValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2776
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchExceptionConfirmValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2777
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchExceptionToleranceValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2778
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchExceptionToleranceValueType : String {

        public static var tag: Int {
            2779
        }

        case FixedAmount = "1"
        case Percentage = "2"
    }

    public enum MatchExceptionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2780
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMatchingDataPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2781
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchingDataPointIndicator : String {

        public static var tag: Int {
            2782
        }

        case Mandatory = "1"
        case Optional = "2"
    }

    public enum MatchingDataPointValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2783
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MatchingDataPointType : String {

        public static var tag: Int {
            2784
        }

        case AccruedInterest = "1"
        case DealPrice = "2"
        case TradeDate = "3"
        case SettlementDate = "4"
        case SideIndicator = "5"
        case TradedCurrency = "6"
        case AccountID = "7"
        case ExecutingBrokerID = "8"
        case SettlementCurrencyAndAmount = "9"
        case InvestmentManagerID = "10"
        case NetAmount = "11"
        case PlaceOfSettlement = "12"
        case Commissions = "13"
        case SecurityIdentifier = "14"
        case QualityAllocated = "15"
        case Principal = "16"
        case Fees = "17"
        case Tax = "18"
    }

    public enum MatchingDataPointName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2785
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAggregationRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2786
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAggregationRequestRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2787
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAggregationTransType : String {

        public static var tag: Int {
            2788
        }

        case New = "0"
        case Cancel = "1"
        case Replace = "2"
    }

    public enum AggregatedQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2789
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TradeAggregationRequestStatus : String {

        public static var tag: Int {
            2790
        }

        case Accepted = "0"
        case Rejected = "1"
    }

    public enum TradeAggregationRejectReason : String {

        public static var tag: Int {
            2791
        }

        case UnknownOrders = "0"
        case UnknownExecutionFills = "1"
        case Other = "99"
    }

    public enum TradeAggregationReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2792
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AvgSpotRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2793
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AvgForwardPoints : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2794
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OffshoreIndicator : String {

        public static var tag: Int {
            2795
        }

        case Regular = "0"
        case Offshore = "1"
        case Onshore = "2"
    }

    public enum FXBenchmarkRateFix : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2796
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMatchExceptionTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2797
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMatchExecptionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2798
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayReportID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2799
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayDisputeReason : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2800
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedReplaceText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2801
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedReplaceTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2802
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayReportRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2803
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayReportTransType : String {

        public static var tag: Int {
            2804
        }

        case New = "0"
        case Replace = "1"
        case Status = "2"
    }

    public enum ReplaceText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2805
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayReportStatus : String {

        public static var tag: Int {
            2806
        }

        case Received = "0"
        case Accepted = "1"
        case Rejected = "2"
        case Disputed = "3"
    }

    public enum CancelText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2807
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedCancelText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2808
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedCancelTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2809
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayRequestRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2810
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayRequestTransType : String {

        public static var tag: Int {
            2811
        }

        case New = "0"
        case Cancel = "1"
    }

    public enum PayRequestID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2812
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PayRequestStatus : String {

        public static var tag: Int {
            2813
        }

        case Received = "0"
        case Accepted = "1"
        case Rejected = "2"
        case Disputed = "3"
    }

    public enum EncodedPostTradePaymentDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2814
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedPostTradePaymentDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2815
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentAccount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2816
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2817
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2818
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentDebitOrCredit : String {

        public static var tag: Int {
            2819
        }

        case DebitPay = "0"
        case CreditReceive = "1"
    }

    public enum PostTradePaymentDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2820
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2821
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentLinkID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2822
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentStatus : String {

        public static var tag: Int {
            2823
        }

        case New = "0"
        case Initiated = "1"
        case Pending = "2"
        case Confirmed = "3"
        case Rejected = "4"
    }

    public enum PostTradePaymentType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2824
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentCalculationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2825
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentValueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2826
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PostTradePaymentFinalValueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2827
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CurrentDisplayPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2828
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DuplicateClOrdIDIndicator : String {

        public static var tag: Int {
            2829
        }

        case UniqueClOrdID = "N"
        case DuplicateClOrdID = "Y"
    }

    public enum EventInitiatorType : String {

        public static var tag: Int {
            2830
        }

        case CustomerOrClient = "C"
        case ExchangeOrExecutionVenue = "E"
        case FirmOrBroker = "F"
    }

    public enum NBBOEntryType : String {

        public static var tag: Int {
            2831
        }

        case Bid = "0"
        case Offer = "1"
        case MidPrice = "2"
    }

    public enum NBBOPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2832
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NBBOQty : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2833
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NBBOSource : String {

        public static var tag: Int {
            2834
        }

        case NotApplicable = "0"
        case Direct = "1"
        case SIP = "2"
        case Hybrid = "3"
    }

    public enum OrderOriginationFirmID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2835
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OrderTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2836
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SingleQuoteIndicator : String {

        public static var tag: Int {
            2837
        }

        case MultipleQuotesAllowed = "N"
        case OnlyOneQuoteAllowed = "Y"
    }

    public enum CurrentWorkingPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2838
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TrdRegTimestampManualIndicator : String {

        public static var tag: Int {
            2839
        }

        case NotManuallyCaptured = "N"
        case ManuallyCaptured = "Y"
    }

    public enum CollateralReinvestmentRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2840
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2841
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralReinvestmentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2842
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralReinvestmentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2843
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CollateralReinvestmentType : String {

        public static var tag: Int {
            2844
        }

        case MoneyMarketFund = "0"
        case OtherComingledPool = "1"
        case RepoMarket = "2"
        case DirectPurchaseOfSecurities = "3"
        case OtherInvestments = "4"
    }

    public enum NoCollateralReinvestments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2845
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FundingSource : String {

        public static var tag: Int {
            2846
        }

        case Repo = "0"
        case Cash = "1"
        case FreeCedits = "2"
        case CustomerShortSales = "3"
        case BrokerShortSales = "4"
        case UnsecuredBorrowing = "5"
        case Other = "99"
    }

    public enum FundingSourceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2847
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FundingSourceMarketValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2848
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoFundingSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2849
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarginDirection : String {

        public static var tag: Int {
            2851
        }

        case Posted = "0"
        case Received = "1"
    }

    public enum SideCollateralReinvestmentRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2862
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideUnderlyingRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2863
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoSideCollateralReinvestments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2864
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralReinvestmentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2865
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralReinvestmentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2866
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SideCollateralReinvestmentType : String {

        public static var tag: Int {
            2867
        }

        case MoneyMarketFund = "0"
        case OtherComingledPool = "1"
        case RepoMarket = "2"
        case DirectPurchaseOfSecurities = "3"
        case OtherInvestments = "4"
    }

    public enum CollateralizationValueDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2868
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum RegulatoryReportTypeBusinessDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2869
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ClearingPortfolioID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2870
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoTransactionAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2871
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum TransactionAttributeType : String {

        public static var tag: Int {
            2872
        }

        case ExclusiveArrangement = "0"
        case CollateralReuse = "1"
        case CollateralArrangmentType = "2"
    }

    public enum TransactionAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2873
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2874
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosAmtPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2876
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PosAmtPriceType : String {

        public static var tag: Int {
            2877
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum TerminationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2878
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CouponOtherDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2879
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCouponOtherDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2880
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCouponOtherDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2881
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContraOrderOrigination : String {

        public static var tag: Int {
            2882
        }

        case OrderReceivedFromCustomer = "1"
        case OrderReceivedFromWithinFirm = "2"
        case OrderReceivedFromAnotherBrokerDealer = "3"
        case OrderReceivedFromCustomerOrWithFirm = "4"
        case OrderReceivedFromDirectAccessCustomer = "5"
        case OrderReceivedFromForeignDealerEquivalent = "6"
        case OrderReceivedFromExecutionOnlyService = "7"
    }

    public enum RoutingArrangmentIndicator : String {

        public static var tag: Int {
            2883
        }

        case NoRoutingArrangmentInPlace = "0"
        case RoutingArrangementInPlace = "1"
    }

    public enum ContraRoutingArrangmentIndicator : String {

        public static var tag: Int {
            2884
        }

        case NoRoutingArrangmentInPlace = "0"
        case RoutingArrangementInPlace = "1"
    }

    public enum UnderlyingAccruedInterestAmt : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2885
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNumDaysInterest : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            2886
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoAdditionalTermBondRefs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40000
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40001
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondSecurityIDSource : String {

        public static var tag: Int {
            40002
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum AdditionalTermBondDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40003
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAdditionalTermBondDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40004
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAdditionalTermBondDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40005
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40006
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40007
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAdditionalTermBondIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40008
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedAdditionalTermBondIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40009
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondSeniority : String {

        public static var tag: Int {
            40010
        }

        case SeniorSecured = "SD"
        case Senior = "SR"
        case Subordinated = "SB"
        case Junior = "JR"
        case Mezzanine = "MZ"
        case SeniorNonPreferred = "SN"
    }

    public enum AdditionalTermBondCouponType : String {

        public static var tag: Int {
            40011
        }

        case Zero = "0"
        case FixedRate = "1"
        case FloatingRate = "2"
        case Structured = "3"
    }

    public enum AdditionalTermBondCouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40012
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40013
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondParValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40014
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondCurrentTotalIssuedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40015
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondCouponFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40016
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermBondCouponFrequencyUnit : String {

        public static var tag: Int {
            40017
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum AdditionalTermBondDayCount : String {

        public static var tag: Int {
            40018
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum NoAdditionalTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40019
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermConditionPrecedentBondIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40020
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalTermDiscrepancyClauseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40021
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoCashSettlTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40022
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40023
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlValuationFirstBusinessDayOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40024
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40025
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40026
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlQuoteMethod : String {

        public static var tag: Int {
            40027
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum CashSettlQuoteAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40028
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40029
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlMinimumQuoteAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40030
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlMinimumQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40031
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlDealer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40032
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40033
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40034
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlRecoveryFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40035
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlFixedTermIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40036
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlAccruedInterestIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40037
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlValuationMethod : String {

        public static var tag: Int {
            40038
        }

        case Market = "0"
        case Highest = "1"
        case AverageMarket = "2"
        case AverageHighest = "3"
        case BlendedMarket = "4"
        case BlendedHighest = "5"
        case AverageBlendedMarket = "6"
        case AverageBlendedHighest = "7"
    }

    public enum CashSettlTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40039
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoContractualDefinitions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40040
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContractualDefinition : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40041
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoContractualMatrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40042
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContractualMatrixSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40043
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContractualMatrixDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40044
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ContractualMatrixTerm : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40045
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoFinancingTermSupplements : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40046
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FinancingTermSupplementDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40047
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FinancingTermSupplementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40048
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreams : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40049
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamType : String {

        public static var tag: Int {
            40050
        }

        case PaymentCashSettlement = "0"
        case PhysicalDelivery = "1"
    }

    public enum StreamDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40051
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamPaySide : String {

        public static var tag: Int {
            40052
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum StreamReceiveSide : String {

        public static var tag: Int {
            40053
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum StreamNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40054
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40055
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40056
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamEffectiveDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40057
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamEffectiveDateBusinessDayConvention : String {

        public static var tag: Int {
            40058
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingStreamEffectiveDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40059
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamEffectiveDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40060
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamEffectiveDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40061
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamEffectiveDateOffsetUnit : String {

        public static var tag: Int {
            40062
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingStreamEffectiveDateOffsetDayType : String {

        public static var tag: Int {
            40063
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingStreamEffectiveDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40064
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamTerminationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40065
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamTerminationDateBusinessDayConvention : String {

        public static var tag: Int {
            40066
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum StreamTerminationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40067
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamTerminationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40068
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamTerminationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40069
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamTerminationDateOffsetUnit : String {

        public static var tag: Int {
            40070
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum StreamTerminationDateOffsetDayType : String {

        public static var tag: Int {
            40071
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum StreamTerminationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40072
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationPeriodBusinessDayConvention : String {

        public static var tag: Int {
            40073
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum StreamCalculationPeriodBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40074
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamFirstPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40075
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamFirstPeriodStartDateBusinessDayConvention : String {

        public static var tag: Int {
            40076
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum StreamFirstPeriodStartDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40077
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamFirstPeriodStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40078
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamFirstRegularPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40079
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamFirstCompoundingPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40080
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamLastRegularPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40081
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40082
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationFrequencyUnit : String {

        public static var tag: Int {
            40083
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum StreamCalculationRollConvention : String {

        public static var tag: Int {
            40084
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoSettlRateFallbacks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40085
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlRatePostponementMaximumDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40086
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamNonDeliverableSettlRateSource : String {

        public static var tag: Int {
            40087
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum SettlRatePostponementSurvey : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40088
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlRatePostponementCalculationAgent : String {

        public static var tag: Int {
            40089
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum NoProvisions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40090
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionType : String {

        public static var tag: Int {
            40091
        }

        case MandatoryEarlyTermination = "0"
        case OptionalEarlyTermination = "1"
        case Cancelable = "2"
        case Extendable = "3"
        case MutualEarlyTermination = "4"
        case Evergreen = "5"
        case Callable = "6"
        case Puttable = "7"
    }

    public enum ProvisionDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40092
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionDateBusinessDayConvention : String {

        public static var tag: Int {
            40093
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ProvisionDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40094
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40095
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionDateTenorPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40096
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionDateTenorUnit : String {

        public static var tag: Int {
            40097
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionCalculationAgent : String {

        public static var tag: Int {
            40098
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum ProvisionOptionSinglePartyBuyerSide : String {

        public static var tag: Int {
            40099
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum ProvisionOptionSinglePartySellerSide : String {

        public static var tag: Int {
            40100
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum ProvisionOptionExerciseStyle : String {

        public static var tag: Int {
            40101
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum ProvisionOptionExerciseMultipleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40102
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseMinimumNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40103
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseMaximumNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40104
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionMinimumNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40105
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionMaximumNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40106
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseConfirmation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40107
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlMethod : String {

        public static var tag: Int {
            40108
        }

        case CashPrice = "0"
        case CashPriceAlternate = "1"
        case ParYieldCurveAdjusted = "2"
        case ZeroCouponYieldCurveAdjusted = "3"
        case ParYieldCurveUnadjusted = "4"
        case CrossCurrency = "5"
        case CollateralizedPrice = "6"
    }

    public enum ProvisionCashSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40109
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlCurrency2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40110
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlQuoteType : String {

        public static var tag: Int {
            40111
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
        case ExercisingPartyPays = "3"
    }

    public enum ProvisionCashSettlQuoteSource : String {

        public static var tag: Int {
            40112
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum ProvisionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40113
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlValueTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40114
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlValueTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40115
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlValueDateBusinessDayConvention : String {

        public static var tag: Int {
            40116
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ProvisionCashSettlValueDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40117
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlValueDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40118
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlValueDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40119
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlValueDateOffsetUnit : String {

        public static var tag: Int {
            40120
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionCashSettlValueDateOffsetDayType : String {

        public static var tag: Int {
            40121
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ProvisionCashSettlValueDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40122
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseBusinessDayConvention : String {

        public static var tag: Int {
            40123
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ProvisionOptionExerciseBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40124
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseEarliestDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40125
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseEarliestDateOffsetUnit : String {

        public static var tag: Int {
            40126
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionOptionExerciseFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40127
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseFrequencyUnit : String {

        public static var tag: Int {
            40128
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum ProvisionOptionExerciseStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40129
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40130
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40131
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseStartDateOffsetUnit : String {

        public static var tag: Int {
            40132
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionOptionExerciseStartDateOffsetDayType : String {

        public static var tag: Int {
            40133
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ProvisionOptionExerciseStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40134
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExercisePeriodSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40135
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseBoundsFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40136
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseBoundsLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40137
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseEarliestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40138
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseEarliestTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40139
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseLatestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40140
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseLatestTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40141
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionOptionExerciseFixedDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40142
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseFixedDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40143
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExerciseFixedDateType : String {

        public static var tag: Int {
            40144
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum ProvisionOptionExpirationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40145
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExpirationDateBusinessDayConvention : String {

        public static var tag: Int {
            40146
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ProvisionOptionExpirationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40147
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExpirationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40148
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExpirationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40149
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExpirationDateOffsetUnit : String {

        public static var tag: Int {
            40150
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionOptionExpirationDateOffsetDayType : String {

        public static var tag: Int {
            40151
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ProvisionOptionExpirationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40152
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40153
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionExpirationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40154
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionRelevantUnderlyingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40155
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionRelevantUnderlyingDateBusinessDayConvention : String {

        public static var tag: Int {
            40156
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ProvisionOptionRelevantUnderlyingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40157
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionRelevantUnderlyingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40158
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionRelevantUnderlyingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40159
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionOptionRelevantUnderlyingDateOffsetUnit : String {

        public static var tag: Int {
            40160
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionOptionRelevantUnderlyingDateOffsetDayType : String {

        public static var tag: Int {
            40161
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ProvisionOptionRelevantUnderlyingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40162
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            40163
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ProvisionCashSettlPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40164
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40165
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40166
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDateOffsetUnit : String {

        public static var tag: Int {
            40167
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProvisionCashSettlPaymentDateOffsetDayType : String {

        public static var tag: Int {
            40168
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ProvisionCashSettlPaymentDateRangeFirst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40169
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDateRangeLast : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40170
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionCashSettlPaymentDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40171
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40172
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionCashSettlPaymentDateType : String {

        public static var tag: Int {
            40173
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoProvisionPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40174
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40175
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionPartyIDSource : String {

        public static var tag: Int {
            40176
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum ProvisionPartyRole : String {

        public static var tag: Int {
            40177
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoProvisionPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40178
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40179
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionPartySubIDType : String {

        public static var tag: Int {
            40180
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoProtectionTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40181
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40182
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40183
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermSellerNotifies : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40184
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermBuyerNotifies : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40185
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40186
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermStandardSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40187
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventMinimumSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40188
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventNewsSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40189
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40190
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProtectionTermEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40191
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40192
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40193
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40194
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40195
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventUnit : String {

        public static var tag: Int {
            40196
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ProtectionTermEventDayType : String {

        public static var tag: Int {
            40197
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ProtectionTermEventRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40198
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProtectionTermEventQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40199
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermEventQualifier : String {

        public static var tag: Int {
            40200
        }

        case RestructuringMultipleHoldingObligations = "H"
        case RestructuringMultipleCreditEventNotices = "E"
        case FloatingRateInterestShortfall = "C"
    }

    public enum NoProtectionTermObligations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40201
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermObligationType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40202
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProtectionTermObligationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40203
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPhysicalSettlTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40204
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PhysicalSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40205
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PhysicalSettlBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40206
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PhysicalSettlMaximumBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40207
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PhysicalSettlTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40208
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPhysicalSettlDeliverableObligations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40209
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PhysicalSettlDeliverableObligationType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40210
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PhysicalSettlDeliverableObligationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40211
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPayments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40212
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentType : String {

        public static var tag: Int {
            40213
        }

        case Brokerage = "0"
        case UpfrontFee = "1"
        case IndependentAmountCollateral = "2"
        case PrincipalExchange = "3"
        case NovationTermination = "4"
        case EarlyTerminationProvision = "5"
        case CancelableProvision = "6"
        case ExtendibleProvision = "7"
        case CapRateProvision = "8"
        case FloorRateProvision = "9"
        case OptionPremium = "10"
        case SettlementPayment = "11"
        case CashSettl = "12"
        case SecurityLending = "13"
        case Rebate = "14"
        case Other = "99"
    }

    public enum PaymentPaySide : String {

        public static var tag: Int {
            40214
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum PaymentReceiveSide : String {

        public static var tag: Int {
            40215
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum PaymentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40216
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40217
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40218
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40219
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentBusinessDayConvention : String {

        public static var tag: Int {
            40220
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40221
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40222
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40223
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentDiscountFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40224
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentPresentValueAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40225
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentPresentValueCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40226
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlStyle : String {

        public static var tag: Int {
            40227
        }

        case Standard = "0"
        case Net = "1"
        case StandardfNet = "2"
    }

    public enum LegPaymentStreamNonDeliverableSettlReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40228
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40229
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentSettls : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40230
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40231
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40232
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentSettlPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40233
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40234
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlPartyIDSource : String {

        public static var tag: Int {
            40235
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum PaymentSettlPartyRole : String {

        public static var tag: Int {
            40236
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum PaymentSettlPartyRoleQualifier : String {

        public static var tag: Int {
            40237
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum NoPaymentSettlPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40238
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40239
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSettlPartySubIDType : String {

        public static var tag: Int {
            40240
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoLegStreams : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40241
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamType : String {

        public static var tag: Int {
            40242
        }

        case PaymentCashSettlement = "0"
        case PhysicalDelivery = "1"
    }

    public enum LegStreamDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40243
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamPaySide : String {

        public static var tag: Int {
            40244
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegStreamReceiveSide : String {

        public static var tag: Int {
            40245
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegStreamNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40246
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40247
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40248
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamEffectiveDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40249
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamEffectiveDateBusinessDayConvention : String {

        public static var tag: Int {
            40250
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegStreamEffectiveDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40251
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamEffectiveDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40252
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamEffectiveDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40253
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamEffectiveDateOffsetUnit : String {

        public static var tag: Int {
            40254
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegStreamEffectiveDateOffsetDayType : String {

        public static var tag: Int {
            40255
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegStreamEffectiveDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40256
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamTerminationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40257
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamTerminationDateBusinessDayConvention : String {

        public static var tag: Int {
            40258
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegStreamTerminationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40259
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamTerminationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40260
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamTerminationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40261
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamTerminationDateOffsetUnit : String {

        public static var tag: Int {
            40262
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegStreamTerminationDateOffsetDayType : String {

        public static var tag: Int {
            40263
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegStreamTerminationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40264
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationPeriodBusinessDayConvention : String {

        public static var tag: Int {
            40265
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegStreamCalculationPeriodBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40266
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamFirstPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40267
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamFirstPeriodStartDateBusinessDayConvention : String {

        public static var tag: Int {
            40268
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegStreamFirstPeriodStartDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40269
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamFirstPeriodStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40270
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamFirstRegularPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40271
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamFirstCompoundingPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40272
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamLastRegularPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40273
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40274
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationFrequencyUnit : String {

        public static var tag: Int {
            40275
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegStreamCalculationRollConvention : String {

        public static var tag: Int {
            40276
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoCashSettlDealers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40277
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40278
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamType : String {

        public static var tag: Int {
            40279
        }

        case Periodic = "0"
        case Initial = "1"
        case Single = "2"
        case Dividend = "3"
        case Interest = "4"
        case DividendReturn = "5"
        case PriceReturn = "6"
        case TotalReturn = "7"
        case Variance = "8"
        case Correlation = "9"
    }

    public enum LegPaymentStreamMarketRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40280
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamDelayIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40281
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40282
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamDayCount : String {

        public static var tag: Int {
            40283
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum LegPaymentStreamAccrualDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40284
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamDiscountType : String {

        public static var tag: Int {
            40285
        }

        case Standard = "0"
        case FRA = "1"
    }

    public enum LegPaymentStreamDiscountRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40286
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamDiscountRateDayCount : String {

        public static var tag: Int {
            40287
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum LegPaymentStreamCompoundingMethod : String {

        public static var tag: Int {
            40288
        }

        case None = "0"
        case Flat = "1"
        case Straight = "2"
        case SpreadExclusive = "3"
    }

    public enum LegPaymentStreamInitialPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40289
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInterimPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40290
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40291
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            40292
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStreamPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40293
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40294
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentFrequencyUnit : String {

        public static var tag: Int {
            40295
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Term = "T"
    }

    public enum LegPaymentStreamPaymentRollConvention : String {

        public static var tag: Int {
            40296
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum LegPaymentStreamFirstPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40297
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLastRegularPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40298
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40299
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40300
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentDateOffsetUnit : String {

        public static var tag: Int {
            40301
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamPaymentDateOffsetDayType : String {

        public static var tag: Int {
            40302
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamResetDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40303
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamResetDateBusinessDayConvention : String {

        public static var tag: Int {
            40304
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStreamResetDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40305
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamResetFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40306
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamResetFrequencyUnit : String {

        public static var tag: Int {
            40307
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegPaymentStreamResetWeeklyRollConvention : String {

        public static var tag: Int {
            40308
        }

        case Monday = "MON"
        case Tuesday = "TUE"
        case Wednesday = "WED"
        case Thursday = "THU"
        case Friday = "FRI"
        case Saturday = "SAT"
        case Sunday = "SUN"
    }

    public enum LegPaymentStreamInitialFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40309
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInitialFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40310
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStreamInitialFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40311
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInitialFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40312
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInitialFixingDateOffsetUnit : String {

        public static var tag: Int {
            40313
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamInitialFixingDateOffsetDayType : String {

        public static var tag: Int {
            40314
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamInitialFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40315
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40316
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40317
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStreamFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40318
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40319
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixingDateOffsetUnit : String {

        public static var tag: Int {
            40320
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamFixingDateOffsetDayType : String {

        public static var tag: Int {
            40321
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40322
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateCutoffDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40323
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateCutoffDateOffsetUnit : String {

        public static var tag: Int {
            40324
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamRateCutoffDateOffsetDayType : String {

        public static var tag: Int {
            40325
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40326
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40327
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateOrAmountCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40328
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFutureValueNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40329
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFutureValueDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40330
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40331
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndexSource : String {

        public static var tag: Int {
            40332
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum LegPaymentStreamRateIndexCurveUnit : String {

        public static var tag: Int {
            40333
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40334
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40335
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40336
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateSpreadPositionType : String {

        public static var tag: Int {
            40337
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegPaymentStreamRateTreatment : String {

        public static var tag: Int {
            40338
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum LegPaymentStreamCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40339
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCapRateBuySide : String {

        public static var tag: Int {
            40340
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamCapRateSellSide : String {

        public static var tag: Int {
            40341
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40342
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFloorRateBuySide : String {

        public static var tag: Int {
            40343
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamFloorRateSellSide : String {

        public static var tag: Int {
            40344
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40345
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalRateRoundingDirection : String {

        public static var tag: Int {
            40346
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum LegPaymentStreamFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40347
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamAveragingMethod : String {

        public static var tag: Int {
            40348
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum LegPaymentStreamNegativeRateTreatment : String {

        public static var tag: Int {
            40349
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum LegPaymentStreamInflationLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40350
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInflationLagUnit : String {

        public static var tag: Int {
            40351
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamInflationLagDayType : String {

        public static var tag: Int {
            40352
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamInflationInterpolationMethod : String {

        public static var tag: Int {
            40353
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum LegPaymentStreamInflationIndexSource : String {

        public static var tag: Int {
            40354
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum LegPaymentStreamInflationPublicationSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40355
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInflationInitialIndexLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40356
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInflationFallbackBondApplicable : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40357
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFRADiscounting : String {

        public static var tag: Int {
            40358
        }

        case None = "0"
        case ISDA = "1"
        case AFMA = "2"
    }

    public enum LegPaymentStreamNonDeliverableRefCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40359
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention : String {

        public static var tag: Int {
            40360
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStreamNonDeliverableFixingDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40361
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamNonDeliverableFixingDatesRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40362
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40363
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamNonDeliverableFixingDatesOffsetUnit : String {

        public static var tag: Int {
            40364
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamNonDeliverableFixingDatesOffsetDayType : String {

        public static var tag: Int {
            40365
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegSettlRateFallbackRateSource : String {

        public static var tag: Int {
            40366
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum NoLegNonDeliverableFixingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40367
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegNonDeliverableFixingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40368
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegNonDeliverableFixingDateType : String {

        public static var tag: Int {
            40369
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegSettlRateFallbackReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40370
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamNonDeliverableSettlRateSource : String {

        public static var tag: Int {
            40371
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum PaymentStreamNonDeliverableSettlReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40372
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlRateFallbackRateSource : String {

        public static var tag: Int {
            40373
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum NoLegPaymentSchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40374
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleType : String {

        public static var tag: Int {
            40375
        }

        case Notional = "0"
        case CashFlow = "1"
        case FXLinkedNotional = "2"
        case FixedRate = "3"
        case FutureValueNotional = "4"
        case KnownAmount = "5"
        case FloatingRateMultiplier = "6"
        case Spread = "7"
        case CapRate = "8"
        case FloorRate = "9"
        case NonDeliverableSettlPaymentDates = "10"
        case NonDeliverableSettlCalculationDates = "11"
        case NonDeliverableFXFixingDates = "12"
        case SettlPeriodNotnl = "13"
        case SettlPeriodPx = "14"
        case CalcPeriod = "15"
        case DividendAccrualRateMultiplier = "16"
        case DividendAccrualRateSpread = "17"
        case DividendAccrualCapRate = "18"
        case DividendAccrualFloorRate = "19"
        case CompoundingRateMultiplier = "20"
        case CompoundingRateSpread = "21"
        case CompoundingCapRate = "22"
        case CompoundingFloorRate = "23"
    }

    public enum LegPaymentScheduleStubType : String {

        public static var tag: Int {
            40376
        }

        case Initial = "0"
        case Final = "1"
        case CompoundingInitial = "2"
        case CompoundingFinal = "3"
    }

    public enum LegPaymentScheduleStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40377
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40378
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentSchedulePaySide : String {

        public static var tag: Int {
            40379
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegPaymentScheduleReceiveSide : String {

        public static var tag: Int {
            40380
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegPaymentScheduleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40381
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40382
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40383
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40384
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40385
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateSpreadPositionType : String {

        public static var tag: Int {
            40386
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegPaymentScheduleRateTreatment : String {

        public static var tag: Int {
            40387
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum LegPaymentScheduleFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40388
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixedCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40389
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleStepFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40390
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleStepFrequencyUnit : String {

        public static var tag: Int {
            40391
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegPaymentScheduleStepOffsetValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40392
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleStepRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40393
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleStepOffsetRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40394
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleStepRelativeTo : String {

        public static var tag: Int {
            40395
        }

        case Initial = "0"
        case Previous = "1"
    }

    public enum LegPaymentScheduleFixingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40396
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40397
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40398
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40399
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentScheduleFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40400
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40401
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingDateOffsetUnit : String {

        public static var tag: Int {
            40402
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentScheduleFixingDateOffsetDayType : String {

        public static var tag: Int {
            40403
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentScheduleFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40404
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40405
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40406
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleInterimExchangePaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40407
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleInterimExchangeDatesBusinessDayConvention : String {

        public static var tag: Int {
            40408
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentScheduleInterimExchangeDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40409
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleInterimExchangeDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40410
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleInterimExchangeDatesOffsetUnit : String {

        public static var tag: Int {
            40411
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentScheduleInterimExchangeDatesOffsetDayType : String {

        public static var tag: Int {
            40412
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentScheduleInterimExchangeDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40413
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentScheduleRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40414
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateSource : String {

        public static var tag: Int {
            40415
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum LegPaymentScheduleRateSourceType : String {

        public static var tag: Int {
            40416
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum LegPaymentScheduleReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40417
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStubs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40418
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubType : String {

        public static var tag: Int {
            40419
        }

        case Initial = "0"
        case Final = "1"
        case CompoundingInitial = "2"
        case CompoundingFinal = "3"
    }

    public enum LegPaymentStubLength : String {

        public static var tag: Int {
            40420
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegPaymentStubRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40421
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40422
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubFixedCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40423
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40424
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndexSource : String {

        public static var tag: Int {
            40425
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum LegPaymentStubIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40426
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndexCurveUnit : String {

        public static var tag: Int {
            40427
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStubIndexRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40428
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndexRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40429
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndexRateSpreadPositionType : String {

        public static var tag: Int {
            40430
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegPaymentStubIndexRateTreatment : String {

        public static var tag: Int {
            40431
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum LegPaymentStubIndexCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40432
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndexCapRateBuySide : String {

        public static var tag: Int {
            40433
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStubIndexCapRateSellSide : String {

        public static var tag: Int {
            40434
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStubIndexFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40435
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndexFloorRateBuySide : String {

        public static var tag: Int {
            40436
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStubIndexFloorRateSellSide : String {

        public static var tag: Int {
            40437
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStubIndex2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40438
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndex2Source : String {

        public static var tag: Int {
            40439
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum LegPaymentStubIndex2CurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40440
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndex2CurveUnit : String {

        public static var tag: Int {
            40441
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStubIndex2RateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40442
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndex2RateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40443
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndex2RateSpreadPositionType : String {

        public static var tag: Int {
            40444
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegPaymentStubIndex2RateTreatment : String {

        public static var tag: Int {
            40445
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum LegPaymentStubIndex2CapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40446
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubIndex2FloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40447
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40448
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionType : String {

        public static var tag: Int {
            40449
        }

        case MandatoryEarlyTermination = "0"
        case OptionalEarlyTermination = "1"
        case Cancelable = "2"
        case Extendable = "3"
        case MutualEarlyTermination = "4"
        case Evergreen = "5"
        case Callable = "6"
        case Puttable = "7"
    }

    public enum LegProvisionDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40450
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionDateBusinessDayConvention : String {

        public static var tag: Int {
            40451
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegProvisionDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40452
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40453
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionDateTenorPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40454
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionDateTenorUnit : String {

        public static var tag: Int {
            40455
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionCalculationAgent : String {

        public static var tag: Int {
            40456
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum LegProvisionOptionSinglePartyBuyerSide : String {

        public static var tag: Int {
            40457
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegProvisionOptionSinglePartySellerSide : String {

        public static var tag: Int {
            40458
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegProvisionOptionExerciseStyle : String {

        public static var tag: Int {
            40459
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum LegProvisionOptionExerciseMultipleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40460
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseMinimumNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40461
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseMaximumNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40462
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionMinimumNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40463
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionMaximumNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40464
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseConfirmation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40465
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlMethod : String {

        public static var tag: Int {
            40466
        }

        case CashPrice = "0"
        case CashPriceAlternate = "1"
        case ParYieldCurveAdjusted = "2"
        case ZeroCouponYieldCurveAdjusted = "3"
        case ParYieldCurveUnadjusted = "4"
        case CrossCurrency = "5"
        case CollateralizedPrice = "6"
    }

    public enum LegProvisionCashSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40467
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlCurrency2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40468
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlQuoteType : String {

        public static var tag: Int {
            40469
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
        case ExercisingPartyPays = "3"
    }

    public enum LegProvisionCashSettlQuoteSource : String {

        public static var tag: Int {
            40470
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum BusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40471
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40472
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionCashSettlPaymentDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40473
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40474
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDateType : String {

        public static var tag: Int {
            40475
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegProvisionOptionExerciseBusinessDayConvention : String {

        public static var tag: Int {
            40476
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegProvisionOptionExerciseBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40477
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseEarliestDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40478
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseEarliestDateOffsetUnit : String {

        public static var tag: Int {
            40479
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionOptionExerciseFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40480
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseFrequencyUnit : String {

        public static var tag: Int {
            40481
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegProvisionOptionExerciseStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40482
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40483
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40484
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseStartDateOffsetUnit : String {

        public static var tag: Int {
            40485
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionOptionExerciseStartDateOffsetDayType : String {

        public static var tag: Int {
            40486
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegProvisionOptionExerciseStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40487
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExercisePeriodSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40488
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseBoundsFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40489
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseBoundsLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40490
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseEarliestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40491
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseEarliestTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40492
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseLatestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40493
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseLatestTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40494
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionOptionExerciseFixedDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40495
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseFixedDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40496
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExerciseFixedDateType : String {

        public static var tag: Int {
            40497
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegProvisionOptionExpirationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40498
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExpirationDateBusinessDayConvention : String {

        public static var tag: Int {
            40499
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegProvisionOptionExpirationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40500
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExpirationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40501
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExpirationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40502
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExpirationDateOffsetUnit : String {

        public static var tag: Int {
            40503
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionOptionExpirationDateOffsetDayType : String {

        public static var tag: Int {
            40504
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegProvisionOptionExpirationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40505
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40506
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionExpirationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40507
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionRelevantUnderlyingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40508
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention : String {

        public static var tag: Int {
            40509
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegProvisionOptionRelevantUnderlyingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40510
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionRelevantUnderlyingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40511
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionRelevantUnderlyingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40512
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionOptionRelevantUnderlyingDateOffsetUnit : String {

        public static var tag: Int {
            40513
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionOptionRelevantUnderlyingDateOffsetDayType : String {

        public static var tag: Int {
            40514
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegProvisionOptionRelevantUnderlyingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40515
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            40516
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegProvisionCashSettlPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40517
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40518
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40519
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDateOffsetUnit : String {

        public static var tag: Int {
            40520
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionCashSettlPaymentDateOffsetDayType : String {

        public static var tag: Int {
            40521
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegProvisionCashSettlPaymentDateRangeFirst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40522
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlPaymentDateRangeLast : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40523
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlValueTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40524
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlValueTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40525
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlValueDateBusinessDayConvention : String {

        public static var tag: Int {
            40526
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegProvisionCashSettlValueDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40527
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlValueDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40528
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlValueDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40529
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlValueDateOffsetUnit : String {

        public static var tag: Int {
            40530
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProvisionCashSettlValueDateOffsetDayType : String {

        public static var tag: Int {
            40531
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegProvisionCashSettlValueDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40532
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40533
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40534
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionPartyIDSource : String {

        public static var tag: Int {
            40535
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum LegProvisionPartyRole : String {

        public static var tag: Int {
            40536
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoLegProvisionPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40537
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40538
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionPartySubIDType : String {

        public static var tag: Int {
            40539
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoUnderlyingStreams : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40540
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamType : String {

        public static var tag: Int {
            40541
        }

        case PaymentCashSettlement = "0"
        case PhysicalDelivery = "1"
    }

    public enum UnderlyingStreamDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40542
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamPaySide : String {

        public static var tag: Int {
            40543
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingStreamReceiveSide : String {

        public static var tag: Int {
            40544
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingStreamNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40545
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40546
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40547
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamTerminationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40548
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamTerminationDateBusinessDayConvention : String {

        public static var tag: Int {
            40549
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingStreamTerminationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40550
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamTerminationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40551
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamTerminationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40552
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamTerminationDateOffsetUnit : String {

        public static var tag: Int {
            40553
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingStreamTerminationDateOffsetDayType : String {

        public static var tag: Int {
            40554
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingStreamTerminationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40555
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationPeriodBusinessDayConvention : String {

        public static var tag: Int {
            40556
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingStreamCalculationPeriodBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40557
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamFirstPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40558
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamFirstPeriodStartDateBusinessDayConvention : String {

        public static var tag: Int {
            40559
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingStreamFirstPeriodStartDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40560
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamFirstPeriodStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40561
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamFirstRegularPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40562
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40563
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamLastRegularPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40564
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40565
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationFrequencyUnit : String {

        public static var tag: Int {
            40566
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingStreamCalculationRollConvention : String {

        public static var tag: Int {
            40567
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum UnderlyingPaymentStreamType : String {

        public static var tag: Int {
            40568
        }

        case Periodic = "0"
        case Initial = "1"
        case Single = "2"
        case Dividend = "3"
        case Interest = "4"
        case DividendReturn = "5"
        case PriceReturn = "6"
        case TotalReturn = "7"
        case Variance = "8"
        case Correlation = "9"
    }

    public enum UnderlyingPaymentStreamMarketRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40569
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamDelayIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40570
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40571
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamDayCount : String {

        public static var tag: Int {
            40572
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum UnderlyingPaymentStreamAccrualDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40573
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamDiscountType : String {

        public static var tag: Int {
            40574
        }

        case Standard = "0"
        case FRA = "1"
    }

    public enum UnderlyingPaymentStreamDiscountRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40575
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamDiscountRateDayCount : String {

        public static var tag: Int {
            40576
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum UnderlyingPaymentStreamCompoundingMethod : String {

        public static var tag: Int {
            40577
        }

        case None = "0"
        case Flat = "1"
        case Straight = "2"
        case SpreadExclusive = "3"
    }

    public enum UnderlyingPaymentStreamInitialPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40578
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInterimPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40579
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40580
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            40581
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStreamPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40582
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40583
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentFrequencyUnit : String {

        public static var tag: Int {
            40584
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Term = "T"
    }

    public enum UnderlyingPaymentStreamPaymentRollConvention : String {

        public static var tag: Int {
            40585
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum UnderlyingPaymentStreamFirstPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40586
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40587
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40588
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40589
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentDateOffsetUnit : String {

        public static var tag: Int {
            40590
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamPaymentDateOffsetDayType : String {

        public static var tag: Int {
            40591
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamResetDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40592
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamResetDateBusinessDayConvention : String {

        public static var tag: Int {
            40593
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStreamResetDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40594
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamResetFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40595
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamResetFrequencyUnit : String {

        public static var tag: Int {
            40596
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingPaymentStreamResetWeeklyRollConvention : String {

        public static var tag: Int {
            40597
        }

        case Monday = "MON"
        case Tuesday = "TUE"
        case Wednesday = "WED"
        case Thursday = "THU"
        case Friday = "FRI"
        case Saturday = "SAT"
        case Sunday = "SUN"
    }

    public enum UnderlyingPaymentStreamInitialFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40598
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40599
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStreamInitialFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40600
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInitialFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40601
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInitialFixingDateOffsetUnit : String {

        public static var tag: Int {
            40602
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamInitialFixingDateOffsetDayType : String {

        public static var tag: Int {
            40603
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamInitialFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40604
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40605
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40606
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStreamFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40607
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40608
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixingDateOffsetUnit : String {

        public static var tag: Int {
            40609
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamFixingDateOffsetDayType : String {

        public static var tag: Int {
            40610
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40611
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateCutoffDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40612
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateCutoffDateOffsetUnit : String {

        public static var tag: Int {
            40613
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamRateCutoffDateOffsetDayType : String {

        public static var tag: Int {
            40614
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40615
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40616
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateOrAmountCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40617
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFutureValueNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40618
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFutureValueDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40619
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40620
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndexSource : String {

        public static var tag: Int {
            40621
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum UnderlyingPaymentStreamRateIndexCurveUnit : String {

        public static var tag: Int {
            40622
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40623
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40624
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40625
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateSpreadPositionType : String {

        public static var tag: Int {
            40626
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingPaymentStreamRateTreatment : String {

        public static var tag: Int {
            40627
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum UnderlyingPaymentStreamCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40628
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCapRateBuySide : String {

        public static var tag: Int {
            40629
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamCapRateSellSide : String {

        public static var tag: Int {
            40630
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40631
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFloorRateBuySide : String {

        public static var tag: Int {
            40632
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamFloorRateSellSide : String {

        public static var tag: Int {
            40633
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40634
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalRateRoundingDirection : String {

        public static var tag: Int {
            40635
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum UnderlyingPaymentStreamFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40636
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamAveragingMethod : String {

        public static var tag: Int {
            40637
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum UnderlyingPaymentStreamNegativeRateTreatment : String {

        public static var tag: Int {
            40638
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum UnderlyingPaymentStreamInflationLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40639
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInflationLagUnit : String {

        public static var tag: Int {
            40640
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamInflationLagDayType : String {

        public static var tag: Int {
            40641
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamInflationInterpolationMethod : String {

        public static var tag: Int {
            40642
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum UnderlyingPaymentStreamInflationIndexSource : String {

        public static var tag: Int {
            40643
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum UnderlyingPaymentStreamInflationPublicationSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40644
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInflationInitialIndexLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40645
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInflationFallbackBondApplicable : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40646
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFRADiscounting : String {

        public static var tag: Int {
            40647
        }

        case None = "0"
        case ISDA = "1"
        case AFMA = "2"
    }

    public enum UnderlyingPaymentStreamNonDeliverableRefCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40648
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention : String {

        public static var tag: Int {
            40649
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40650
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40651
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40652
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit : String {

        public static var tag: Int {
            40653
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType : String {

        public static var tag: Int {
            40654
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum SettlRateFallbackReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40655
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingNonDeliverableFixingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40656
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNonDeliverableFixingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40657
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNonDeliverableFixingDateType : String {

        public static var tag: Int {
            40658
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoUnderlyingSettlRateFallbacks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40659
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlRatePostponementMaximumDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40660
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamNonDeliverableSettlRateSource : String {

        public static var tag: Int {
            40661
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum UnderlyingSettlRatePostponementSurvey : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40662
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlRatePostponementCalculationAgent : String {

        public static var tag: Int {
            40663
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum NoUnderlyingPaymentSchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40664
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleType : String {

        public static var tag: Int {
            40665
        }

        case Notional = "0"
        case CashFlow = "1"
        case FXLinkedNotional = "2"
        case FixedRate = "3"
        case FutureValueNotional = "4"
        case KnownAmount = "5"
        case FloatingRateMultiplier = "6"
        case Spread = "7"
        case CapRate = "8"
        case FloorRate = "9"
        case NonDeliverableSettlPaymentDates = "10"
        case NonDeliverableSettlCalculationDates = "11"
        case NonDeliverableFXFixingDates = "12"
        case SettlPeriodNotnl = "13"
        case SettlPeriodPx = "14"
        case CalcPeriod = "15"
        case DividendAccrualRateMultiplier = "16"
        case DividendAccrualRateSpread = "17"
        case DividendAccrualCapRate = "18"
        case DividendAccrualFloorRate = "19"
        case CompoundingRateMultiplier = "20"
        case CompoundingRateSpread = "21"
        case CompoundingCapRate = "22"
        case CompoundingFloorRate = "23"
    }

    public enum UnderlyingPaymentScheduleStubType : String {

        public static var tag: Int {
            40666
        }

        case Initial = "0"
        case Final = "1"
        case CompoundingInitial = "2"
        case CompoundingFinal = "3"
    }

    public enum UnderlyingPaymentScheduleStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40667
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40668
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentSchedulePaySide : String {

        public static var tag: Int {
            40669
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingPaymentScheduleReceiveSide : String {

        public static var tag: Int {
            40670
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingPaymentScheduleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40671
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40672
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40673
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40674
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40675
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateSpreadPositionType : String {

        public static var tag: Int {
            40676
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingPaymentScheduleRateTreatment : String {

        public static var tag: Int {
            40677
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum UnderlyingPaymentScheduleFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40678
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixedCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40679
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleStepFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40680
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleStepFrequencyUnit : String {

        public static var tag: Int {
            40681
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingPaymentScheduleStepOffsetValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40682
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleStepRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40683
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleStepOffsetRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40684
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleStepRelativeTo : String {

        public static var tag: Int {
            40685
        }

        case Initial = "0"
        case Previous = "1"
    }

    public enum UnderlyingPaymentScheduleFixingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40686
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40687
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40688
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn : String {

        public static var tag: Int {
            40689
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentScheduleFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40690
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40691
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingDateOffsetUnit : String {

        public static var tag: Int {
            40692
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentScheduleFixingDateOffsetDayType : String {

        public static var tag: Int {
            40693
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentScheduleFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40694
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40695
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40696
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40697
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention : String {

        public static var tag: Int {
            40698
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40699
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40700
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit : String {

        public static var tag: Int {
            40701
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType : String {

        public static var tag: Int {
            40702
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentScheduleInterimExchangeDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40703
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentScheduleRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40704
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateSource : String {

        public static var tag: Int {
            40705
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum UnderlyingPaymentScheduleRateSourceType : String {

        public static var tag: Int {
            40706
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum UnderlyingPaymentScheduleReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40707
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStubs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40708
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubType : String {

        public static var tag: Int {
            40709
        }

        case Initial = "0"
        case Final = "1"
        case CompoundingInitial = "2"
        case CompoundingFinal = "3"
    }

    public enum UnderlyingPaymentStubLength : String {

        public static var tag: Int {
            40710
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingPaymentStubRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40711
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40712
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubFixedCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40713
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40714
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndexSource : String {

        public static var tag: Int {
            40715
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum UnderlyingPaymentStubIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40716
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndexCurveUnit : String {

        public static var tag: Int {
            40717
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStubIndexRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40718
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndexRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40719
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndexRateSpreadPositionType : String {

        public static var tag: Int {
            40720
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingPaymentStubIndexRateTreatment : String {

        public static var tag: Int {
            40721
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum UnderlyingPaymentStubIndexCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40722
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndexCapRateBuySide : String {

        public static var tag: Int {
            40723
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStubIndexCapRateSellSide : String {

        public static var tag: Int {
            40724
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStubIndexFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40725
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndexFloorRateBuySide : String {

        public static var tag: Int {
            40726
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStubIndexFloorRateSellSide : String {

        public static var tag: Int {
            40727
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStubIndex2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40728
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndex2Source : String {

        public static var tag: Int {
            40729
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum UnderlyingPaymentStubIndex2CurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40730
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndex2CurveUnit : String {

        public static var tag: Int {
            40731
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStubIndex2RateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40732
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndex2RateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40733
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndex2RateSpreadPositionType : String {

        public static var tag: Int {
            40734
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingPaymentStubIndex2RateTreatment : String {

        public static var tag: Int {
            40735
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum UnderlyingPaymentStubIndex2CapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40736
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubIndex2FloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40737
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamType : String {

        public static var tag: Int {
            40738
        }

        case Periodic = "0"
        case Initial = "1"
        case Single = "2"
        case Dividend = "3"
        case Interest = "4"
        case DividendReturn = "5"
        case PriceReturn = "6"
        case TotalReturn = "7"
        case Variance = "8"
        case Correlation = "9"
    }

    public enum PaymentStreamMarketRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40739
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamDelayIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40740
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40741
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamDayCount : String {

        public static var tag: Int {
            40742
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum PaymentStreamAccrualDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40743
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamDiscountType : String {

        public static var tag: Int {
            40744
        }

        case Standard = "0"
        case FRA = "1"
    }

    public enum PaymentStreamDiscountRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40745
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamDiscountRateDayCount : String {

        public static var tag: Int {
            40746
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum PaymentStreamCompoundingMethod : String {

        public static var tag: Int {
            40747
        }

        case None = "0"
        case Flat = "1"
        case Straight = "2"
        case SpreadExclusive = "3"
    }

    public enum PaymentStreamInitialPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40748
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInterimPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40749
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalPrincipalExchangeIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40750
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            40751
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStreamPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40752
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40753
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentFrequencyUnit : String {

        public static var tag: Int {
            40754
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Term = "T"
    }

    public enum PaymentStreamPaymentRollConvention : String {

        public static var tag: Int {
            40755
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum PaymentStreamFirstPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40756
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLastRegularPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40757
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40758
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40759
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentDateOffsetUnit : String {

        public static var tag: Int {
            40760
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamResetDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40761
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamResetDateBusinessDayConvention : String {

        public static var tag: Int {
            40762
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStreamResetDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40763
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamResetFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40764
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamResetFrequencyUnit : String {

        public static var tag: Int {
            40765
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum PaymentStreamResetWeeklyRollConvention : String {

        public static var tag: Int {
            40766
        }

        case Monday = "MON"
        case Tuesday = "TUE"
        case Wednesday = "WED"
        case Thursday = "THU"
        case Friday = "FRI"
        case Saturday = "SAT"
        case Sunday = "SUN"
    }

    public enum PaymentStreamInitialFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40767
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInitialFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40768
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStreamInitialFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40769
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInitialFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40770
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInitialFixingDateOffsetUnit : String {

        public static var tag: Int {
            40771
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamInitialFixingDateOffsetDayType : String {

        public static var tag: Int {
            40772
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamInitialFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40773
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40774
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40775
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStreamFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40776
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40777
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixingDateOffsetUnit : String {

        public static var tag: Int {
            40778
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamFixingDateOffsetDayType : String {

        public static var tag: Int {
            40779
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40780
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateCutoffDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40781
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateCutoffDateOffsetUnit : String {

        public static var tag: Int {
            40782
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamRateCutoffDateOffsetDayType : String {

        public static var tag: Int {
            40783
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40784
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40785
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateOrAmountCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40786
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFutureValueNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40787
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFutureValueDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40788
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40789
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndexSource : String {

        public static var tag: Int {
            40790
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum PaymentStreamRateIndexCurveUnit : String {

        public static var tag: Int {
            40791
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40792
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40793
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40794
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateSpreadPositionType : String {

        public static var tag: Int {
            40795
        }

        case Short = "0"
        case Long = "1"
    }

    public enum PaymentStreamRateTreatment : String {

        public static var tag: Int {
            40796
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum PaymentStreamCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40797
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCapRateBuySide : String {

        public static var tag: Int {
            40798
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamCapRateSellSide : String {

        public static var tag: Int {
            40799
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40800
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFloorRateBuySide : String {

        public static var tag: Int {
            40801
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamFloorRateSellSide : String {

        public static var tag: Int {
            40802
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40803
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalRateRoundingDirection : String {

        public static var tag: Int {
            40804
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum PaymentStreamFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40805
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamAveragingMethod : String {

        public static var tag: Int {
            40806
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum PaymentStreamNegativeRateTreatment : String {

        public static var tag: Int {
            40807
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum PaymentStreamInflationLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40808
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInflationLagUnit : String {

        public static var tag: Int {
            40809
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamInflationLagDayType : String {

        public static var tag: Int {
            40810
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamInflationInterpolationMethod : String {

        public static var tag: Int {
            40811
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum PaymentStreamInflationIndexSource : String {

        public static var tag: Int {
            40812
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum PaymentStreamInflationPublicationSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40813
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInflationInitialIndexLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40814
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInflationFallbackBondApplicable : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40815
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFRADiscounting : String {

        public static var tag: Int {
            40816
        }

        case None = "0"
        case ISDA = "1"
        case AFMA = "2"
    }

    public enum PaymentStreamNonDeliverableRefCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40817
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamNonDeliverableFixingDatesBusinessDayConvention : String {

        public static var tag: Int {
            40818
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStreamNonDeliverableFixingDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40819
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamNonDeliverableFixingDatesRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40820
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamNonDeliverableFixingDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40821
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamNonDeliverableFixingDatesOffsetUnit : String {

        public static var tag: Int {
            40822
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamNonDeliverableFixingDatesOffsetDayType : String {

        public static var tag: Int {
            40823
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamNonDeliverableSettlReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40824
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoNonDeliverableFixingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40825
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NonDeliverableFixingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40826
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NonDeliverableFixingDateType : String {

        public static var tag: Int {
            40827
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoPaymentSchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40828
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleType : String {

        public static var tag: Int {
            40829
        }

        case Notional = "0"
        case CashFlow = "1"
        case FXLinkedNotional = "2"
        case FixedRate = "3"
        case FutureValueNotional = "4"
        case KnownAmount = "5"
        case FloatingRateMultiplier = "6"
        case Spread = "7"
        case CapRate = "8"
        case FloorRate = "9"
        case NonDeliverableSettlPaymentDates = "10"
        case NonDeliverableSettlCalculationDates = "11"
        case NonDeliverableFXFixingDates = "12"
        case SettlPeriodNotnl = "13"
        case SettlPeriodPx = "14"
        case CalcPeriod = "15"
        case DividendAccrualRateMultiplier = "16"
        case DividendAccrualRateSpread = "17"
        case DividendAccrualCapRate = "18"
        case DividendAccrualFloorRate = "19"
        case CompoundingRateMultiplier = "20"
        case CompoundingRateSpread = "21"
        case CompoundingCapRate = "22"
        case CompoundingFloorRate = "23"
    }

    public enum PaymentScheduleStubType : String {

        public static var tag: Int {
            40830
        }

        case Initial = "0"
        case Final = "1"
        case CompoundingInitial = "2"
        case CompoundingFinal = "3"
    }

    public enum PaymentScheduleStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40831
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40832
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSchedulePaySide : String {

        public static var tag: Int {
            40833
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum PaymentScheduleReceiveSide : String {

        public static var tag: Int {
            40834
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum PaymentScheduleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40835
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40836
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40837
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40838
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40839
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateSpreadPositionType : String {

        public static var tag: Int {
            40840
        }

        case Short = "0"
        case Long = "1"
    }

    public enum PaymentScheduleRateTreatment : String {

        public static var tag: Int {
            40841
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum PaymentScheduleFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40842
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixedCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40843
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleStepFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40844
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleStepFrequencyUnit : String {

        public static var tag: Int {
            40845
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum PaymentScheduleStepOffsetValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40846
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleStepRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40847
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleStepOffsetRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40848
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleStepRelativeTo : String {

        public static var tag: Int {
            40849
        }

        case Initial = "0"
        case Previous = "1"
    }

    public enum PaymentScheduleFixingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40850
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40851
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40852
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingDateBusinessDayConvention : String {

        public static var tag: Int {
            40853
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentScheduleFixingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40854
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40855
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingDateOffsetUnit : String {

        public static var tag: Int {
            40856
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentScheduleFixingDateOffsetDayType : String {

        public static var tag: Int {
            40857
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentScheduleFixingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40858
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40859
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40860
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleInterimExchangePaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40861
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleInterimExchangeDatesBusinessDayConvention : String {

        public static var tag: Int {
            40862
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentScheduleInterimExchangeDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40863
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleInterimExchangeDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40864
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleInterimExchangeDatesOffsetUnit : String {

        public static var tag: Int {
            40865
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentScheduleInterimExchangeDatesOffsetDayType : String {

        public static var tag: Int {
            40866
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentScheduleInterimExchangeDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40867
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentScheduleRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40868
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateSource : String {

        public static var tag: Int {
            40869
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum PaymentScheduleRateSourceType : String {

        public static var tag: Int {
            40870
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum PaymentScheduleReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40871
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStubs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40872
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubType : String {

        public static var tag: Int {
            40873
        }

        case Initial = "0"
        case Final = "1"
        case CompoundingInitial = "2"
        case CompoundingFinal = "3"
    }

    public enum PaymentStubLength : String {

        public static var tag: Int {
            40874
        }

        case Short = "0"
        case Long = "1"
    }

    public enum PaymentStubRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40875
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40876
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubFixedCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40877
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40878
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndexSource : String {

        public static var tag: Int {
            40879
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum PaymentStubIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40880
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndexCurveUnit : String {

        public static var tag: Int {
            40881
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStubIndexRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40882
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndexRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40883
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndexRateSpreadPositionType : String {

        public static var tag: Int {
            40884
        }

        case Short = "0"
        case Long = "1"
    }

    public enum PaymentStubIndexRateTreatment : String {

        public static var tag: Int {
            40885
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum PaymentStubIndexCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40886
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndexCapRateBuySide : String {

        public static var tag: Int {
            40887
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStubIndexCapRateSellSide : String {

        public static var tag: Int {
            40888
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStubIndexFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40889
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndexFloorRateBuySide : String {

        public static var tag: Int {
            40890
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStubIndexFloorRateSellSide : String {

        public static var tag: Int {
            40891
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStubIndex2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40892
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndex2Source : String {

        public static var tag: Int {
            40893
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum PaymentStubIndex2CurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40894
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndex2CurveUnit : String {

        public static var tag: Int {
            40895
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStubIndex2RateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40896
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndex2RateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40897
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndex2RateSpreadPositionType : String {

        public static var tag: Int {
            40898
        }

        case Short = "0"
        case Long = "1"
    }

    public enum PaymentStubIndex2RateTreatment : String {

        public static var tag: Int {
            40899
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum PaymentStubIndex2CapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40900
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubIndex2FloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40901
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegSettlRateFallbacks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40902
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlRatePostponementMaximumDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40903
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlRateFallbackRateSource : String {

        public static var tag: Int {
            40904
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum LegSettlRatePostponementSurvey : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40905
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlRatePostponementCalculationAgent : String {

        public static var tag: Int {
            40906
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum StreamEffectiveDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40907
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamEffectiveDateBusinessDayConvention : String {

        public static var tag: Int {
            40908
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum StreamEffectiveDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40909
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamEffectiveDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40910
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamEffectiveDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40911
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamEffectiveDateOffsetUnit : String {

        public static var tag: Int {
            40912
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum StreamEffectiveDateOffsetDayType : String {

        public static var tag: Int {
            40913
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum StreamEffectiveDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40914
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlRateFallbackReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40915
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlValuationSubsequentBusinessDaysOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40916
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlNumOfValuationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40917
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionPartyRoleQualifier : String {

        public static var tag: Int {
            40918
        }

        case FirmOrLegalEntity = "23"
        case Current = "18"
        case New = "19"
        case NaturalPerson = "24"
        case Agency = "0"
        case Principal = "1"
        case RisklessPrincipal = "2"
        case PrimaryTrdRepository = "9"
        case OrigTrdRepository = "10"
        case AddtnlIntlTrdRepository = "11"
        case AddtnlDomesticTrdRepository = "12"
        case RegularTrader = "25"
        case HeadTrader = "26"
        case Supervisor = "27"
        case Algorithm = "22"
        case RelatedExchange = "13"
        case OptionsExchange = "14"
        case SpecifiedExchange = "15"
        case ConstituentExchange = "16"
        case Bank = "7"
        case Hub = "8"
        case TriParty = "28"
        case Lender = "29"
        case GeneralClearingMember = "3"
        case IndividualClearingMember = "4"
        case PreferredMarketMaker = "5"
        case DirectedMarketMaker = "6"
        case DesignatedSponsor = "20"
        case Specialist = "21"
        case ExemptFromTradeReporting = "17"
    }

    public enum PaymentPriceType : String {

        public static var tag: Int {
            40919
        }

        case Percentage = "1"
        case PerUnit = "2"
        case FixedAmount = "3"
        case Discount = "4"
        case Premium = "5"
        case Spread = "6"
        case TEDPrice = "7"
        case TEDYield = "8"
        case Yield = "9"
        case FixedCabinetTradePrice = "10"
        case VariableCabinetTradePrice = "11"
        case PriceSpread = "12"
        case ProductTicksInHalves = "13"
        case ProductTicksInFourths = "14"
        case ProductTicksInEighths = "15"
        case ProductTicksInSixteenths = "16"
        case ProductTicksInThirtySeconds = "17"
        case ProductTicksInSixtyFourths = "18"
        case ProductTicksInOneTwentyEighths = "19"
        case NormalRateRepresentation = "20"
        case InverseRateRepresentation = "21"
        case BasisPoints = "22"
        case UpfrontPoints = "23"
        case InterestRate = "24"
        case PercentageNotional = "25"
    }

    public enum PaymentStreamPaymentDateOffsetDayType : String {

        public static var tag: Int {
            40920
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum BusinessDayConvention : String {

        public static var tag: Int {
            40921
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum DateRollConvention : String {

        public static var tag: Int {
            40922
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoLegBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40923
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40924
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegBusinessDayConvention : String {

        public static var tag: Int {
            40925
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegDateRollConvention : String {

        public static var tag: Int {
            40926
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoLegPaymentScheduleFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40927
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentScheduleInterimExchangeDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40928
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40929
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40930
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamResetDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40931
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamInitialFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40932
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40933
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionCashSettlPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40934
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionCashSettlValueDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40935
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionOptionExerciseBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40936
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionOptionExpirationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40937
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40938
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProvisionDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40939
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamCalculationPeriodBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40940
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamFirstPeriodStartDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40941
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamEffectiveDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40942
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamTerminationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40943
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40944
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentScheduleInterimExchangeDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40945
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamNonDeliverableFixingDatesBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40946
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40947
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamResetDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40948
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamInitialFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40949
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40950
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProtectionTermEventNewsSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40951
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionCashSettlPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40952
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionCashSettlValueDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40953
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionOptionExerciseBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40954
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionOptionExpirationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40955
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionOptionRelevantUnderlyingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40956
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoProvisionDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40957
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamCalculationPeriodBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40958
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamFirstPeriodStartDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40959
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamEffectiveBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40960
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamTerminationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40961
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40962
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40963
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingBusinessDayConvention : String {

        public static var tag: Int {
            40964
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingDateRollConvention : String {

        public static var tag: Int {
            40965
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoUnderlyingPaymentScheduleFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40966
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40967
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40968
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40969
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamResetDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40970
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40971
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40972
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamCalculationPeriodBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40973
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamFirstPeriodStartDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40974
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamEffectiveDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40975
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamTerminationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40976
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentScheduleFixingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40977
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegStreamTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40978
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegStreamText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40979
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegProvisionTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40980
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegProvisionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40981
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedStreamTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40982
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedStreamText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40983
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedPaymentTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40984
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedPaymentText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40985
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedProvisionTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40986
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedProvisionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40987
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingStreamTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40988
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingStreamText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40989
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40990
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40991
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40992
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentSubType : String {

        public static var tag: Int {
            40993
        }

        case Initial = "0"
        case Intermediate = "1"
        case Final = "2"
        case Prepaid = "3"
        case Postpaid = "4"
        case Variable = "5"
        case Fixed = "6"
        case Swap = "7"
        case Conditional = "8"
        case FixedRate = "9"
        case FloatingRate = "10"
    }

    public enum NoComplexEventAveragingObservations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40994
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventAveragingObservationNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40995
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventAveragingWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40996
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventCreditEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40997
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40998
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            40999
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41000
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41001
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventUnit : String {

        public static var tag: Int {
            41002
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ComplexEventCreditEventDayType : String {

        public static var tag: Int {
            41003
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ComplexEventCreditEventRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41004
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventCreditEventQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41005
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventQualifier : String {

        public static var tag: Int {
            41006
        }

        case RestructuringMultipleHoldingObligations = "H"
        case RestructuringMultipleCreditEventNotices = "E"
        case FloatingRateInterestShortfall = "C"
    }

    public enum NoComplexEventPeriodDateTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41007
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPeriodDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41008
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPeriodTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41009
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41010
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventPeriodType : String {

        public static var tag: Int {
            41011
        }

        case AsianOut = "0"
        case AsianIn = "1"
        case BarrierCap = "2"
        case BarrierFloor = "3"
        case KnockOut = "4"
        case KnockIn = "5"
    }

    public enum ComplexEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41012
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41013
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventRateSource : String {

        public static var tag: Int {
            41014
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum ComplexEventRateSourceType : String {

        public static var tag: Int {
            41015
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum ComplexEventReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41016
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41017
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41018
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41019
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41020
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41021
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41022
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventDateOffsetUnit : String {

        public static var tag: Int {
            41023
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ComplexEventDateOffsetDayType : String {

        public static var tag: Int {
            41024
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ComplexEventDateBusinessDayConvention : String {

        public static var tag: Int {
            41025
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum ComplexEventDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41026
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventFixingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41027
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventFixingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41028
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventCreditEventSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41029
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventCreditEventSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41030
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoComplexEventSchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41031
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventScheduleStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41032
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventScheduleEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41033
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventScheduleFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41034
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ComplexEventScheduleFrequencyUnit : String {

        public static var tag: Int {
            41035
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ComplexEventScheduleRollConvention : String {

        public static var tag: Int {
            41036
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoDeliverySchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41037
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleType : String {

        public static var tag: Int {
            41038
        }

        case Notional = "0"
        case Delivery = "1"
        case PhysicalSettlPeriods = "2"
    }

    public enum DeliveryScheduleXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41039
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41040
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41041
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum DeliveryScheduleNotionalCommodityFrequency : String {

        public static var tag: Int {
            41042
        }

        case Term = "0"
        case PerBusinessDay = "1"
        case PerCalculationPeriod = "2"
        case PerSettlPeriod = "3"
        case PerCalendarDay = "4"
        case PerHour = "5"
        case PerMonth = "6"
    }

    public enum DeliveryScheduleNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41043
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliverySchedulePositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41044
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleToleranceUnitOfMeasure : String {

        public static var tag: Int {
            41045
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum DeliveryScheduleToleranceType : String {

        public static var tag: Int {
            41046
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum DeliveryScheduleSettlCountry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41047
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleSettlTimeZone : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41048
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleSettlFlowType : String {

        public static var tag: Int {
            41049
        }

        case AllTimes = "0"
        case OnPeak = "1"
        case OffPeak = "2"
        case Base = "3"
        case BlockHours = "4"
        case Other = "5"
    }

    public enum DeliveryScheduleSettlHolidaysProcessingInstruction : String {

        public static var tag: Int {
            41050
        }

        case DoNotIncludeHolidays = "0"
        case IncludeHolidays = "1"
    }

    public enum NoDeliveryScheduleSettlDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41051
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleSettlDay : String {

        public static var tag: Int {
            41052
        }

        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
        case AllWeekdays = "8"
        case AllDays = "9"
        case AllWeekends = "10"
    }

    public enum DeliveryScheduleSettlTotalHours : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41053
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDeliveryScheduleSettlTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41054
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleSettlStart : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41055
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleSettlEnd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41056
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryScheduleSettlTimeType : String {

        public static var tag: Int {
            41057
        }

        case Hour = "0"
        case Timestamp = "1"
    }

    public enum DeliveryStreamType : String {

        public static var tag: Int {
            41058
        }

        case Periodic = "0"
        case Initial = "1"
        case Single = "2"
    }

    public enum DeliveryStreamPipeline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41059
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamEntryPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41060
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamWithdrawalPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41061
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamDeliveryPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41062
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamDeliveryRestriction : String {

        public static var tag: Int {
            41063
        }

        case Firm = "1"
        case NonFirm = "2"
        case ForceMajeure = "3"
        case SystemFirm = "4"
        case UnitFirm = "5"
    }

    public enum DeliveryStreamDeliveryContingency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41064
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamDeliveryContingentPartySide : String {

        public static var tag: Int {
            41065
        }

        case Buyer = "0"
        case Seller = "1"
    }

    public enum DeliveryStreamDeliverAtSourceIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41066
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamRiskApportionment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41067
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamTitleTransferLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41068
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamTitleTransferCondition : String {

        public static var tag: Int {
            41069
        }

        case Transfers = "0"
        case DoesNotTransfer = "1"
    }

    public enum DeliveryStreamImporterOfRecord : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41070
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41071
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamPositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41072
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamToleranceUnitOfMeasure : String {

        public static var tag: Int {
            41073
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum DeliveryStreamToleranceType : String {

        public static var tag: Int {
            41074
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum DeliveryStreamToleranceOptionSide : String {

        public static var tag: Int {
            41075
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum DeliveryStreamTotalPositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41076
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamTotalNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41077
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamNotionalConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41078
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamTransportEquipment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41079
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamElectingPartySide : String {

        public static var tag: Int {
            41080
        }

        case Buyer = "0"
        case Seller = "1"
    }

    public enum NoDeliveryStreamCycles : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41081
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamCycleDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41082
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedDeliveryStreamCycleDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41083
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedDeliveryStreamCycleDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41084
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDeliveryStreamCommoditySources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41085
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamCommoditySource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41086
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionProvision : String {

        public static var tag: Int {
            41087
        }

        case NotApplicable = "0"
        case Applicable = "1"
        case AsInMasterAgreement = "2"
        case AsInConfirmation = "3"
    }

    public enum MarketDisruptionFallbackProvision : String {

        public static var tag: Int {
            41088
        }

        case MasterAgreement = "0"
        case Confirmation = "1"
    }

    public enum MarketDisruptionMaximumDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41089
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionMaterialityPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41090
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionMinimumFuturesContracts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41091
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMarketDisruptionEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41092
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionEvent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41093
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMarketDisruptionFallbacks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41094
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41095
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoMarketDisruptionFallbackReferencePrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41096
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackUnderlierType : String {

        public static var tag: Int {
            41097
        }

        case Basket = "0"
        case Bond = "1"
        case Cash = "2"
        case Commodity = "3"
        case ConvertibleBond = "4"
        case Equity = "5"
        case ExchangeTradedFund = "6"
        case Future = "7"
        case Index = "8"
        case Loan = "9"
        case Mortgage = "10"
        case MutualFund = "11"
    }

    public enum MarketDisruptionFallbackUnderlierSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41098
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackUnderlierSecurityIDSource : String {

        public static var tag: Int {
            41099
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum MarketDisruptionFallbackUnderlierSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41100
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMarketDisruptionFallbackUnderlierSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41101
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedMarketDisruptionFallbackUnderlierSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41102
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackOpenUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41103
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackBasketCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41104
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MarketDisruptionFallbackBasketDivisor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41105
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExerciseDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41106
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedExerciseDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41107
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedExerciseDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41108
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AutomaticExerciseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41109
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AutomaticExerciseThresholdRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41110
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExerciseConfirmationMethod : String {

        public static var tag: Int {
            41111
        }

        case NotRequired = "0"
        case NonElectronic = "1"
        case Electronic = "2"
        case Unknown = "3"
    }

    public enum ManualNoticeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41112
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum FallbackExerciseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41113
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LimitedRightToConfirmIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41114
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExerciseSplitTicketIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41115
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOptionExerciseBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41116
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41117
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseBusinessDayConvention : String {

        public static var tag: Int {
            41118
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum OptionExerciseEarliestDateOffsetDayType : String {

        public static var tag: Int {
            41119
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum OptionExerciseEarliestDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41120
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseEarliestDateOffsetUnit : String {

        public static var tag: Int {
            41121
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum OptionExerciseFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41122
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseFrequencyUnit : String {

        public static var tag: Int {
            41123
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum OptionExerciseStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41124
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41125
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41126
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseStartDateOffsetUnit : String {

        public static var tag: Int {
            41127
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum OptionExerciseStartDateOffsetDayType : String {

        public static var tag: Int {
            41128
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum OptionExerciseStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41129
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41130
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseNominationDeadline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41131
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41132
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41133
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseEarliestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41134
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseLatestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41135
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41136
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOptionExerciseDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41137
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41138
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseDateType : String {

        public static var tag: Int {
            41139
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoOptionExerciseExpirationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41140
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41141
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationDateBusinessDayConvention : String {

        public static var tag: Int {
            41142
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum OptionExerciseExpirationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41143
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41144
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationDateOffsetUnit : String {

        public static var tag: Int {
            41145
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum OptionExerciseExpirationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41146
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationFrequencyUnit : String {

        public static var tag: Int {
            41147
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum OptionExerciseExpirationRollConvention : String {

        public static var tag: Int {
            41148
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum OptionExerciseExpirationDateOffsetDayType : String {

        public static var tag: Int {
            41149
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum OptionExerciseExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41150
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41151
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoOptionExerciseExpirationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41152
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41153
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionExerciseExpirationDateType : String {

        public static var tag: Int {
            41154
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum PaymentUnitOfMeasure : String {

        public static var tag: Int {
            41155
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41156
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41157
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentDateOffsetUnit : String {

        public static var tag: Int {
            41158
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentDateOffsetDayType : String {

        public static var tag: Int {
            41159
        }

        case Business = "0"
        case Calendar = "1"
        case Commodity = "2"
        case Currency = "3"
        case Exchange = "4"
        case Scheduled = "5"
    }

    public enum PaymentForwardStartType : String {

        public static var tag: Int {
            41160
        }

        case Prepaid = "0"
        case Postpaid = "1"
        case Variable = "2"
        case Fixed = "3"
    }

    public enum NoPaymentScheduleFixingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41161
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingDayOfWeek : String {

        public static var tag: Int {
            41162
        }

        case EveryDay = "0"
        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
    }

    public enum PaymentScheduleFixingDayNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41163
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41164
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41165
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41166
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateUnitOfMeasure : String {

        public static var tag: Int {
            41167
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentScheduleRateConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41168
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleRateSpreadType : String {

        public static var tag: Int {
            41169
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum PaymentScheduleSettlPeriodPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41170
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleSettlPeriodPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41171
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleSettlPeriodPriceUnitOfMeasure : String {

        public static var tag: Int {
            41172
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentScheduleStepUnitOfMeasure : String {

        public static var tag: Int {
            41173
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentScheduleFixingDayDistribution : String {

        public static var tag: Int {
            41174
        }

        case All = "0"
        case First = "1"
        case Last = "2"
        case Penultimate = "3"
    }

    public enum PaymentScheduleFixingDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41175
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41176
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingLagUnit : String {

        public static var tag: Int {
            41177
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentScheduleFixingFirstObservationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41178
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentScheduleFixingFirstObservationDateOffsetUnit : String {

        public static var tag: Int {
            41179
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamFlatRateIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41180
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFlatRateAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41181
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFlatRateCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41182
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamMaximumPaymentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41183
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamMaximumPaymentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41184
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamMaximumTransactionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41185
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamMaximumTransactionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41186
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixedAmountUnitOfMeasure : String {

        public static var tag: Int {
            41187
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentStreamTotalFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41188
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamWorldScaleRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41189
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamContractPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41190
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamContractPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41191
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamPricingBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41192
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPricingBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41193
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndex2CurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41194
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndex2CurveUnit : String {

        public static var tag: Int {
            41195
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamRateIndexLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41196
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndexLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41197
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndexUnitOfMeasure : String {

        public static var tag: Int {
            41198
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentStreamSettlLevel : String {

        public static var tag: Int {
            41199
        }

        case Average = "0"
        case Maximum = "1"
        case Minimum = "2"
        case Cumulative = "3"
    }

    public enum PaymentStreamReferenceLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41200
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamReferenceLevelUnitOfMeasure : String {

        public static var tag: Int {
            41201
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentStreamReferenceLevelEqualsZeroIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41202
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateSpreadCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41203
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateSpreadUnitOfMeasure : String {

        public static var tag: Int {
            41204
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum PaymentStreamRateConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41205
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateSpreadType : String {

        public static var tag: Int {
            41206
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum PaymentStreamLastResetRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41207
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41208
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCalculationLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41209
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCalculationLagUnit : String {

        public static var tag: Int {
            41210
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamFirstObservationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41211
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFirstObservationDateOffsetUnit : String {

        public static var tag: Int {
            41212
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamPricingDayType : String {

        public static var tag: Int {
            41213
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamPricingDayDistribution : String {

        public static var tag: Int {
            41214
        }

        case All = "0"
        case First = "1"
        case Last = "2"
        case Penultimate = "3"
    }

    public enum PaymentStreamPricingDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41215
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPricingBusinessCalendar : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41216
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPricingBusinessDayConvention : String {

        public static var tag: Int {
            41217
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum DeliveryStreamRiskApportionmentSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41218
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamRiskApportionmentSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41219
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamPaymentDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41220
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41221
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPaymentDateType : String {

        public static var tag: Int {
            41222
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum PaymentStreamMasterAgreementPaymentDatesIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41223
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamPricingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41224
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPricingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41225
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPricingDateType : String {

        public static var tag: Int {
            41226
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoPaymentStreamPricingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41227
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamPricingDayOfWeek : String {

        public static var tag: Int {
            41228
        }

        case EveryDay = "0"
        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
    }

    public enum PaymentStreamPricingDayNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41229
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPricingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41230
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PricingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41231
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PricingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41232
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PricingDateBusinessDayConvention : String {

        public static var tag: Int {
            41233
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PricingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41234
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PricingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41235
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PricingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41236
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamAssetAttributes : String {

        public static var tag: Int {
            41237
        }

        case Day = "D"
    }

    public enum StreamAssetAttributeType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41238
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAssetAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41239
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamAssetAttributeLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41240
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamCalculationPeriodDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41241
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationPeriodDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41242
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationPeriodDateType : String {

        public static var tag: Int {
            41243
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum StreamCalculationPeriodDatesXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41244
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationPeriodDatesXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41245
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationBalanceOfFirstPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41246
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationCorrectionPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41247
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCalculationCorrectionUnit : String {

        public static var tag: Int {
            41248
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum NoStreamCommoditySettlBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41249
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41250
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityBase : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41251
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41252
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41253
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySecurityIDSource : String {

        public static var tag: Int {
            41254
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum StreamCommodityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41255
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedStreamCommodityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41256
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedStreamCommodityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41257
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityUnitOfMeasure : String {

        public static var tag: Int {
            41258
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum StreamCommodityCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41259
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41260
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41261
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityRateReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41262
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityRateReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41263
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamDataProvider : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41264
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityPricingType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41265
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityNearbySettlDayPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41266
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityNearbySettlDayUnit : String {

        public static var tag: Int {
            41267
        }

        case Week = "Wk"
        case Month = "Mo"
    }

    public enum StreamCommoditySettlDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41268
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlDateBusinessDayConvention : String {

        public static var tag: Int {
            41269
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum StreamCommoditySettlDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41270
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41271
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlDateRollPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41272
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlDateRollUnit : String {

        public static var tag: Int {
            41273
        }

        case Day = "D"
    }

    public enum StreamCommoditySettlDayType : String {

        public static var tag: Int {
            41274
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum StreamCommodityXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41275
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41276
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamCommodityAltIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41277
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41278
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityAltIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41279
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamCommodityDataSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41280
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityDataSourceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41281
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommodityDataSourceIDType : String {

        public static var tag: Int {
            41282
        }

        case City = "0"
        case Airport = "1"
        case WeatherStation = "2"
        case WeatherIndex = "3"
    }

    public enum NoStreamCommoditySettlDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41283
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlDay : String {

        public static var tag: Int {
            41284
        }

        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
        case AllWeekdays = "8"
        case AllDays = "9"
        case AllWeekends = "10"
    }

    public enum StreamCommoditySettlTotalHours : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41285
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamCommoditySettlTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41286
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlStart : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41287
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlEnd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41288
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoStreamCommoditySettlPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41289
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlCountry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41290
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlTimeZone : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41291
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlFlowType : String {

        public static var tag: Int {
            41292
        }

        case AllTimes = "0"
        case OnPeak = "1"
        case OffPeak = "2"
        case Base = "3"
        case BlockHours = "4"
        case Other = "5"
    }

    public enum StreamCommoditySettlPeriodNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41293
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlPeriodNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41294
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum StreamCommoditySettlPeriodFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41295
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlPeriodFrequencyUnit : String {

        public static var tag: Int {
            41296
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum StreamCommoditySettlPeriodPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41297
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlPeriodPriceUnitOfMeasure : String {

        public static var tag: Int {
            41298
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum StreamCommoditySettlPeriodPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41299
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlHolidaysProcessingInstruction : String {

        public static var tag: Int {
            41300
        }

        case DoNotIncludeHolidays = "0"
        case IncludeHolidays = "1"
    }

    public enum StreamCommoditySettlPeriodXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41301
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlPeriodXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41302
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41303
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentLegRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41304
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamNotionalXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41305
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamNotionalFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41306
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamNotionalFrequencyUnit : String {

        public static var tag: Int {
            41307
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum StreamNotionalCommodityFrequency : String {

        public static var tag: Int {
            41308
        }

        case Term = "0"
        case PerBusinessDay = "1"
        case PerCalculationPeriod = "2"
        case PerSettlPeriod = "3"
        case PerCalendarDay = "4"
        case PerHour = "5"
        case PerMonth = "6"
    }

    public enum StreamNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41309
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum StreamTotalNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41310
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamTotalNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41311
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum NoMandatoryClearingJurisdictions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41312
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MandatoryClearingJurisdiction : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41313
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41314
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlTermXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41315
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegAdditionalTermBondRefs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41316
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41317
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondSecurityIDSource : String {

        public static var tag: Int {
            41318
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum LegAdditionalTermBondDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41319
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegAdditionalTermBondDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41320
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegAdditionalTermBondDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41321
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41322
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41323
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegAdditionalTermBondIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41324
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegAdditionalTermBondIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41325
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondSeniority : String {

        public static var tag: Int {
            41326
        }

        case SeniorSecured = "SD"
        case Senior = "SR"
        case Subordinated = "SB"
        case Junior = "JR"
        case Mezzanine = "MZ"
        case SeniorNonPreferred = "SN"
    }

    public enum LegAdditionalTermBondCouponType : String {

        public static var tag: Int {
            41327
        }

        case Zero = "0"
        case FixedRate = "1"
        case FloatingRate = "2"
        case Structured = "3"
    }

    public enum LegAdditionalTermBondCouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41328
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41329
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondParValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41330
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondCurrentTotalIssuedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41331
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondCouponFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41332
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermBondCouponFrequencyUnit : String {

        public static var tag: Int {
            41333
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegAdditionalTermBondDayCount : String {

        public static var tag: Int {
            41334
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum NoLegAdditionalTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41335
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermConditionPrecedentBondIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41336
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalTermDiscrepancyClauseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41337
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41338
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41339
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingAdditionalTermBondRefs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41340
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41341
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegCashSettlDealers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41342
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlDealer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41343
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegCashSettlTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41344
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41345
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCasSettlValuationFirstBusinessDayOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41346
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlValuationSubsequentBusinessDaysOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41347
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlNumOfValuationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41348
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41349
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41350
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlQuoteMethod : String {

        public static var tag: Int {
            41351
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum LegCashSettlQuoteAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41352
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41353
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlMinimumQuoteAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41354
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlMinimumQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41355
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41356
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41357
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlRecoveryFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41358
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlFixedTermIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41359
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlAccruedInterestIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41360
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlValuationMethod : String {

        public static var tag: Int {
            41361
        }

        case Market = "0"
        case Highest = "1"
        case AverageMarket = "2"
        case AverageHighest = "3"
        case BlendedMarket = "4"
        case BlendedHighest = "5"
        case AverageBlendedMarket = "6"
        case AverageBlendedHighest = "7"
    }

    public enum LegCashSettlTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41362
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventAveragingObservations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41363
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventAveragingObservationNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41364
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventAveragingWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41365
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventCreditEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41366
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41367
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41368
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41369
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41370
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventUnit : String {

        public static var tag: Int {
            41371
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegComplexEventCreditEventDayType : String {

        public static var tag: Int {
            41372
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegComplexEventCreditEventRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41373
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventCreditEventQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41374
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventQualifier : String {

        public static var tag: Int {
            41375
        }

        case RestructuringMultipleHoldingObligations = "H"
        case RestructuringMultipleCreditEventNotices = "E"
        case FloatingRateInterestShortfall = "C"
    }

    public enum NoLegComplexEventPeriodDateTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41376
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPeriodDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41377
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPeriodTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41378
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41379
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventPeriodType : String {

        public static var tag: Int {
            41380
        }

        case AsianOut = "0"
        case AsianIn = "1"
        case BarrierCap = "2"
        case BarrierFloor = "3"
        case KnockOut = "4"
        case KnockIn = "5"
    }

    public enum LegComplexEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41381
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41382
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventRateSource : String {

        public static var tag: Int {
            41383
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum LegComplexEventRateSourceType : String {

        public static var tag: Int {
            41384
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum LegComplexEventReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41385
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEvenReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41386
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41387
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41388
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41389
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41390
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41391
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventDateOffsetUnit : String {

        public static var tag: Int {
            41392
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegComplexEventDateOffsetDayType : String {

        public static var tag: Int {
            41393
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegComplexEventDateBusinessDayConvention : String {

        public static var tag: Int {
            41394
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegComplexEventDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41395
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventFixingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41396
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventFixingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41397
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventCreditEventSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41398
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventCreditEventSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41399
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegComplexEventSchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41400
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventScheduleStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41401
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventScheduleEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41402
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventScheduleFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41403
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegComplexEventScheduleFrequencyUnit : String {

        public static var tag: Int {
            41404
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegComplexEventScheduleRollConvention : String {

        public static var tag: Int {
            41405
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum ProvisionCashSettlQuoteReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41406
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionCashSettlQuoteReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41407
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDeliverySchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41408
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleType : String {

        public static var tag: Int {
            41409
        }

        case Notional = "0"
        case Delivery = "1"
        case PhysicalSettlPeriods = "2"
    }

    public enum LegDeliveryScheduleXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41410
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41411
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41412
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegDeliveryScheduleNotionalCommodityFrequency : String {

        public static var tag: Int {
            41413
        }

        case Term = "0"
        case PerBusinessDay = "1"
        case PerCalculationPeriod = "2"
        case PerSettlPeriod = "3"
        case PerCalendarDay = "4"
        case PerHour = "5"
        case PerMonth = "6"
    }

    public enum LegDeliveryScheduleNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41414
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliverySchedulePositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41415
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleToleranceUnitOfMeasure : String {

        public static var tag: Int {
            41416
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegDeliveryScheduleToleranceType : String {

        public static var tag: Int {
            41417
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum LegDeliveryScheduleSettlCountry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41418
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleSettlTimeZone : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41419
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleSettlFlowType : String {

        public static var tag: Int {
            41420
        }

        case AllTimes = "0"
        case OnPeak = "1"
        case OffPeak = "2"
        case Base = "3"
        case BlockHours = "4"
        case Other = "5"
    }

    public enum LegDeliveryScheduleSettlHolidaysProcessingInstruction : String {

        public static var tag: Int {
            41421
        }

        case DoNotIncludeHolidays = "0"
        case IncludeHolidays = "1"
    }

    public enum NoLegDeliveryScheduleSettlDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41422
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleSettlDay : String {

        public static var tag: Int {
            41423
        }

        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
        case AllWeekdays = "8"
        case AllDays = "9"
        case AllWeekends = "10"
    }

    public enum LegDeliveryScheduleSettlTotalHours : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41424
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDeliveryScheduleSettlTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41425
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleSettlStart : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41426
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleSettlEnd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41427
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryScheduleSettlTimeType : String {

        public static var tag: Int {
            41428
        }

        case Hour = "0"
        case Timestamp = "1"
    }

    public enum LegDeliveryStreamType : String {

        public static var tag: Int {
            41429
        }

        case Periodic = "0"
        case Initial = "1"
        case Single = "2"
    }

    public enum LegDeliveryStreamPipeline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41430
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamEntryPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41431
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamWithdrawalPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41432
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamDeliveryPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41433
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamDeliveryRestriction : String {

        public static var tag: Int {
            41434
        }

        case Firm = "1"
        case NonFirm = "2"
        case ForceMajeure = "3"
        case SystemFirm = "4"
        case UnitFirm = "5"
    }

    public enum LegDeliveryStreamDeliveryContingency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41435
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamDeliveryContingentPartySide : String {

        public static var tag: Int {
            41436
        }

        case Buyer = "0"
        case Seller = "1"
    }

    public enum LegDeliveryStreamDeliverAtSourceIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41437
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamRiskApportionment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41438
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamTitleTransferLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41439
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamTitleTransferCondition : String {

        public static var tag: Int {
            41440
        }

        case Transfers = "0"
        case DoesNotTransfer = "1"
    }

    public enum LegDeliveryStreamImporterOfRecord : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41441
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41442
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamPositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41443
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamToleranceUnitOfMeasure : String {

        public static var tag: Int {
            41444
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegDeliveryStreamToleranceType : String {

        public static var tag: Int {
            41445
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum LegDeliveryStreamToleranceOptionSide : String {

        public static var tag: Int {
            41446
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegDeliveryStreamTotalPositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41447
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamTotalNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41448
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamNotionalConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41449
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamTransportEquipment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41450
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamElectingPartySide : String {

        public static var tag: Int {
            41451
        }

        case Buyer = "0"
        case Seller = "1"
    }

    public enum NoLegStreamAssetAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41452
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamAssetAttributeType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41453
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamAssetAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41454
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamAssetAttributeLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41455
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDeliveryStreamCycles : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41456
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamCycleDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41457
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegDeliveryStreamCycleDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41458
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegDeliveryStreamCycleDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41459
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDeliveryStreamCommoditySources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41460
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamCommoditySource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41461
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionProvision : String {

        public static var tag: Int {
            41462
        }

        case NotApplicable = "0"
        case Applicable = "1"
        case AsInMasterAgreement = "2"
        case AsInConfirmation = "3"
    }

    public enum LegMarketDisruptionFallbackProvision : String {

        public static var tag: Int {
            41463
        }

        case MasterAgreement = "0"
        case Confirmation = "1"
    }

    public enum LegMarketDisruptionMaximumDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41464
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionMaterialityPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41465
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionMinimumFuturesContracts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41466
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegMarketDisruptionEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41467
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionEvent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41468
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegMarketDisruptionFallbacks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41469
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41470
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegMarketDisruptionFallbackReferencePrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41471
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackUnderlierType : String {

        public static var tag: Int {
            41472
        }

        case Basket = "0"
        case Bond = "1"
        case Cash = "2"
        case Commodity = "3"
        case ConvertibleBond = "4"
        case Equity = "5"
        case ExchangeTradedFund = "6"
        case Future = "7"
        case Index = "8"
        case Loan = "9"
        case Mortgage = "10"
        case MutualFund = "11"
    }

    public enum LegMarketDisruptionFallbackUnderlierSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41473
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackUnderlierSecurityIDSource : String {

        public static var tag: Int {
            41474
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum LegMarketDisruptionFallbackUnderlierSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41475
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41476
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41477
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackOpenUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41478
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackBasketCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41479
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMarketDisruptionFallbackBasketDivisor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41480
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExerciseDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41481
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegExerciseDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41482
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegExerciseDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41483
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAutomaticExerciseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41484
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAutomaticExerciseThresholdRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41485
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExerciseConfirmationMethod : String {

        public static var tag: Int {
            41486
        }

        case NotRequired = "0"
        case NonElectronic = "1"
        case Electronic = "2"
        case Unknown = "3"
    }

    public enum LegManualNoticeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41487
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFallbackExerciseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41488
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegLimitRightToConfirmIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41489
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExerciseSplitTicketIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41490
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegOptionExerciseBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41491
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41492
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseBusinessDayConvention : String {

        public static var tag: Int {
            41493
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegOptionExerciseEarliestDateOffsetDayType : String {

        public static var tag: Int {
            41494
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegOptionExerciseEarliestDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41495
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseEarliestDateOffsetUnit : String {

        public static var tag: Int {
            41496
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegOptionExerciseFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41497
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseFrequencyUnit : String {

        public static var tag: Int {
            41498
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegOptionExerciseStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41499
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41500
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41501
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseStartDateOffsetUnit : String {

        public static var tag: Int {
            41502
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegOptionExerciseStartDateOffsetDayType : String {

        public static var tag: Int {
            41503
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegOptionExerciseStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41504
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41505
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseNominationDeadline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41506
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41507
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41508
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseEarliestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41509
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseLatestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41510
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41511
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegOptionExerciseDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41512
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41513
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseDateType : String {

        public static var tag: Int {
            41514
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoLegOptionExerciseExpirationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41515
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41516
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationDateBusinessDayConvention : String {

        public static var tag: Int {
            41517
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegOptionExerciseExpirationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41518
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41519
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationDateOffsetUnit : String {

        public static var tag: Int {
            41520
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegOptionExerciseExpirationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41521
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationFrequencyUnit : String {

        public static var tag: Int {
            41522
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegOptionExerciseExpirationRollConvention : String {

        public static var tag: Int {
            41523
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum LegOptionExerciseExpirationDateOffsetDayType : String {

        public static var tag: Int {
            41524
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegOptionExerciseExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41525
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41526
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegOptionExerciseExpirationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41527
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41528
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionExerciseExpirationDateType : String {

        public static var tag: Int {
            41529
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoLegPaymentScheduleFixingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41530
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingDayOfWeek : String {

        public static var tag: Int {
            41531
        }

        case EveryDay = "0"
        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
    }

    public enum LegPaymentScheduleFixingDayNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41532
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41533
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41534
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41535
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateUnitOfMeasure : String {

        public static var tag: Int {
            41536
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentScheduleRateConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41537
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleRateSpreadType : String {

        public static var tag: Int {
            41538
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum LegPaymentScheduleSettlPeriodPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41539
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleSettlPeriodPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41540
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleSettlPeriodPriceUnitOfMeasure : String {

        public static var tag: Int {
            41541
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentScheduleStepUnitOfMeasure : String {

        public static var tag: Int {
            41542
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentScheduleFixingDayDistribution : String {

        public static var tag: Int {
            41543
        }

        case All = "0"
        case First = "1"
        case Last = "2"
        case Penultimate = "3"
    }

    public enum LegPaymentScheduleFixingDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41544
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41545
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingLagUnit : String {

        public static var tag: Int {
            41546
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentScheduleFixingFirstObservationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41547
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentScheduleFixingFirstObservationDateOffsetUnit : String {

        public static var tag: Int {
            41548
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamFlatRateIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41549
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFlatRateAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41550
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFlatRateCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41551
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamMaximumPaymentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41552
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamMaximumPaymentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41553
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamMaximumTransactionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41554
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamMaximumTransactionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41555
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixedAmountUnitOfMeasure : String {

        public static var tag: Int {
            41556
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentStreamTotalFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41557
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamWorldScaleRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41558
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamContractPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41559
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamContractPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41560
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamPricingBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41561
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPricingBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41562
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndex2CurveUnit : String {

        public static var tag: Int {
            41563
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamRateIndex2CurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41564
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndexLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41565
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndexLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41566
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndexUnitOfMeasure : String {

        public static var tag: Int {
            41567
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentStreamSettlLevel : String {

        public static var tag: Int {
            41568
        }

        case Average = "0"
        case Maximum = "1"
        case Minimum = "2"
        case Cumulative = "3"
    }

    public enum LegPaymentStreamReferenceLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41569
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamReferenceLevelUnitOfMeasure : String {

        public static var tag: Int {
            41570
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentStreamReferenceLevelEqualsZeroIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41571
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateSpreadCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41572
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateSpreadUnitOfMeasure : String {

        public static var tag: Int {
            41573
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegPaymentStreamRateConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41574
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateSpreadType : String {

        public static var tag: Int {
            41575
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum LegPaymentStreamLastResetRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41576
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41577
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCalculationLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41578
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCalculationLagUnit : String {

        public static var tag: Int {
            41579
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamFirstObservationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41580
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFirstObservationDateOffsetUnit : String {

        public static var tag: Int {
            41581
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamPricingDayType : String {

        public static var tag: Int {
            41582
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamPricingDayDistribution : String {

        public static var tag: Int {
            41583
        }

        case All = "0"
        case First = "1"
        case Last = "2"
        case Penultimate = "3"
    }

    public enum LegPaymentStreamPricingDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41584
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPricingBusinessCalendar : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41585
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPricingBusinessDayConvention : String {

        public static var tag: Int {
            41586
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingDeliveryStreamRiskApportionmentSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41587
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamCommoditySettlTimeType : String {

        public static var tag: Int {
            41588
        }

        case Hour = "0"
        case Timestamp = "1"
    }

    public enum NoLegPaymentStreamPaymentDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41589
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41590
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPaymentDateType : String {

        public static var tag: Int {
            41591
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegPaymentStreamMasterAgreementPaymentDatesIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41592
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamPricingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41593
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPricingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41594
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPricingDateType : String {

        public static var tag: Int {
            41595
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoLegPaymentStreamPricingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41596
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamPricingDayOfWeek : String {

        public static var tag: Int {
            41597
        }

        case EveryDay = "0"
        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
    }

    public enum LegPaymentStreamPricingDayNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41598
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPhysicalSettlTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41599
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPhysicalSettlTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41600
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPhysicalSettlCurency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41601
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPhysicalSettlBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41602
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPhysicalSettlMaximumBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41603
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPhysicalSettlDeliverableObligations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41604
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPhysicalSettlDeliverableObligationType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41605
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPhysicalSettlDeliverableObligationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41606
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPricingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41607
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPricingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41608
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPricingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41609
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPricingDateBusinessDayConvention : String {

        public static var tag: Int {
            41610
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPricingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41611
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPricingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41612
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPricingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41613
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProtectionTermEventNewsSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41614
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventNewsSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41615
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProtectionTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41616
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41617
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41618
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41619
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermSellerNotifies : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41620
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermBuyerNotifies : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41621
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41622
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermStandardSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41623
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventMinimumSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41624
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProtectionTermEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41625
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41626
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41627
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41628
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41629
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventUnit : String {

        public static var tag: Int {
            41630
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegProtectionTermEventDayType : String {

        public static var tag: Int {
            41631
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegProtectionTermEventRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41632
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegProtectionTermEventQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41633
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermEventQualifier : String {

        public static var tag: Int {
            41634
        }

        case RestructuringMultipleHoldingObligations = "H"
        case RestructuringMultipleCreditEventNotices = "E"
        case FloatingRateInterestShortfall = "C"
    }

    public enum NoLegProtectionTermObligations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41635
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermObligationType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41636
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProtectionTermObligationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41637
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamCalculationPeriodDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41638
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationPeriodDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41639
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationPeriodDateType : String {

        public static var tag: Int {
            41640
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegStreamCalculationPeriodDatesXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41641
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationPeriodDatesXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41642
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationBalanceOfFirstPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41643
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationCorrectionPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41644
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCalculationCorrectionUnit : String {

        public static var tag: Int {
            41645
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum NoLegStreamCommoditySettlBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41646
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41647
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityBase : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41648
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41649
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41650
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySecurityIDSource : String {

        public static var tag: Int {
            41651
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum LegStreamCommodityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41652
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegStreamCommodityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41653
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedLegStreamCommodityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41654
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityUnitOfMeasure : String {

        public static var tag: Int {
            41655
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegStreamCommodityCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41656
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41657
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41658
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityRateReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41659
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityRateReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41660
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamDataProvider : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41661
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityPricingType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41662
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityNearbySettlDayPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41663
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityNearbySettlDayUnit : String {

        public static var tag: Int {
            41664
        }

        case Week = "Wk"
        case Month = "Mo"
    }

    public enum LegStreamCommoditySettlDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41665
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlDateBusinessDayConvention : String {

        public static var tag: Int {
            41666
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegStreamCommoditySettlDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41667
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41668
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlDateRollPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41669
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlDateRollUnit : String {

        public static var tag: Int {
            41670
        }

        case Day = "D"
    }

    public enum LegStreamCommoditySettlDayType : String {

        public static var tag: Int {
            41671
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegStreamCommodityXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41672
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41673
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamCommodityAltIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41674
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41675
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityAltIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41676
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamCommodityDataSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41677
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityDataSourceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41678
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityDataSourceIDType : String {

        public static var tag: Int {
            41679
        }

        case City = "0"
        case Airport = "1"
        case WeatherStation = "2"
        case WeatherIndex = "3"
    }

    public enum NoLegStreamCommoditySettlDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41680
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlDay : String {

        public static var tag: Int {
            41681
        }

        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
        case AllWeekdays = "8"
        case AllDays = "9"
        case AllWeekends = "10"
    }

    public enum LegStreamCommoditySettlTotalHours : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41682
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamCommoditySettlTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41683
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlStart : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41684
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlEnd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41685
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegStreamCommoditySettlPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41686
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlCountry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41687
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlTimeZone : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41688
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlFlowType : String {

        public static var tag: Int {
            41689
        }

        case AllTimes = "0"
        case OnPeak = "1"
        case OffPeak = "2"
        case Base = "3"
        case BlockHours = "4"
        case Other = "5"
    }

    public enum LegStreamCommoditySettlPeriodNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41690
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlPeriodNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41691
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegStreamCommoditySettlPeriodFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41692
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlPeriodFrequencyUnit : String {

        public static var tag: Int {
            41693
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegStreamCommoditySettlPeriodPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41694
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlPeriodPriceUnitOfMeasure : String {

        public static var tag: Int {
            41695
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegStreamCommoditySettlPeriodPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41696
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlHolidaysProcessingInstruction : String {

        public static var tag: Int {
            41697
        }

        case DoNotIncludeHolidays = "0"
        case IncludeHolidays = "1"
    }

    public enum LegStreamCommoditySettlPeriodXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41698
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommoditySettlPeriodXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41699
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41700
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondSecurityIDSource : String {

        public static var tag: Int {
            41701
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum LegStreamNotionalXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41702
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamNotionalFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41703
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamNotionalFrequencyUnit : String {

        public static var tag: Int {
            41704
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum LegStreamNotionalCommodityFrequency : String {

        public static var tag: Int {
            41705
        }

        case Term = "0"
        case PerBusinessDay = "1"
        case PerCalculationPeriod = "2"
        case PerSettlPeriod = "3"
        case PerCalendarDay = "4"
        case PerHour = "5"
        case PerMonth = "6"
    }

    public enum LegStreamNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41706
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum LegStreamTotalNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41707
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamTotalNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41708
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingAdditionalTermBondDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41709
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingAdditionalTermBondDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41710
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingAdditionalTermBondDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41711
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41712
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventAveragingObservations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41713
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventAveragingObservationNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41714
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventAveragingWeight : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41715
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventCreditEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41716
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41717
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41718
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41719
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41720
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventUnit : String {

        public static var tag: Int {
            41721
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingComplexEventCreditEventDayType : String {

        public static var tag: Int {
            41722
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingComplexEventCreditEventRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41723
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventCreditEventQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41724
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventQualifier : String {

        public static var tag: Int {
            41725
        }

        case RestructuringMultipleHoldingObligations = "H"
        case RestructuringMultipleCreditEventNotices = "E"
        case FloatingRateInterestShortfall = "C"
    }

    public enum NoUnderlyingComplexEventPeriodDateTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41726
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPeriodDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41727
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPeriodTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41728
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41729
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventPeriodType : String {

        public static var tag: Int {
            41730
        }

        case AsianOut = "0"
        case AsianIn = "1"
        case BarrierCap = "2"
        case BarrierFloor = "3"
        case KnockOut = "4"
        case KnockIn = "5"
    }

    public enum UnderlyingComplexEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41731
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventRateSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41732
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventRateSource : String {

        public static var tag: Int {
            41733
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum UnderlyingComplexEventRateSourceType : String {

        public static var tag: Int {
            41734
        }

        case Primary = "0"
        case Secondary = "1"
    }

    public enum UnderlyingComplexEventReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41735
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41736
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41737
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41738
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41739
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41740
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41741
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventDateOffsetUnit : String {

        public static var tag: Int {
            41742
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingComplexEventDateOffsetDayType : String {

        public static var tag: Int {
            41743
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingComplexEventDateBusinessDayConvention : String {

        public static var tag: Int {
            41744
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingComplexEventDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41745
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventFixingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41746
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventFixingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41747
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventCreditEventSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41748
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventCreditEventSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41749
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingComplexEventSchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41750
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventScheduleStartDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41751
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventScheduleEndDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41752
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventScheduleFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41753
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingComplexEventScheduleFrequencyUnit : String {

        public static var tag: Int {
            41754
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingComplexEventScheduleRollConvention : String {

        public static var tag: Int {
            41755
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum NoUnderlyingDeliverySchedules : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41756
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleType : String {

        public static var tag: Int {
            41757
        }

        case Notional = "0"
        case Delivery = "1"
        case PhysicalSettlPeriods = "2"
    }

    public enum UnderlyingDeliveryScheduleXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41758
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41759
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleNotionalUnitOfMeasure : String {

        public static var tag: Int {
            41760
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingDeliveryScheduleNotionalCommodityFrequency : String {

        public static var tag: Int {
            41761
        }

        case Term = "0"
        case PerBusinessDay = "1"
        case PerCalculationPeriod = "2"
        case PerSettlPeriod = "3"
        case PerCalendarDay = "4"
        case PerHour = "5"
        case PerMonth = "6"
    }

    public enum UnderlyingDeliveryScheduleNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41762
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliverySchedulePositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41763
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleToleranceUnitOfMeasure : String {

        public static var tag: Int {
            41764
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingDeliveryScheduleToleranceType : String {

        public static var tag: Int {
            41765
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum UnderlyingDeliveryScheduleSettlCountry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41766
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleSettlTimeZone : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41767
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleSettlFlowType : String {

        public static var tag: Int {
            41768
        }

        case AllTimes = "0"
        case OnPeak = "1"
        case OffPeak = "2"
        case Base = "3"
        case BlockHours = "4"
        case Other = "5"
    }

    public enum UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction : String {

        public static var tag: Int {
            41769
        }

        case DoNotIncludeHolidays = "0"
        case IncludeHolidays = "1"
    }

    public enum NoUnderlyingDeliveryScheduleSettlDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41770
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleSettlDay : String {

        public static var tag: Int {
            41771
        }

        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
        case AllWeekdays = "8"
        case AllDays = "9"
        case AllWeekends = "10"
    }

    public enum UnderlyingDeliveryScheduleSettlTotalHours : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41772
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDeliveryScheduleSettlTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41773
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleSettlStart : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41774
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleSettlEnd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41775
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryScheduleSettlTimeType : String {

        public static var tag: Int {
            41776
        }

        case Hour = "0"
        case Timestamp = "1"
    }

    public enum UnderlyingDeliveryStreamType : String {

        public static var tag: Int {
            41777
        }

        case Periodic = "0"
        case Initial = "1"
        case Single = "2"
    }

    public enum UnderlyingDeliveryStreamPipeline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41778
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamEntryPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41779
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamWithdrawalPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41780
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamDeliveryPoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41781
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamDeliveryRestriction : String {

        public static var tag: Int {
            41782
        }

        case Firm = "1"
        case NonFirm = "2"
        case ForceMajeure = "3"
        case SystemFirm = "4"
        case UnitFirm = "5"
    }

    public enum UnderlyingDeliveryStreamDeliveryContingency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41783
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamDeliveryContingentPartySide : String {

        public static var tag: Int {
            41784
        }

        case Buyer = "0"
        case Seller = "1"
    }

    public enum UnderlyingDeliveryStreamDeliverAtSourceIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41785
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamRiskApportionment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41786
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamTitleTransferLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41787
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamTitleTransferCondition : String {

        public static var tag: Int {
            41788
        }

        case Transfers = "0"
        case DoesNotTransfer = "1"
    }

    public enum UnderlyingDeliveryStreamImporterOfRecord : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41789
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41790
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamPositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41791
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamToleranceUnitOfMeasure : String {

        public static var tag: Int {
            41792
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingDeliveryStreamToleranceType : String {

        public static var tag: Int {
            41793
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum UnderlyingDeliveryStreamToleranceOptionSide : String {

        public static var tag: Int {
            41794
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingDeliveryStreamTotalPositiveTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41795
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamTotalNegativeTolerance : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41796
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamNotionalConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41797
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamTransportEquipment : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41798
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamElectingPartySide : String {

        public static var tag: Int {
            41799
        }

        case Buyer = "0"
        case Seller = "1"
    }

    public enum NoUnderlyingStreamAssetAttributes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41800
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamAssetAttributeType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41801
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamAssetAttributeValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41802
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamAssetAttributeLimit : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41803
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDeliveryStreamCycles : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41804
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamCycleDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41805
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingDeliveryStreamCycleDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41806
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingDeliveryStreamCycleDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41807
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDeliveryStreamCommoditySources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41808
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamCommoditySource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41809
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExerciseDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41810
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingExerciseDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41811
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingExerciseDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41812
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAutomaticExerciseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41813
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAutomaticExerciseThresholdRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41814
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExerciseConfirmationMethod : String {

        public static var tag: Int {
            41815
        }

        case NotRequired = "0"
        case NonElectronic = "1"
        case Electronic = "2"
        case Unknown = "3"
    }

    public enum UnderlyingManualNoticeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41816
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingFallbackExerciseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41817
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingLimitedRightToConfirmIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41818
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExerciseSplitTicketIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41819
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingOptionExerciseBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41820
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41821
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseBusinessDayConvention : String {

        public static var tag: Int {
            41822
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingOptionExerciseEarliestDateOffsetDayType : String {

        public static var tag: Int {
            41823
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingOptionExerciseEarliestDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41824
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseEarliestDateOffsetUnit : String {

        public static var tag: Int {
            41825
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingOptionExerciseFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41826
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseFrequencyUnit : String {

        public static var tag: Int {
            41827
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingOptionExerciseStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41828
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41829
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41830
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseStartDateOffsetUnit : String {

        public static var tag: Int {
            41831
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingOptionExerciseStartDateOffsetDayType : String {

        public static var tag: Int {
            41832
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingOptionExerciseStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41833
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41834
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseNominationDeadline : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41835
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41836
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41837
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseEarliestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41838
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseLatestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41839
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41840
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingOptionExerciseDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41841
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41842
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseDateType : String {

        public static var tag: Int {
            41843
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoUnderlyingOptionExerciseExpirationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41844
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41845
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationDateBusinessDayConvention : String {

        public static var tag: Int {
            41846
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingOptionExerciseExpirationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41847
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41848
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationDateOffsetUnit : String {

        public static var tag: Int {
            41849
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingOptionExerciseExpirationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41850
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationFrequencyUnit : String {

        public static var tag: Int {
            41851
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingOptionExerciseExpirationRollConvention : String {

        public static var tag: Int {
            41852
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum UnderlyingOptionExerciseExpirationDateOffsetDayType : String {

        public static var tag: Int {
            41853
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingOptionExerciseExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41854
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41855
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingOptionExerciseExpirationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41856
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41857
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionExerciseExpirationDateType : String {

        public static var tag: Int {
            41858
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingMarketDisruptionProvision : String {

        public static var tag: Int {
            41859
        }

        case NotApplicable = "0"
        case Applicable = "1"
        case AsInMasterAgreement = "2"
        case AsInConfirmation = "3"
    }

    public enum UnderlyingMarketDisruptionFallbackProvision : String {

        public static var tag: Int {
            41860
        }

        case MasterAgreement = "0"
        case Confirmation = "1"
    }

    public enum UnderlyingMarketDisruptionMaximumDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41861
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionMaterialityPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41862
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionMinimumFuturesContracts : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41863
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingMarketDisruptionEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41864
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionEvent : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41865
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingMarketDisruptionFallbacks : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41866
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41867
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingMarketDisruptionFallbackReferencePrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41868
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackUnderlierType : String {

        public static var tag: Int {
            41869
        }

        case Basket = "0"
        case Bond = "1"
        case Cash = "2"
        case Commodity = "3"
        case ConvertibleBond = "4"
        case Equity = "5"
        case ExchangeTradedFund = "6"
        case Future = "7"
        case Index = "8"
        case Loan = "9"
        case Mortgage = "10"
        case MutualFund = "11"
    }

    public enum UnderlyingMarketDisruptionFallbackUnderlierSecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41870
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource : String {

        public static var tag: Int {
            41871
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41872
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41873
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41874
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackOpenUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41875
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackBasketCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41876
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMarketDisruptionFallbackBasketDivisor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41877
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentScheduleFixingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41878
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingDayOfWeek : String {

        public static var tag: Int {
            41879
        }

        case EveryDay = "0"
        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
    }

    public enum UnderlyingPaymentScheduleFixingDayNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41880
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41881
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41882
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41883
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateUnitOfMeasure : String {

        public static var tag: Int {
            41884
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentScheduleRateConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41885
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleRateSpreadType : String {

        public static var tag: Int {
            41886
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum UnderlyingPaymentScheduleSettlPeriodPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41887
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleSettlPeriodPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41888
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure : String {

        public static var tag: Int {
            41889
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentScheduleStepUnitOfMeasure : String {

        public static var tag: Int {
            41890
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentScheduleFixingDayDistribution : String {

        public static var tag: Int {
            41891
        }

        case All = "0"
        case First = "1"
        case Last = "2"
        case Penultimate = "3"
    }

    public enum UnderlyingPaymentScheduleFixingDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41892
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41893
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingLagUnit : String {

        public static var tag: Int {
            41894
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41895
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit : String {

        public static var tag: Int {
            41896
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamFlatRateIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41897
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFlatRateAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41898
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFlatRateCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41899
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamMaximumPaymentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41900
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamMaximumPaymentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41901
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamMaximumTransactionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41902
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamMaximumTransactionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41903
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixedAmountUnitOfMeasure : String {

        public static var tag: Int {
            41904
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentStreamTotalFixedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41905
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamWorldScaleRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41906
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamContractPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41907
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamContractPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41908
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamPricingBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41909
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPricingBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41910
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndex2CurveUnit : String {

        public static var tag: Int {
            41911
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamRateIndex2CurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41912
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndexLocation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41913
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndexLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41914
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndexUnitOfMeasure : String {

        public static var tag: Int {
            41915
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentStreamSettlLevel : String {

        public static var tag: Int {
            41916
        }

        case Average = "0"
        case Maximum = "1"
        case Minimum = "2"
        case Cumulative = "3"
    }

    public enum UnderlyingPaymentStreamReferenceLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41917
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamReferenceLevelUnitOfMeasure : String {

        public static var tag: Int {
            41918
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41919
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateSpreadCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41920
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateSpreadUnitOfMeasure : String {

        public static var tag: Int {
            41921
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingPaymentStreamRateConversionFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41922
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateSpreadType : String {

        public static var tag: Int {
            41923
        }

        case Absolute = "0"
        case Percentage = "1"
    }

    public enum UnderlyingPaymentStreamLastResetRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41924
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41925
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCalculationLagPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41926
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCalculationLagUnit : String {

        public static var tag: Int {
            41927
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamFirstObservationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41928
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFirstObservationDateOffsetUnit : String {

        public static var tag: Int {
            41929
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamPricingDayType : String {

        public static var tag: Int {
            41930
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamPricingDayDistribution : String {

        public static var tag: Int {
            41931
        }

        case All = "0"
        case First = "1"
        case Last = "2"
        case Penultimate = "3"
    }

    public enum UnderlyingPaymentStreamPricingDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41932
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPricingBusinessCalendar : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41933
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPricingBusinessDayConvention : String {

        public static var tag: Int {
            41934
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegStreamCommoditySettlTimeType : String {

        public static var tag: Int {
            41935
        }

        case Hour = "0"
        case Timestamp = "1"
    }

    public enum UnderlyingStreamCommoditySettlTimeType : String {

        public static var tag: Int {
            41936
        }

        case Hour = "0"
        case Timestamp = "1"
    }

    public enum NoUnderlyingPaymentStreamPaymentDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41937
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41938
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPaymentDateType : String {

        public static var tag: Int {
            41939
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41940
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamPricingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41941
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPricingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41942
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPricingDateType : String {

        public static var tag: Int {
            41943
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoUnderlyingPaymentStreamPricingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41944
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamPricingDayOfWeek : String {

        public static var tag: Int {
            41945
        }

        case EveryDay = "0"
        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
    }

    public enum UnderlyingPaymentStreamPricingDayNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41946
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPricingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41947
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPricingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41948
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPricingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41949
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPricingDateBusinessDayConvention : String {

        public static var tag: Int {
            41950
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPricingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41951
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPricingTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41952
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPricingTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41953
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamCalculationPeriodDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41954
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationPeriodDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41955
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationPeriodDateType : String {

        public static var tag: Int {
            41956
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingStreamCalculationPeriodDatesXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41957
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationPeriodDatesXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41958
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationBalanceOfFirstPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41959
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationCorrectionPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41960
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCalculationCorrectionUnit : String {

        public static var tag: Int {
            41961
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum NoUnderlyingStreamCommoditySettlBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41962
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41963
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityBase : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41964
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41965
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySecurityID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41966
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySecurityIDSource : String {

        public static var tag: Int {
            41967
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingStreamCommodityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41968
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingStreamCommodityDescLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41969
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingStreamCommodityDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41970
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityUnitOfMeasure : String {

        public static var tag: Int {
            41971
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingStreamCommodityCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41972
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41973
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41974
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityRateReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41975
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityRateReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41976
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamDataProvider : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41977
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityPricingType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41978
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityNearbySettlDayPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41979
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityNearbySettlDayUnit : String {

        public static var tag: Int {
            41980
        }

        case Week = "Wk"
        case Month = "Mo"
    }

    public enum UnderlyingStreamCommoditySettlDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41981
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlDateBusinessDayConvention : String {

        public static var tag: Int {
            41982
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingStreamCommoditySettlDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41983
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlMonth : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41984
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlDateRollPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41985
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlDateRollUnit : String {

        public static var tag: Int {
            41986
        }

        case Day = "D"
    }

    public enum UnderlyingStreamCommoditySettlDayType : String {

        public static var tag: Int {
            41987
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingStreamCommodityXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41988
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41989
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamCommodityAltIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41990
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityAltID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41991
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityAltIDSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41992
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamCommodityDataSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41993
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityDataSourceID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41994
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityDataSourceIDType : String {

        public static var tag: Int {
            41995
        }

        case City = "0"
        case Airport = "1"
        case WeatherStation = "2"
        case WeatherIndex = "3"
    }

    public enum NoUnderlyingStreamCommoditySettlDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41996
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlDay : String {

        public static var tag: Int {
            41997
        }

        case Monday = "1"
        case Tuesday = "2"
        case Wednesday = "3"
        case Thursday = "4"
        case Friday = "5"
        case Saturday = "6"
        case Sunday = "7"
        case AllWeekdays = "8"
        case AllDays = "9"
        case AllWeekends = "10"
    }

    public enum UnderlyingStreamCommoditySettlTotalHours : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41998
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamCommoditySettlTimes : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            41999
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlStart : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42000
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlEnd : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42001
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingStreamCommoditySettlPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42002
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlCountry : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42003
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlTimeZone : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42004
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlFlowType : String {

        public static var tag: Int {
            42005
        }

        case AllTimes = "0"
        case OnPeak = "1"
        case OffPeak = "2"
        case Base = "3"
        case BlockHours = "4"
        case Other = "5"
    }

    public enum UnderlyingStreamCommoditySettlPeriodNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42006
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure : String {

        public static var tag: Int {
            42007
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingStreamCommoditySettlPeriodFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42008
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlPeriodFrequencyUnit : String {

        public static var tag: Int {
            42009
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingStreamCommoditySettlPeriodPrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42010
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure : String {

        public static var tag: Int {
            42011
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingStreamCommoditySettlPeriodPriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42012
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlHolidaysProcessingInstruction : String {

        public static var tag: Int {
            42013
        }

        case DoNotIncludeHolidays = "0"
        case IncludeHolidays = "1"
    }

    public enum UnderlyingStreamCommoditySettlPeriodXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42014
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommoditySettlPeriodXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42015
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42016
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42017
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamNotionalXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42018
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamNotionalFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42019
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamNotionalFrequencyUnit : String {

        public static var tag: Int {
            42020
        }

        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Quarter = "Q"
    }

    public enum UnderlyingStreamNotionalCommodityFrequency : String {

        public static var tag: Int {
            42021
        }

        case Term = "0"
        case PerBusinessDay = "1"
        case PerCalculationPeriod = "2"
        case PerSettlPeriod = "3"
        case PerCalendarDay = "4"
        case PerHour = "5"
        case PerMonth = "6"
    }

    public enum UnderlyingStreamNotionalUnitOfMeasure : String {

        public static var tag: Int {
            42022
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum UnderlyingStreamTotalNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42023
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamTotalNotionalUnitOfMeasure : String {

        public static var tag: Int {
            42024
        }

        case BillionCubicFeet = "Bcf"
        case CubicMeters = "CBM"
        case gigajoules = "GJ"
        case HeatRate = "kHR"
        case KilowattHours = "kWh"
        case MegaHeatRate = "MHR"
        case OneMillionBTU = "MMBtu"
        case MegawattHours = "MWh"
        case therms = "thm"
        case TonsOfCarbonDioxide = "tnCO2"
        case MillionBarrels = "MMbbl"
        case Allowances = "Alw"
        case Barrels = "Bbl"
        case BoardFeet = "BDFT"
        case Bushels = "Bu"
        case Currency = "Ccy"
        case CoolingDegreeDay = "CDD"
        case CertifiedEmissionsReduction = "CER"
        case CriticalPrecipDay = "CPD"
        case ClimateReserveTonnes = "CRT"
        case Hundredweight = "cwt"
        case Day = "day"
        case DryMetricTons = "dt"
        case EnvAllwncCert = "EnvAllwnc"
        case EnvironmentalCredit = "EnvCrd"
        case EnvironmentalOffset = "EnvOfst"
        case Grams = "g"
        case Gallons = "Gal"
        case GrossTons = "GT"
        case HeatingDegreeDay = "HDD"
        case IndexPoint = "IPNT"
        case Kilograms = "kg"
        case kiloliters = "kL"
        case KilowattYear = "kW-a"
        case KilowattDay = "kW-d"
        case KilowattHour = "kW-h"
        case KilowattMonth = "kW-M"
        case KilowattMinute = "kW-min "
        case liters = "L"
        case Pounds = "lbs"
        case MegawattYear = "MW-a"
        case MegawattDay = "MW-d"
        case MegawattHour = "MW-h"
        case MegawattMonth = "MW-M"
        case MegawattMinute = "MW-min"
        case TroyOunces = "oz_tr"
        case PrincipalWithRelationToDebtInstrument = "PRINC"
        case MetricTons = "t"
        case Tons = "tn"
        case Are = "a"
        case Acre = "ac"
        case Centiliter = "cL"
        case Centimeter = "cM"
        case DieselGallonEquivalent = "DGE"
        case Foot = "ft"
        case GBGallon = "Gal_gb"
        case GasolineGallonEquivalent = "GGE"
        case Hectare = "ha"
        case Inch = "in"
        case Kilometer = "kM"
        case Meter = "M"
        case Mile = "mi"
        case Milliliter = "mL"
        case Millimeter = "mM"
        case USOunce = "oz"
        case Piece = "pc"
        case USPint = "pt"
        case GBPint = "pt_gb"
        case USQuart = "qt"
        case GBQuart = "qt_gb"
        case SquareCentimeter = "SqcM"
        case SquareFoot = "Sqft"
        case SquareInch = "Sqin"
        case SquareKilometer = "SqkM"
        case SquareMeter = "SqM"
        case SquareMile = "Sqmi"
        case SquareMillimeter = "SqmM"
        case SquareYard = "Sqyd"
        case Yard = "yd"
        case USDollars = "USD"
    }

    public enum EncodedUnderlyingAdditionalTermBondIssuerLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42025
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingAdditionalTermBondIssuer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42026
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondSeniority : String {

        public static var tag: Int {
            42027
        }

        case SeniorSecured = "SD"
        case Senior = "SR"
        case Subordinated = "SB"
        case Junior = "JR"
        case Mezzanine = "MZ"
        case SeniorNonPreferred = "SN"
    }

    public enum UnderlyingAdditionalTermBondCouponType : String {

        public static var tag: Int {
            42028
        }

        case Zero = "0"
        case FixedRate = "1"
        case FloatingRate = "2"
        case Structured = "3"
    }

    public enum UnderlyingAdditionalTermBondCouponRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42029
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondMaturityDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42030
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondParValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42031
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondCurrentTotalIssuedAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42032
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondCouponFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42033
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermBondCouponFrequencyUnit : String {

        public static var tag: Int {
            42034
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingAdditionalTermBondDayCount : String {

        public static var tag: Int {
            42035
        }

        case OneOne = "0"
        case ThrityThreeSixtyUS = "1"
        case ThirtyThreeSixtySIA = "2"
        case ThirtyThreeSixtyM = "3"
        case ThirtyEThreeSixty = "4"
        case ThirtyEThreeSixtyISDA = "5"
        case ActThreeSixty = "6"
        case ActThreeSixtyFiveFixed = "7"
        case ActActAFB = "8"
        case ActActICMA = "9"
        case ActActISMAUltimo = "10"
        case ActActISDA = "11"
        case BusTwoFiftyTwo = "12"
        case ThirtyEPlusThreeSixty = "13"
        case ActThreeSixtyFiveL = "14"
        case NLThreeSixtyFive = "15"
        case NLThreeSixty = "16"
        case Act364 = "17"
        case ThirtyThreeSixtyFive = "18"
        case ThirtyActual = "19"
        case ThirtyThreeSixtyICMA = "20"
        case ThirtyETwoThreeSixty = "21"
        case ThirtyEThreeThreeSixty = "22"
        case Other = "99"
    }

    public enum NoUnderlyingAdditionalTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42036
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermConditionPrecedentBondIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42037
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalTermDiscrepancyClauseIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42038
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingCashSettlDealers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42039
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlDealer : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42040
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingCashSettlTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42041
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42042
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlValuationFirstBusinessDayOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42043
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlValuationSubsequentBusinessDaysOffset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42044
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlNumOfValuationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42045
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42046
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42047
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlQuoteMethod : String {

        public static var tag: Int {
            42048
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum UnderlyingCashSettlQuoteAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42049
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42050
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlMinimumQuoteAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42051
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlMinimumQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42052
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42053
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42054
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlRecoveryFactor : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42055
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlFixedTermIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42056
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlAccruedInterestIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42057
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlValuationMethod : String {

        public static var tag: Int {
            42058
        }

        case Market = "0"
        case Highest = "1"
        case AverageMarket = "2"
        case AverageHighest = "3"
        case BlendedMarket = "4"
        case BlendedHighest = "5"
        case AverageBlendedMarket = "6"
        case AverageBlendedHighest = "7"
    }

    public enum UnderlyingCashSettlTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42059
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPhysicalSettlTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42060
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPhysicalSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42061
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPhysicalSettlBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42062
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPhysicalSettlMaximumBusinessDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42063
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPhysicalSettlTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42064
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPhysicalSettlDeliverableObligations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42065
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPhysicalSettlDeliverableObligationType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42066
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPhysicalSettlDeliverableObligationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42067
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProtectionTerms : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42068
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42069
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42070
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermSellerNotifies : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42071
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermBuyerNotifies : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42072
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42073
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermStandardSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42074
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventMinimumSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42075
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42076
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProtectionTermEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42077
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42078
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42079
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42080
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42081
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventUnit : String {

        public static var tag: Int {
            42082
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProtectionTermEventDayType : String {

        public static var tag: Int {
            42083
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingProtectionTermEventRateSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42084
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProtectionTermEventQualifiers : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42085
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventQualifier : String {

        public static var tag: Int {
            42086
        }

        case RestructuringMultipleHoldingObligations = "H"
        case RestructuringMultipleCreditEventNotices = "E"
        case FloatingRateInterestShortfall = "C"
    }

    public enum NoUnderlyingProtectionTermObligations : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42087
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermObligationType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42088
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermObligationValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42089
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProtectionTermEventNewsSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42090
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProtectionTermEventNewsSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42091
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            42092
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingProvisionCashSettlPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42093
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42094
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42095
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionCashSettlPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42096
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingProvisionCashSettlPaymentDateRangeFirst : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42097
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDateRangeLast : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42098
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionCashSettlPaymentDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42099
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42100
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDateType : String {

        public static var tag: Int {
            42101
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingProvisionCashSettlQuoteSource : String {

        public static var tag: Int {
            42102
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case Other = "99"
    }

    public enum UnderlyingProvisionCashSettlQuoteReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42103
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlValueTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42104
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlValueTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42105
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlValueDateBusinessDayConvention : String {

        public static var tag: Int {
            42106
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingProvisionCashSettlValueDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42107
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlValueDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42108
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlValueDateOffsetUnit : String {

        public static var tag: Int {
            42109
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionCashSettlValueDateOffsetDayType : String {

        public static var tag: Int {
            42110
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingProvisionCashSettlValueDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42111
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionOptionExerciseFixedDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42112
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseFixedDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42113
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseFixedDateType : String {

        public static var tag: Int {
            42114
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingProvisionOptionExerciseBusinessDayConvention : String {

        public static var tag: Int {
            42115
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42116
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit : String {

        public static var tag: Int {
            42117
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionOptionExerciseFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42118
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseFrequencyUnit : String {

        public static var tag: Int {
            42119
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingProvisionOptionExerciseStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42120
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42121
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42122
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseStartDateOffsetUnit : String {

        public static var tag: Int {
            42123
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionOptionExerciseStartDateOffsetDayType : String {

        public static var tag: Int {
            42124
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingProvisionOptionExerciseStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42125
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExercisePeriodSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42126
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42127
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42128
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseEarliestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42129
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42130
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseLatestTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42131
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42132
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42133
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationDateBusinessDayConvention : String {

        public static var tag: Int {
            42134
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingProvisionOptionExpirationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42135
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42136
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationDateOffsetUnit : String {

        public static var tag: Int {
            42137
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionOptionExpirationDateOffsetDayType : String {

        public static var tag: Int {
            42138
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingProvisionOptionExpirationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42139
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42140
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42141
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42142
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention : String {

        public static var tag: Int {
            42143
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42144
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42145
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit : String {

        public static var tag: Int {
            42146
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType : String {

        public static var tag: Int {
            42147
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42148
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42149
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionType : String {

        public static var tag: Int {
            42150
        }

        case MandatoryEarlyTermination = "0"
        case OptionalEarlyTermination = "1"
        case Cancelable = "2"
        case Extendable = "3"
        case MutualEarlyTermination = "4"
        case Evergreen = "5"
        case Callable = "6"
        case Puttable = "7"
    }

    public enum UnderlyingProvisionDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42151
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionDateBusinessDayConvention : String {

        public static var tag: Int {
            42152
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingProvisionDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42153
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionDateTenorPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42154
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionDateTenorUnit : String {

        public static var tag: Int {
            42155
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingProvisionCalculationAgent : String {

        public static var tag: Int {
            42156
        }

        case ExercisingParty = "0"
        case NonExercisingParty = "1"
        case MasterAgreeent = "2"
        case Supplement = "3"
    }

    public enum UnderlyingProvisionOptionSinglePartyBuyerSide : String {

        public static var tag: Int {
            42157
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingProvisionOptionSinglePartySellerSide : String {

        public static var tag: Int {
            42158
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingProvisionOptionExerciseStyle : String {

        public static var tag: Int {
            42159
        }

        case European = "0"
        case American = "1"
        case Bermuda = "2"
        case Other = "99"
    }

    public enum UnderlyingProvisionOptionExerciseMultipleNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42160
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseMinimumNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42161
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseMaximumNotional : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42162
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionMinimumNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42163
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionMaximumNumber : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42164
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseConfirmation : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42165
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlMethod : String {

        public static var tag: Int {
            42166
        }

        case CashPrice = "0"
        case CashPriceAlternate = "1"
        case ParYieldCurveAdjusted = "2"
        case ZeroCouponYieldCurveAdjusted = "3"
        case ParYieldCurveUnadjusted = "4"
        case CrossCurrency = "5"
        case CollateralizedPrice = "6"
    }

    public enum UnderlyingProvisionCashSettlCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42167
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlCurrency2 : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42168
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlQuoteType : String {

        public static var tag: Int {
            42169
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
        case ExercisingPartyPays = "3"
    }

    public enum UnderlyingProvisionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42170
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingProvisionTextLen : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42171
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum EncodedUnderlyingProvisionText : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42172
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionPartyIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42173
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionPartyID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42174
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionPartyIDSource : String {

        public static var tag: Int {
            42175
        }

        case UKNationalInsuranceOrPensionNumber = "6"
        case USSocialSecurityNumber = "7"
        case USEmployerOrTaxIDNumber = "8"
        case AustralianBusinessNumber = "9"
        case AustralianTaxFileNumber = "A"
        case TaxID = "J"
        case KoreanInvestorID = "1"
        case TaiwaneseForeignInvestorID = "2"
        case TaiwaneseTradingAcct = "3"
        case MalaysianCentralDepository = "4"
        case ChineseInvestorID = "5"
        case ISITCAcronym = "I"
        case BIC = "B"
        case GeneralIdentifier = "C"
        case Proprietary = "D"
        case ISOCountryCode = "E"
        case SettlementEntityLocation = "F"
        case MIC = "G"
        case CSDParticipant = "H"
        case AustralianCompanyNumber = "K"
        case AustralianRegisteredBodyNumber = "L"
        case CFTCReportingFirmIdentifier = "M"
        case LegalEntityIdentifier = "N"
        case InterimIdentifier = "O"
        case ShortCodeIdentifier = "P"
        case NationalIDNaturalPerson = "Q"
        case IndiaPermanentAccountNumber = "R"
        case FDID = "S"
    }

    public enum UnderlyingProvisionPartyRole : String {

        public static var tag: Int {
            42176
        }

        case ExecutingFirm = "1"
        case BrokerOfCredit = "2"
        case ClientID = "3"
        case ClearingFirm = "4"
        case InvestorID = "5"
        case IntroducingFirm = "6"
        case EnteringFirm = "7"
        case Locate = "8"
        case FundManagerClientID = "9"
        case SettlementLocation = "10"
        case OrderOriginationTrader = "11"
        case ExecutingTrader = "12"
        case OrderOriginationFirm = "13"
        case GiveupClearingFirmDepr = "14"
        case CorrespondantClearingFirm = "15"
        case ExecutingSystem = "16"
        case ContraFirm = "17"
        case ContraClearingFirm = "18"
        case SponsoringFirm = "19"
        case UnderlyingContraFirm = "20"
        case ClearingOrganization = "21"
        case Exchange = "22"
        case CustomerAccount = "24"
        case CorrespondentClearingOrganization = "25"
        case CorrespondentBroker = "26"
        case Buyer = "27"
        case Custodian = "28"
        case Intermediary = "29"
        case Agent = "30"
        case SubCustodian = "31"
        case Beneficiary = "32"
        case InterestedParty = "33"
        case RegulatoryBody = "34"
        case LiquidityProvider = "35"
        case EnteringTrader = "36"
        case ContraTrader = "37"
        case PositionAccount = "38"
        case ContraInvestorID = "39"
        case TransferToFirm = "40"
        case ContraPositionAccount = "41"
        case ContraExchange = "42"
        case InternalCarryAccount = "43"
        case OrderEntryOperatorID = "44"
        case SecondaryAccountNumber = "45"
        case ForeignFirm = "46"
        case ThirdPartyAllocationFirm = "47"
        case ClaimingAccount = "48"
        case AssetManager = "49"
        case PledgorAccount = "50"
        case PledgeeAccount = "51"
        case LargeTraderReportableAccount = "52"
        case TraderMnemonic = "53"
        case SenderLocation = "54"
        case SessionID = "55"
        case AcceptableCounterparty = "56"
        case UnacceptableCounterparty = "57"
        case EnteringUnit = "58"
        case ExecutingUnit = "59"
        case IntroducingBroker = "60"
        case QuoteOriginator = "61"
        case ReportOriginator = "62"
        case SystematicInternaliser = "63"
        case MultilateralTradingFacility = "64"
        case RegulatedMarket = "65"
        case MarketMaker = "66"
        case InvestmentFirm = "67"
        case HostCompetentAuthority = "68"
        case HomeCompetentAuthority = "69"
        case CompetentAuthorityLiquidity = "70"
        case CompetentAuthorityTransactionVenue = "71"
        case ReportingIntermediary = "72"
        case ExecutionVenue = "73"
        case MarketDataEntryOriginator = "74"
        case LocationID = "75"
        case DeskID = "76"
        case MarketDataMarket = "77"
        case AllocationEntity = "78"
        case PrimeBroker = "79"
        case StepOutFirm = "80"
        case BrokerClearingID = "81"
        case CentralRegistrationDepository = "82"
        case ClearingAccount = "83"
        case AcceptableSettlingCounterparty = "84"
        case UnacceptableSettlingCounterparty = "85"
        case CLSMemberBank = "86"
        case InConcertGroup = "87"
        case InConcertControllingEntity = "88"
        case LargePositionsReportingAccount = "89"
        case SettlementFirm = "90"
        case SettlementAccount = "91"
        case ReportingMarketCenter = "92"
        case RelatedReportingMarketCenter = "93"
        case AwayMarket = "94"
        case GiveupTradingFirm = "95"
        case TakeupTradingFirm = "96"
        case GiveupClearingFirm = "97"
        case TakeupClearingFirm = "98"
        case OriginatingMarket = "99"
        case MarginAccount = "100"
        case CollateralAssetAccount = "101"
        case DataRepository = "102"
        case CalculationAgent = "103"
        case ExerciseNoticeSender = "104"
        case ExerciseNoticeReceiver = "105"
        case RateReferenceBank = "106"
        case Correspondent = "107"
        case BeneficiaryBank = "109"
        case Borrower = "110"
        case PrimaryObligator = "111"
        case Guarantor = "112"
        case ExcludedReferenceEntity = "113"
        case DeterminingParty = "114"
        case HedgingParty = "115"
        case ReportingEntity = "116"
        case SalesPerson = "117"
        case Operator = "118"
        case CSD = "119"
        case ICSD = "120"
        case TradingSubAccount = "121"
        case InvestmentDecisionMaker = "122"
        case PublishingIntermediary = "123"
        case CSDParticipant = "124"
        case Issuer = "125"
        case ContraCustomerAccount = "126"
        case ContraInvestmentDecisionMaker = "127"
    }

    public enum NoUnderlyingProvisionPartySubIDs : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42177
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionPartySubID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42178
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionPartySubIDType : String {

        public static var tag: Int {
            42179
        }

        case Firm = "1"
        case Person = "2"
        case System = "3"
        case Application = "4"
        case FullLegalNameOfFirm = "5"
        case PostalAddress = "6"
        case PhoneNumber = "7"
        case EmailAddress = "8"
        case ContactName = "9"
        case SecuritiesAccountNumber = "10"
        case RegistrationNumber = "11"
        case RegisteredAddressForConfirmation = "12"
        case RegulatoryStatus = "13"
        case RegistrationName = "14"
        case CashAccountNumber = "15"
        case BIC = "16"
        case CSDParticipantMemberCode = "17"
        case RegisteredAddress = "18"
        case FundAccountName = "19"
        case TelexNumber = "20"
        case FaxNumber = "21"
        case SecuritiesAccountName = "22"
        case CashAccountName = "23"
        case Department = "24"
        case LocationDesk = "25"
        case PositionAccountType = "26"
        case SecurityLocateID = "27"
        case MarketMaker = "28"
        case EligibleCounterparty = "29"
        case ProfessionalClient = "30"
        case Location = "31"
        case ExecutionVenue = "32"
        case CurrencyDeliveryIdentifier = "33"
        case AddressCity = "34"
        case AddressStateOrProvince = "35"
        case AddressPostalCode = "36"
        case AddressStreet = "37"
        case AddressISOCountryCode = "38"
        case ISOCountryCode = "39"
        case MarketSegment = "40"
        case CustomerAccountType = "41"
        case OmnibusAccount = "42"
        case FundsSegregationType = "43"
        case GuaranteeFund = "44"
        case SwapDealer = "45"
        case MajorParticipant = "46"
        case FinancialEntity = "47"
        case USPerson = "48"
        case ReportingEntityIndicator = "49"
        case ElectedClearingRequirementException = "50"
        case BusinessCenter = "51"
        case ReferenceText = "52"
        case ShortMarkingExemptAccount = "53"
        case ParentFirmIdentifier = "54"
        case ParentFirmName = "55"
        case DealIdentifier = "56"
        case SystemTradeID = "57"
        case SystemTradeSubID = "58"
        case FCMCode = "59"
        case DlvryTrmlCode = "60"
        case VolntyRptEntity = "61"
        case RptObligJursdctn = "62"
        case VolntyRptJursdctn = "63"
        case CompanyActivities = "64"
        case EEAreaDomiciled = "65"
        case ContractLinked = "66"
        case ContractAbove = "67"
        case VolntyRptPty = "68"
        case EndUser = "69"
        case LocationOrJurisdiction = "70"
        case DerivativesDealer = "71"
        case Domicile = "72"
        case ExemptFromRecognition = "73"
        case Payer = "74"
        case Receiver = "75"
        case SystematicInternaliser = "76"
        case PublishingEntityIndicator = "77"
        case FirstName = "78"
        case Surname = "79"
        case DateOfBirth = "80"
        case OrderTransmittingFirm = "81"
        case OrderTransmittingFirmBuyer = "82"
        case OrderTransmitterSeller = "83"
        case LegalEntityIdentifier = "84"
        case SubSectorClassification = "85"
        case PartySide = "86"
        case LegalRegistrationCountry = "87"
    }

    public enum NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42180
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42181
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionCashSettlValueDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42182
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionCashSettlValueDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42183
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionOptionExerciseBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42184
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExerciseBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42185
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionOptionExpirationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42186
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionExpirationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42187
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42188
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42189
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingProvisionDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42190
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42191
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DeliveryStreamDeliveryPointSource : String {

        public static var tag: Int {
            42192
        }

        case Proprietary = "0"
        case EIC = "1"
    }

    public enum DeliveryStreamDeliveryPointDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42193
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamDeliveryPointSource : String {

        public static var tag: Int {
            42194
        }

        case Proprietary = "0"
        case EIC = "1"
    }

    public enum LegDeliveryStreamDeliveryPointDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42195
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamDeliveryPointSource : String {

        public static var tag: Int {
            42196
        }

        case Proprietary = "0"
        case EIC = "1"
    }

    public enum UnderlyingDeliveryStreamDeliveryPointDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42197
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegContractualDefinitions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42198
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegContractualDefinition : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42199
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegFinancingTermSupplements : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42200
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFinancingTermSupplementDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42201
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegFinancingTermSupplementDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42202
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegContractualMatrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42203
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegContractualMatrixSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42204
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegContractualMatrixDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42205
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegContractualMatrixTerm : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42206
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42207
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlDateBusinessDayConvention : String {

        public static var tag: Int {
            42208
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum CashSettlDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42209
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42210
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlDateOffsetUnit : String {

        public static var tag: Int {
            42211
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum CashSettlDateOffsetDayType : String {

        public static var tag: Int {
            42212
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum CashSettlDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42213
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoCashSettlDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42214
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42215
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlPriceSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42216
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum CashSettlPriceDefault : String {

        public static var tag: Int {
            42217
        }

        case Close = "0"
        case Hedge = "1"
    }

    public enum DividendFloatingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42218
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFloatingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42219
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFloatingRateIndexCurveUnit : String {

        public static var tag: Int {
            42220
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum DividendFloatingRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42221
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFloatingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42222
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFloatingRateSpreadPositionType : String {

        public static var tag: Int {
            42223
        }

        case Short = "0"
        case Long = "1"
    }

    public enum DividendFloatingRateTreatment : String {

        public static var tag: Int {
            42224
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum DividendCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42225
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendCapRateBuySide : String {

        public static var tag: Int {
            42226
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum DividendCapRateSellSide : String {

        public static var tag: Int {
            42227
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum DividendFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42228
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFloorRateBuySide : String {

        public static var tag: Int {
            42229
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum DividendFloorRateSellSide : String {

        public static var tag: Int {
            42230
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum DividendInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42231
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFinalRateRoundingDirection : String {

        public static var tag: Int {
            42232
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum DividendFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42233
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAveragingMethod : String {

        public static var tag: Int {
            42234
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum DividendNegativeRateTreatment : String {

        public static var tag: Int {
            42235
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum NoDividendAccrualPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42236
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAccrualPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42237
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAccrualPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42238
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAccrualPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42239
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAccrualPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42240
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum DividendAccrualPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42241
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum DividendAccrualPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42242
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAccrualPaymeentDateBusinessDayConvention : String {

        public static var tag: Int {
            42243
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum DividendAccrualPaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42244
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendReinvestmentIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42245
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendEntitlementEvent : String {

        public static var tag: Int {
            42246
        }

        case ExDate = "0"
        case RecordDate = "1"
    }

    public enum DividendAmountType : String {

        public static var tag: Int {
            42247
        }

        case RecordAmount = "0"
        case ExAmount = "1"
        case PaidAmount = "2"
        case PerMasterConfirm = "3"
    }

    public enum DividendUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42248
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExtraordinaryDividendPartySide : String {

        public static var tag: Int {
            42249
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum ExtraordinaryDividendAmountType : String {

        public static var tag: Int {
            42250
        }

        case RecordAmount = "0"
        case ExAmount = "1"
        case PaidAmount = "2"
        case PerMasterConfirm = "3"
    }

    public enum ExtraordinaryDividendCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42251
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExtraordinaryDividendDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42252
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendAccrualFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42253
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendCompoundingMethod : String {

        public static var tag: Int {
            42254
        }

        case None = "0"
        case Flat = "1"
        case Straight = "2"
        case SpreadExclusive = "3"
    }

    public enum DividendNumOfIndexUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42255
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendCashPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42256
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendCashEquivalentPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42257
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NonCashDividendTreatment : String {

        public static var tag: Int {
            42258
        }

        case PotentialAdjustment = "0"
        case CashEquivalent = "1"
    }

    public enum DividendComposition : String {

        public static var tag: Int {
            42259
        }

        case EquityAmountReceiver = "0"
        case CalculationAgent = "1"
    }

    public enum SpecialDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42260
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MaterialDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42261
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum OptionsExchangeDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42262
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AdditionalDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42263
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum AllDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42264
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFXTriggerDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42265
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFXTriggerDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42266
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFXTriggerDateOffsetUnit : String {

        public static var tag: Int {
            42267
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum DividendFXTriggerDateOffsetDayType : String {

        public static var tag: Int {
            42268
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum DividendFXTriggerDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42269
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFXTriggerDateBusinessDayConvention : String {

        public static var tag: Int {
            42270
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum DividendFXTriggerDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42271
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDividendFXTriggerDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42272
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendFXTriggerDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42273
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDividendPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42274
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodSequence : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42275
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42276
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42277
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42278
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42279
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodBusinessDayConvention : String {

        public static var tag: Int {
            42280
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum DividendPeriodValuationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42281
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodValuationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42282
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodValuationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42283
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodValuationDateOffsetUnit : String {

        public static var tag: Int {
            42284
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum DividendPeriodValuationDateOffsetDayType : String {

        public static var tag: Int {
            42285
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum DividendPeriodValuationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42286
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42287
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42288
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42289
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42290
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum DividendPeriodPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42291
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum DividendPeriodPaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42292
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42293
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoDividendPeriodBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42294
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum DividendPeriodBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42295
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoExtraordinaryEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42296
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExtraordinaryEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42297
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ExtraordinaryEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42298
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42299
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlDateBusinessDayConvention : String {

        public static var tag: Int {
            42300
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegCashSettlDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42301
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42302
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlDateOffsetUnit : String {

        public static var tag: Int {
            42303
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegCashSettlDateOffsetDayType : String {

        public static var tag: Int {
            42304
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegCashSettlDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42305
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegCashSettlDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42306
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42307
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlPriceSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42308
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegCashSettlPriceDefault : String {

        public static var tag: Int {
            42309
        }

        case Close = "0"
        case Hedge = "1"
    }

    public enum NoLegDividendAccrualPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42310
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendAccrualPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42311
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFloatingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42312
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFloatingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42313
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFloatingRateIndexCurveUnit : String {

        public static var tag: Int {
            42314
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegDividendFloatingRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42315
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFloatingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42316
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFloatingRateSpreadPositionType : String {

        public static var tag: Int {
            42317
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegDividendFloatingRateTreatment : String {

        public static var tag: Int {
            42318
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum LegDividendCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42319
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendCapRateBuySide : String {

        public static var tag: Int {
            42320
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegDividendCapRateSellSide : String {

        public static var tag: Int {
            42321
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegDividendFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42322
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFloorRateBuySide : String {

        public static var tag: Int {
            42323
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegDividendFloorRateSellSide : String {

        public static var tag: Int {
            42324
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegDividendInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42325
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFinalRateRoundingDirection : String {

        public static var tag: Int {
            42326
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum LegDividendFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42327
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendAveragingMethod : String {

        public static var tag: Int {
            42328
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum LegDividendNegativeRateTreatment : String {

        public static var tag: Int {
            42329
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum LegDividendAccrualPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42330
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendAccrualPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42331
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendAccrualPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42332
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegDividendAccrualPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42333
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegDividendAccrualPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42334
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendAccrualPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            42335
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegDividendAccrualPaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42336
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendReinvestmentIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42337
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendEntitlementEvent : String {

        public static var tag: Int {
            42338
        }

        case ExDate = "0"
        case RecordDate = "1"
    }

    public enum LegDividendAmountType : String {

        public static var tag: Int {
            42339
        }

        case RecordAmount = "0"
        case ExAmount = "1"
        case PaidAmount = "2"
        case PerMasterConfirm = "3"
    }

    public enum LegDividendUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42340
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExtraordinaryDividendPartySide : String {

        public static var tag: Int {
            42341
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegExtraordinaryDividendAmountType : String {

        public static var tag: Int {
            42342
        }

        case RecordAmount = "0"
        case ExAmount = "1"
        case PaidAmount = "2"
        case PerMasterConfirm = "3"
    }

    public enum LegExtraordinaryDividendCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42343
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExtraordinaryDividendDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42344
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendAccrualFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42345
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendCompoundingMethod : String {

        public static var tag: Int {
            42346
        }

        case None = "0"
        case Flat = "1"
        case Straight = "2"
        case SpreadExclusive = "3"
    }

    public enum LegDividendNumOfIndexUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42347
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendCashPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42348
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendCashEquivalentPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42349
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegNonCashDividendTreatment : String {

        public static var tag: Int {
            42350
        }

        case PotentialAdjustment = "0"
        case CashEquivalent = "1"
    }

    public enum LegDividendComposition : String {

        public static var tag: Int {
            42351
        }

        case EquityAmountReceiver = "0"
        case CalculationAgent = "1"
    }

    public enum LegSpecialDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42352
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMaterialDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42353
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegOptionsExchangeDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42354
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAdditionalDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42355
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegAllDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42356
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFXTriggerDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42357
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFXTriggerDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42358
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFXTriggerDateOffsetUnit : String {

        public static var tag: Int {
            42359
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegDividendFXTriggerDateOffsetDayType : String {

        public static var tag: Int {
            42360
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegDividendFXTriggerDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42361
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFXTriggerDateBusinessDayConvention : String {

        public static var tag: Int {
            42362
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegDividendFXTriggerDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42363
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDividendFXTriggerDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42364
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendFXTriggerDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42365
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDividendPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42366
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodSequence : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42367
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42368
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42369
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42370
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42371
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodBusinessDayConvention : String {

        public static var tag: Int {
            42372
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegDividendPeriodValuationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42373
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodValuationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42374
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodValuationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42375
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodValuationDateOffsetUnit : String {

        public static var tag: Int {
            42376
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegDividendPeriodValuationDateOffsetDayType : String {

        public static var tag: Int {
            42377
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegDividendPeriodValuationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42378
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42379
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42380
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42381
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42382
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegDividendPeriodPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42383
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegDividendPeriodPaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42384
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42385
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegDividendPeriodBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42386
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDividendPeriodBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42387
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegExtraordinaryEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42388
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExtraordinaryEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42389
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegExtraordinaryEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42390
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlMethodElectingPartySide : String {

        public static var tag: Int {
            42391
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum LegMakeWholeDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42392
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMakeWholeAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42393
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMakeWholeBenchmarkCurveName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42394
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMakeWholeBenchmarkCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42395
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMakeWholeRecallSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42396
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegMakeWholeBenchmarkQuote : String {

        public static var tag: Int {
            42397
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum LegMakeWholeInterpolationMethod : String {

        public static var tag: Int {
            42398
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum LegPaymentStreamCashSettlIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42399
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42400
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42401
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamInterpolationMethod : String {

        public static var tag: Int {
            42402
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum LegPaymentStreamInterpolationPeriod : String {

        public static var tag: Int {
            42403
        }

        case Initial = "0"
        case InitialAndFinal = "1"
        case Final = "2"
        case AnyPeriod = "3"
    }

    public enum LegPaymentStreamCompoundingFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42404
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamCompoundingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42405
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42406
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingDateType : String {

        public static var tag: Int {
            42407
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegPaymentStreamCompoundingDatesBusinessDayConvention : String {

        public static var tag: Int {
            42408
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStreamCompoundingDatesRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42409
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42410
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingDatesOffsetUnit : String {

        public static var tag: Int {
            42411
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamCompoundingDatesOffsetDayType : String {

        public static var tag: Int {
            42412
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamCompoundingPeriodSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42413
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42414
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingFrequencyUnit : String {

        public static var tag: Int {
            42415
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegPaymentStreamCompoundingRollConvention : String {

        public static var tag: Int {
            42416
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum LegPaymentStreamBoundsFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42417
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamBoundsLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42418
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamCompoundingDatesBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42419
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42420
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42421
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42422
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42423
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingEndDateOffsetUnit : String {

        public static var tag: Int {
            42424
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamCompoundingEndDateOffsetDayType : String {

        public static var tag: Int {
            42425
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamCompoundingEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42426
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42427
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42428
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingRateIndexCurveUnit : String {

        public static var tag: Int {
            42429
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamCompoundingRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42430
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42431
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingRateSpreadPositionType : String {

        public static var tag: Int {
            42432
        }

        case Short = "0"
        case Long = "1"
    }

    public enum LegPaymentStreamCompoundingRateTreatment : String {

        public static var tag: Int {
            42433
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum LegPaymentStreamCompoundingCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42434
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingCapRateBuySide : String {

        public static var tag: Int {
            42435
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamCompoundingCapRateSellSide : String {

        public static var tag: Int {
            42436
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamCompoundingFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42437
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingFloorRateBuySide : String {

        public static var tag: Int {
            42438
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamCompoundingFloorRateSellSide : String {

        public static var tag: Int {
            42439
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum LegPaymentStreamCompoundingInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42440
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingFinalRateRoundingDirection : String {

        public static var tag: Int {
            42441
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum LegPaymentStreamCompoundingFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42442
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingAveragingMethod : String {

        public static var tag: Int {
            42443
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum LegPaymentStreamCompoundingNegativeRateTreatment : String {

        public static var tag: Int {
            42444
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum LegPaymentStreamCompoundingStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42445
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42446
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42447
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamCompoundingStartDateOffsetUnit : String {

        public static var tag: Int {
            42448
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamCompoundingStartDateOffsetDayType : String {

        public static var tag: Int {
            42449
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamCompoundingStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42450
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaImageLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42451
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaImage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42452
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalPricePaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42453
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalPricePaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42454
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalPricePaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42455
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFinalPricePaymentDateOffsetUnit : String {

        public static var tag: Int {
            42456
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStreamFinalPricePaymentDateOffsetDayType : String {

        public static var tag: Int {
            42457
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamFinalPricePaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42458
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamFixingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42459
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42460
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFixingDateType : String {

        public static var tag: Int {
            42461
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegPaymentStreamFirstObservationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42462
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFirstObservationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42463
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFirstObservationDateOffsetDayType : String {

        public static var tag: Int {
            42464
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStreamFirstObservationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42465
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42466
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateNotionalReset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42467
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkInitialLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42468
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkClosingLevelIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42469
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkExpiringLevelIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42470
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkEstimatedTradingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42471
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42472
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkStrikePriceType : String {

        public static var tag: Int {
            42473
        }

        case Volatility = "0"
        case Variance = "1"
    }

    public enum LegPaymentStreamLinkMaximumBoundary : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42474
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkMinimumBoundary : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42475
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamLinkNumberOfDataSeries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42476
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamVarianceUnadjustedCap : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42477
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRealizedVarianceMethod : String {

        public static var tag: Int {
            42478
        }

        case Previous = "0"
        case Last = "1"
        case Both = "2"
    }

    public enum LegPaymentStreamDaysAdjustmentIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42479
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamNearestExchangeContractRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42480
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamVegaNotionalAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42481
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42482
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaCurrencyDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42483
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaReferenceAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42484
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStreamFormulas : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42485
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormula : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42486
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42487
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42488
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubEndDateBusinessDayConvention : String {

        public static var tag: Int {
            42489
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStubEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42490
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42491
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubEndDateOffsetUnit : String {

        public static var tag: Int {
            42492
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStubEndDateOffsetDayType : String {

        public static var tag: Int {
            42493
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStubEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42494
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStubEndDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42495
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubEndDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42496
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42497
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubStartDateBusinessDayConvention : String {

        public static var tag: Int {
            42498
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegPaymentStubStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42499
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42500
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubStartDateOffsetUnit : String {

        public static var tag: Int {
            42501
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegPaymentStubStartDateOffsetDayType : String {

        public static var tag: Int {
            42502
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegPaymentStubStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42503
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegPaymentStubStartDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42504
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStubStartDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42505
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegProvisionBreakFeeElection : String {

        public static var tag: Int {
            42506
        }

        case FlatFee = "0"
        case AmortizedFee = "1"
        case FundingFee = "2"
        case FlatAndFundingFee = "3"
        case AmortizedAndFundingFee = "4"
    }

    public enum LegProvisionBreakFeeRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42507
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegReturnRateDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42508
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateDateMode : String {

        public static var tag: Int {
            42509
        }

        case PriceValuation = "0"
        case DividendValuation = "1"
    }

    public enum LegReturnRateValuationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42510
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42511
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationDateOffsetUnit : String {

        public static var tag: Int {
            42512
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegReturnRateValuationDateOffsetDayType : String {

        public static var tag: Int {
            42513
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegReturnRateValuationStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42514
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42515
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42516
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationStartDateOffsetUnit : String {

        public static var tag: Int {
            42517
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegReturnRateValuationStartDateOffsetDayType : String {

        public static var tag: Int {
            42518
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegReturnRateValuationStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42519
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42520
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42521
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42522
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationEndDateOffsetUnit : String {

        public static var tag: Int {
            42523
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegReturnRateValuationEndDateOffsetDayType : String {

        public static var tag: Int {
            42524
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegReturnRateValuationEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42525
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42526
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationFrequencyUnit : String {

        public static var tag: Int {
            42527
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum LegReturnRateValuationFrequencyRollConvention : String {

        public static var tag: Int {
            42528
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum LegReturnRateValuationDateBusinessDayConvention : String {

        public static var tag: Int {
            42529
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum NoLegReturnRateFXConversions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42530
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateFXCurrencySymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42531
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42532
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateFXRateCalc : String {

        public static var tag: Int {
            42533
        }

        case Multiply = "M"
        case Divide = "D"
    }

    public enum NoLegReturnRates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42534
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRatePriceSequence : String {

        public static var tag: Int {
            42535
        }

        case Initial = "0"
        case Interim = "1"
        case Final = "2"
    }

    public enum LegReturnRateCommissionBasis : String {

        public static var tag: Int {
            42536
        }

        case PerUnit = "1"
        case Percent = "2"
        case Absolute = "3"
        case PercentageWaivedCashDiscount = "4"
        case PercentageWaivedEnhancedUnits = "5"
        case PointsPerBondOrContract = "6"
        case BasisPoints = "7"
        case AmountPerContract = "8"
    }

    public enum LegReturnRateCommissionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42537
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateCommissionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42538
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateTotalCommissionPerTrade : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42539
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42540
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateAmountRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42541
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteMeasureType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42542
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42543
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteMethod : String {

        public static var tag: Int {
            42544
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum LegReturnRateQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42545
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteCurrencyType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42546
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteTimeType : String {

        public static var tag: Int {
            42547
        }

        case Open = "0"
        case OfficialSettlPx = "1"
        case Xetra = "2"
        case Close = "3"
        case DerivativesClose = "4"
        case High = "5"
        case Low = "6"
        case AsSpecifiedInMasterConfirmation = "7"
    }

    public enum LegReturnRateQuoteTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42548
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42549
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42550
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42551
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuoteExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42552
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateQuotePricingModel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42553
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateCashFlowType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42554
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationTimeType : String {

        public static var tag: Int {
            42555
        }

        case Open = "0"
        case OfficialSettlPx = "1"
        case Xetra = "2"
        case Close = "3"
        case DerivativesClose = "4"
        case High = "5"
        case Low = "6"
        case AsSpecifiedInMasterConfirmation = "7"
    }

    public enum LegReturnRateValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42556
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42557
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationPriceOption : String {

        public static var tag: Int {
            42558
        }

        case None = "0"
        case FuturesPrice = "1"
        case OptionsPrice = "2"
    }

    public enum LegReturnRateFinalPriceFallback : String {

        public static var tag: Int {
            42559
        }

        case Close = "0"
        case HedgeElection = "1"
    }

    public enum NoLegReturnRateInformationSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42560
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateInformationSource : String {

        public static var tag: Int {
            42561
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum LegReturnRateReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42562
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42563
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegReturnRatePrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42564
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRatePriceBasis : String {

        public static var tag: Int {
            42565
        }

        case Gross = "0"
        case Net = "1"
        case Accrued = "2"
        case CleanNet = "3"
    }

    public enum LegReturnRatePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42566
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRatePriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42567
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRatePriceType : String {

        public static var tag: Int {
            42568
        }

        case AbsoluteTerms = "0"
        case PercentageOfNotional = "1"
    }

    public enum NoLegReturnRateValuationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42569
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42570
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegReturnRateValuationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42571
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42572
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegReturnRateValuationDateType : String {

        public static var tag: Int {
            42573
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum LegSettlMethodElectionDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42574
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlMethodElectionDateBusinessDayConvention : String {

        public static var tag: Int {
            42575
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum LegSettlMethodElectionDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42576
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlMethodElectionDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42577
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlMethodElectionDateOffsetUnit : String {

        public static var tag: Int {
            42578
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum LegSettlMethodElectionDateOffsetDayType : String {

        public static var tag: Int {
            42579
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum LegSettlMethodElectionDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42580
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoLegSettlMethodElectionDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42581
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegSettlMethodElectionDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42582
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42583
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamVersionEffectiveDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42584
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamNotionalDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42585
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamNotionalAdjustments : String {

        public static var tag: Int {
            42586
        }

        case Execution = "0"
        case PortfolioRebalancing = "1"
        case Standard = "2"
    }

    public enum StreamCommodityDeliveryPricingRegion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42587
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegStreamCommodityDeliveryPricingRegion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42588
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamCommodityDeliveryPricingRegion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42589
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethodElectingPartySide : String {

        public static var tag: Int {
            42590
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum MakeWholeDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42591
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MakeWholeAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42592
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MakeWholeBenchmarkCurveName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42593
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MakeWholeBenchmarkCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42594
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MakeWholeRecallSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42595
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum MakeWholeBenchmarkQuote : String {

        public static var tag: Int {
            42596
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum MakeWholeInterpolationMethod : String {

        public static var tag: Int {
            42597
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum PaymentAmountRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42598
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentAmountDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42599
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCashSettlIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42600
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42601
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42602
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamInterpolationMethod : String {

        public static var tag: Int {
            42603
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum PaymentStreamInterpolationPeriod : String {

        public static var tag: Int {
            42604
        }

        case Initial = "0"
        case InitialAndFinal = "1"
        case Final = "2"
        case AnyPeriod = "3"
    }

    public enum PaymentStreamCompoundingFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42605
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamCompoundingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42606
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42607
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingDateType : String {

        public static var tag: Int {
            42608
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum PaymentStreamCompoundingDatesBusinessDayConvention : String {

        public static var tag: Int {
            42609
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStreamCompoundingDatesRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42610
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42611
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingDatesOffsetUnit : String {

        public static var tag: Int {
            42612
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamCompoundingDatesOffsetDayType : String {

        public static var tag: Int {
            42613
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamCompoundingPeriodSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42614
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42615
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingFrequencyUnit : String {

        public static var tag: Int {
            42616
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum PaymentStreamCompoundingRollConvention : String {

        public static var tag: Int {
            42617
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum PaymentStreamBoundsFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42618
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamBoundsLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42619
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamCompoundingDatesBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42620
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42621
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42622
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42623
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42624
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingEndDateOffsetUnit : String {

        public static var tag: Int {
            42625
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamCompoundingEndDateOffsetDayType : String {

        public static var tag: Int {
            42626
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamCompoundingEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42627
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42628
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42629
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingRateIndexCurveUnit : String {

        public static var tag: Int {
            42630
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamCompoundingRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42631
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42632
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingRateSpreadPositionType : String {

        public static var tag: Int {
            42633
        }

        case Short = "0"
        case Long = "1"
    }

    public enum PaymentStreamCompoundingRateTreatment : String {

        public static var tag: Int {
            42634
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum PaymentStreamCompoundingCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42635
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingCapRateBuySide : String {

        public static var tag: Int {
            42636
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamCompoundingCapRateSellSide : String {

        public static var tag: Int {
            42637
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamCompoundingFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42638
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingFloorRateBuySide : String {

        public static var tag: Int {
            42639
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamCompoundingFloorRateSellSide : String {

        public static var tag: Int {
            42640
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum PaymentStreamCompoundingInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42641
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingFinalRateRoundingDirection : String {

        public static var tag: Int {
            42642
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum PaymentStreamCompoundingFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42643
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingAveragingMethod : String {

        public static var tag: Int {
            42644
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum PaymentStreamCompoundingNegativeRateTreatment : String {

        public static var tag: Int {
            42645
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum PaymentStreamCompoundingStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42646
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42647
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42648
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamCompoundingStartDateOffsetUnit : String {

        public static var tag: Int {
            42649
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamCompoundingStartDateOffsetDayType : String {

        public static var tag: Int {
            42650
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamCompoundingStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42651
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaImageLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42652
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaImage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42653
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalPricePaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42654
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalPricePaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42655
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalPricePaymentDateOffsetfPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42656
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFinalPricePaymentDateOffsetUnit : String {

        public static var tag: Int {
            42657
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamFinalPricePaymentDateOffsetDayType : String {

        public static var tag: Int {
            42658
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamFinalPricePaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42659
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamFixingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42660
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42661
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFixingDateType : String {

        public static var tag: Int {
            42662
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum PaymentStreamFirstObservationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42663
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFirstObservationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42664
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFirstObservationDateOffsetDayType : String {

        public static var tag: Int {
            42665
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStreamFirstObservationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42666
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42667
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateNotionalReset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42668
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkInitialLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42669
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkClosingLevelIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42670
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkExpiringLevelIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42671
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkEstimatedTradingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42672
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42673
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkStrikePriceType : String {

        public static var tag: Int {
            42674
        }

        case Volatility = "0"
        case Variance = "1"
    }

    public enum PaymentStreamLinkMaximumBoundary : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42675
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkMinimumBoundary : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42676
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamLinkNumberOfDataSeries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42677
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamVarianceUnadjustedCap : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42678
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRealizedVarianceMethod : String {

        public static var tag: Int {
            42679
        }

        case Previous = "0"
        case Last = "1"
        case Both = "2"
    }

    public enum PaymentStreamDaysAdjustmentIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42680
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamNearestExchangeContractRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42681
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamVegaNotionalAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42682
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStreamFormulas : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42683
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormula : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42684
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42685
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42686
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaCurrencyDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42687
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaReferenceAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42688
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42689
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubEndDateBusinessDayConvention : String {

        public static var tag: Int {
            42690
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStubEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42691
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42692
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubEndDateOffsetUnit : String {

        public static var tag: Int {
            42693
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStubEndDateOffsetDayType : String {

        public static var tag: Int {
            42694
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStubEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42695
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStubEndDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42696
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubEndDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42697
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42698
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubStartDateBusinessDayConvention : String {

        public static var tag: Int {
            42699
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum PaymentStubStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42700
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42701
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubStartDateOffsetUnit : String {

        public static var tag: Int {
            42702
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStubStartDateOffsetDayType : String {

        public static var tag: Int {
            42703
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum PaymentStubStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42704
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoPaymentStubStartDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42705
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStubStartDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42706
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ProvisionBreakFeeElection : String {

        public static var tag: Int {
            42707
        }

        case FlatFee = "0"
        case AmortizedFee = "1"
        case FundingFee = "2"
        case FlatAndFundingFee = "3"
        case AmortizedAndFundingFee = "4"
    }

    public enum ProvisionBreakFeeRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42708
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoReturnRateDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42709
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateDateMode : String {

        public static var tag: Int {
            42710
        }

        case PriceValuation = "0"
        case DividendValuation = "1"
    }

    public enum ReturnRateValuationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42711
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42712
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationDateOffsetUnit : String {

        public static var tag: Int {
            42713
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ReturnRateValuationDateOffsetDayType : String {

        public static var tag: Int {
            42714
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ReturnRateValuationStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42715
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42716
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42717
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationStartDateOffsetUnit : String {

        public static var tag: Int {
            42718
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ReturnRateValuationStartDateOffsetDayType : String {

        public static var tag: Int {
            42719
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ReturnRateValuationStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42720
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42721
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42722
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42723
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationEndDateOffsetUnit : String {

        public static var tag: Int {
            42724
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum ReturnRateValuationEndDateOffsetDayType : String {

        public static var tag: Int {
            42725
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum ReturnRateValuationEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42726
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42727
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationFrequencyUnit : String {

        public static var tag: Int {
            42728
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum ReturnRateValuationFrequencyRollConvention : String {

        public static var tag: Int {
            42729
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum ReturnRateValuationDateBusinessDayConvention : String {

        public static var tag: Int {
            42730
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum NoReturnRateFXConversions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42731
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateFXCurrencySymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42732
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42733
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateFXRateCalc : String {

        public static var tag: Int {
            42734
        }

        case Multiply = "M"
        case Divide = "D"
    }

    public enum NoReturnRates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42735
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRatePriceSequence : String {

        public static var tag: Int {
            42736
        }

        case Initial = "0"
        case Interim = "1"
        case Final = "2"
    }

    public enum ReturnRateCommissionBasis : String {

        public static var tag: Int {
            42737
        }

        case PerUnit = "1"
        case Percent = "2"
        case Absolute = "3"
        case PercentageWaivedCashDiscount = "4"
        case PercentageWaivedEnhancedUnits = "5"
        case PointsPerBondOrContract = "6"
        case BasisPoints = "7"
        case AmountPerContract = "8"
    }

    public enum ReturnRateCommissionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42738
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateCommissionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42739
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateTotalCommissionPerTrade : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42740
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42741
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateAmountRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42742
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteMeasureType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42743
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42744
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteMethod : String {

        public static var tag: Int {
            42745
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum ReturnRateQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42746
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteCurrencyType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42747
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteTimeType : String {

        public static var tag: Int {
            42748
        }

        case Open = "0"
        case OfficialSettlPx = "1"
        case Xetra = "2"
        case Close = "3"
        case DerivativesClose = "4"
        case High = "5"
        case Low = "6"
        case AsSpecifiedInMasterConfirmation = "7"
    }

    public enum ReturnRateQuoteTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42749
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42750
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42751
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42752
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuoteExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42753
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateQuotePricingModel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42754
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateCashFlowType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42755
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationTimeType : String {

        public static var tag: Int {
            42756
        }

        case Open = "0"
        case OfficialSettlPx = "1"
        case Xetra = "2"
        case Close = "3"
        case DerivativesClose = "4"
        case High = "5"
        case Low = "6"
        case AsSpecifiedInMasterConfirmation = "7"
    }

    public enum ReturnRateValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42757
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42758
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationPriceOption : String {

        public static var tag: Int {
            42759
        }

        case None = "0"
        case FuturesPrice = "1"
        case OptionsPrice = "2"
    }

    public enum ReturnRateFinalPriceFallback : String {

        public static var tag: Int {
            42760
        }

        case Close = "0"
        case HedgeElection = "1"
    }

    public enum NoReturnRateInformationSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42761
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateInformationSource : String {

        public static var tag: Int {
            42762
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum ReturnRateReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42763
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42764
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoReturnRatePrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42765
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRatePriceBasis : String {

        public static var tag: Int {
            42766
        }

        case Gross = "0"
        case Net = "1"
        case Accrued = "2"
        case CleanNet = "3"
    }

    public enum ReturnRatePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42767
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRatePriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42768
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRatePriceType : String {

        public static var tag: Int {
            42769
        }

        case AbsoluteTerms = "0"
        case PercentageOfNotional = "1"
    }

    public enum NoReturnRateValuationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42770
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42771
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoReturnRateValuationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42772
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42773
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum ReturnRateValuationDateType : String {

        public static var tag: Int {
            42774
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoSettlMethodElectionDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42775
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethodElectionDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42776
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethodElectionDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42777
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethodElectionDateBusinessDayConvention : String {

        public static var tag: Int {
            42778
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum SettlMethodElectionDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42779
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethodElectionDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42780
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum SettlMethodElectionDateOffsetUnit : String {

        public static var tag: Int {
            42781
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum SettlMethodElectionDateOffsetDayType : String {

        public static var tag: Int {
            42782
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum SettlMethodElectionDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42783
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42784
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamVersionEffectiveDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42785
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamNotionalDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42786
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum StreamNotionalAdjustments : String {

        public static var tag: Int {
            42787
        }

        case Execution = "0"
        case PortfolioRebalancing = "1"
        case Standard = "2"
    }

    public enum NoUnderlyingCashSettlDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42788
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42789
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42790
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlDateBusinessDayConvention : String {

        public static var tag: Int {
            42791
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingCashSettlDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42792
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42793
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlDateOffsetUnit : String {

        public static var tag: Int {
            42794
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingCashSettlDateOffsetDayType : String {

        public static var tag: Int {
            42795
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingCashSettlDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42796
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlPriceSource : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42797
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingCashSettlPriceDefault : String {

        public static var tag: Int {
            42798
        }

        case Close = "0"
        case Hedge = "1"
    }

    public enum NoUnderlyingDividendAccrualPaymentDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42799
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAccrualPaymentDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42800
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFloatingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42801
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFloatingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42802
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFloatingRateIndexCurveUnit : String {

        public static var tag: Int {
            42803
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingDividendFloatingRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42804
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFloatingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42805
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFloatingRateSpreadPositionType : String {

        public static var tag: Int {
            42806
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingDividendFloatingRateTreatment : String {

        public static var tag: Int {
            42807
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum UnderlyingDividendCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42808
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendCapRateBuySide : String {

        public static var tag: Int {
            42809
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingDividendCapRateSellSide : String {

        public static var tag: Int {
            42810
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingDividendFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42811
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFloorRateBuySide : String {

        public static var tag: Int {
            42812
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingDividendFloorRateSellSide : String {

        public static var tag: Int {
            42813
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingDividendInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42814
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFinalRateRoundingDirection : String {

        public static var tag: Int {
            42815
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum UnderlyingDividendFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42816
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAveragingMethod : String {

        public static var tag: Int {
            42817
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum UnderlyingDividendNegativeRateTreatment : String {

        public static var tag: Int {
            42818
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum UnderlyingDividendAccrualPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42819
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAccrualPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42820
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAccrualPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42821
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingDividendAccrualPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42822
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingDividendAccrualPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42823
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAccrualPaymentDateBusinessDayConvention : String {

        public static var tag: Int {
            42824
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingDividendAccrualPaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42825
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendReinvestmentIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42826
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendEntitlementEvent : String {

        public static var tag: Int {
            42827
        }

        case ExDate = "0"
        case RecordDate = "1"
    }

    public enum UnderlyingDividendAmountType : String {

        public static var tag: Int {
            42828
        }

        case RecordAmount = "0"
        case ExAmount = "1"
        case PaidAmount = "2"
        case PerMasterConfirm = "3"
    }

    public enum UnderlyingDividendUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42829
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExtraordinaryDividendPartySide : String {

        public static var tag: Int {
            42830
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingExtraordinaryDividendAmountType : String {

        public static var tag: Int {
            42831
        }

        case RecordAmount = "0"
        case ExAmount = "1"
        case PaidAmount = "2"
        case PerMasterConfirm = "3"
    }

    public enum UnderlyingExtraordinaryDividendCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42832
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExtraordinaryDividendDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42833
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAccrualFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42834
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendCompoundingMethod : String {

        public static var tag: Int {
            42835
        }

        case None = "0"
        case Flat = "1"
        case Straight = "2"
        case SpreadExclusive = "3"
    }

    public enum UnderlyingDividendNumOfIndexUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42836
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendCashPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42837
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendCashEquivalentPercentage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42838
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingNonCashDividendTreatment : String {

        public static var tag: Int {
            42839
        }

        case PotentialAdjustment = "0"
        case CashEquivalent = "1"
    }

    public enum UnderlyingDividendComposition : String {

        public static var tag: Int {
            42840
        }

        case EquityAmountReceiver = "0"
        case CalculationAgent = "1"
    }

    public enum UnderlyingSpecialDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42841
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMaterialDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42842
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingOptionsExchangeDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42843
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAdditionalDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42844
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingAllDividendsIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42845
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFXTriggerDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42846
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFXTriggerDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42847
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFXTriggerDateOffsetUnit : String {

        public static var tag: Int {
            42848
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingDividendFXTriggerDateOffsetDayType : String {

        public static var tag: Int {
            42849
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingDividendFXTriggerDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42850
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFXTriggerDateBusinessDayConvention : String {

        public static var tag: Int {
            42851
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingDividendFXTriggerDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42852
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDividendFXTriggerDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42853
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendFXTriggerDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42854
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDividendPayments : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42855
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPaymentDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42856
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPaymentAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42857
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPaymentCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42858
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendAccruedInterest : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42859
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPayoutRatio : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42860
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPayoutConditions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42861
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDividendPeriods : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42862
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodSequence : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42863
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42864
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42865
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42866
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42867
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodBusinessDayConvention : String {

        public static var tag: Int {
            42868
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingDividendPeriodValuationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42869
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodValuationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42870
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodValuationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42871
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodValuationDateOffsetUnit : String {

        public static var tag: Int {
            42872
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingDividendPeriodValuationDateOffsetDayType : String {

        public static var tag: Int {
            42873
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingDividendPeriodValuationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42874
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodPaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42875
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodPaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42876
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodPaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42877
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodPaymentDateOffsetUnit : String {

        public static var tag: Int {
            42878
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingDividendPeriodPaymentDateOffsetDayType : String {

        public static var tag: Int {
            42879
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingDividendPeriodPaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42880
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodXID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42881
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingDividendPeriodBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42882
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDividendPeriodBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42883
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingExtraordinaryEvents : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42884
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExtraordinaryEventType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42885
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingExtraordinaryEventValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42886
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethodElectingPartySide : String {

        public static var tag: Int {
            42887
        }

        case Buy = "1"
        case Sell = "2"
    }

    public enum UnderlyingMakeWholeDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42888
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMakeWholeAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42889
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMakeWholeBenchmarkCurveName : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42890
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMakeWholeBenchmarkCurvePoint : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42891
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMakeWholeRecallSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42892
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingMakeWholeBenchmarkQuote : String {

        public static var tag: Int {
            42893
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum UnderlyingMakeWholeInterpolationMethod : String {

        public static var tag: Int {
            42894
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum UnderlyingPaymentStreamCashSettlIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42895
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingXIDRef : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42896
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42897
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamInterpolationMethod : String {

        public static var tag: Int {
            42898
        }

        case None = "0"
        case LinearZeroYield = "1"
    }

    public enum UnderlyingPaymentStreamInterpolationPeriod : String {

        public static var tag: Int {
            42899
        }

        case Initial = "0"
        case InitialAndFinal = "1"
        case Final = "2"
        case AnyPeriod = "3"
    }

    public enum UnderlyingPaymentStreamCompoundingFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42900
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamCompoundingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42901
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42902
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingDateType : String {

        public static var tag: Int {
            42903
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention : String {

        public static var tag: Int {
            42904
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStreamCompoundingDatesRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42905
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingDatesOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42906
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingDatesOffsetUnit : String {

        public static var tag: Int {
            42907
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamCompoundingDatesOffsetDayType : String {

        public static var tag: Int {
            42908
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamCompoundingPeriodSkip : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42909
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42910
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingFrequencyUnit : String {

        public static var tag: Int {
            42911
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingPaymentStreamCompoundingRollConvention : String {

        public static var tag: Int {
            42912
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum UnderlyingPaymentStreamBoundsFirstDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42913
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamBoundsLastDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42914
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42915
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingDatesBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42916
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42917
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42918
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42919
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingEndDateOffsetUnit : String {

        public static var tag: Int {
            42920
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamCompoundingEndDateOffsetDayType : String {

        public static var tag: Int {
            42921
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamCompoundingEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42922
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42923
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42924
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingRateIndexCurveUnit : String {

        public static var tag: Int {
            42925
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamCompoundingRateMultiplier : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42926
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42927
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingRateSpreadPositionType : String {

        public static var tag: Int {
            42928
        }

        case Short = "0"
        case Long = "1"
    }

    public enum UnderlyingPaymentStreamCompoundingRateTreatment : String {

        public static var tag: Int {
            42929
        }

        case BondEquivalentYield = "0"
        case MoneyMarketYield = "1"
    }

    public enum UnderlyingPaymentStreamCompoundingCapRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42930
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingCapRateBuySide : String {

        public static var tag: Int {
            42931
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamCompoundingCapRateSellSide : String {

        public static var tag: Int {
            42932
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamCompoundingFloorRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42933
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingFloorRateBuySide : String {

        public static var tag: Int {
            42934
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamCompoundingFloorRateSellSide : String {

        public static var tag: Int {
            42935
        }

        case Buyer = "1"
        case Seller = "2"
    }

    public enum UnderlyingPaymentStreamCompoundingInitialRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42936
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection : String {

        public static var tag: Int {
            42937
        }

        case RoundToNearest = "0"
        case RoundDown = "1"
        case RoundUp = "2"
    }

    public enum UnderlyingPaymentStreamCompoundingFinalRatePrecision : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42938
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingAveragingMethod : String {

        public static var tag: Int {
            42939
        }

        case Unweighted = "0"
        case Weighted = "1"
    }

    public enum UnderlyingPaymentStreamCompoundingNegativeRateTreatment : String {

        public static var tag: Int {
            42940
        }

        case ZeroInterestRateMethod = "0"
        case NegativeInterestRateMethod = "1"
    }

    public enum UnderlyingPaymentStreamCompoundingStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42941
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42942
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42943
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamCompoundingStartDateOffsetUnit : String {

        public static var tag: Int {
            42944
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamCompoundingStartDateOffsetDayType : String {

        public static var tag: Int {
            42945
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamCompoundingStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42946
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaImageLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42947
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaImage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42948
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42949
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42950
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42951
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit : String {

        public static var tag: Int {
            42952
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType : String {

        public static var tag: Int {
            42953
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamFinalPricePaymentDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42954
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamFixingDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42955
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixingDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42956
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFixingDateType : String {

        public static var tag: Int {
            42957
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum UnderlyingPaymentStreamFirstObservationDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42958
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFirstObservationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42959
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFirstObservationDateOffsetDayType : String {

        public static var tag: Int {
            42960
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStreamFirstObservationDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42961
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamUnderlierRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42962
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateNotionalReset : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42963
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkInitialLevel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42964
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkClosingLevelIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42965
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkExpiringLevelIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42966
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkEstimatedTradingDays : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42967
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkStrikePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42968
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkStrikePriceType : String {

        public static var tag: Int {
            42969
        }

        case Volatility = "0"
        case Variance = "1"
    }

    public enum UnderlyingPaymentStreamLinkMaximumBoundary : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42970
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkMinimumBoundary : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42971
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamLinkNumberOfDataSeries : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42972
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamVarianceUnadjustedCap : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42973
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRealizedVarianceMethod : String {

        public static var tag: Int {
            42974
        }

        case Previous = "0"
        case Last = "1"
        case Both = "2"
    }

    public enum UnderlyingPaymentStreamDaysAdjustmentIndicator : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42975
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamNearestExchangeContractRefID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42976
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamVegaNotionalAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42977
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42978
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42979
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaReferenceAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42980
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStreamFormulas : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42981
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormula : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42982
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42983
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42984
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubEndDateBusinessDayConvention : String {

        public static var tag: Int {
            42985
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStubEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42986
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42987
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubEndDateOffsetUnit : String {

        public static var tag: Int {
            42988
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStubEndDateOffsetDayType : String {

        public static var tag: Int {
            42989
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStubEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42990
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStubEndDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42991
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubEndDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42992
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42993
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubStartDateBusinessDayConvention : String {

        public static var tag: Int {
            42994
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingPaymentStubStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42995
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42996
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubStartDateOffsetUnit : String {

        public static var tag: Int {
            42997
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingPaymentStubStartDateOffsetDayType : String {

        public static var tag: Int {
            42998
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingPaymentStubStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            42999
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingPaymentStubStartDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43000
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStubStartDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43001
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingProvisionBreakFeeElection : String {

        public static var tag: Int {
            43002
        }

        case FlatFee = "0"
        case AmortizedFee = "1"
        case FundingFee = "2"
        case FlatAndFundingFee = "3"
        case AmortizedAndFundingFee = "4"
    }

    public enum UnderlyingProvisionBreakFeeRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43003
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRateSpreadInitialValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43004
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingRateSpreadSteps : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43005
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRateSpreadStepDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43006
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingRateSpreadStepValue : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43007
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingReturnRateDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43008
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateDateMode : String {

        public static var tag: Int {
            43009
        }

        case PriceValuation = "0"
        case DividendValuation = "1"
    }

    public enum UnderlyingReturnRateValuationDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43010
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43011
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationDateOffsetUnit : String {

        public static var tag: Int {
            43012
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingReturnRateValuationDateOffsetDayType : String {

        public static var tag: Int {
            43013
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingReturnRateValuationStartDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43014
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationStartDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43015
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationStartDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43016
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationStartDateOffsetUnit : String {

        public static var tag: Int {
            43017
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingReturnRateValuationStartDateOffsetDayType : String {

        public static var tag: Int {
            43018
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingReturnRateValuationStartDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43019
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationEndDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43020
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationEndDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43021
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationEndDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43022
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationEndDateOffsetUnit : String {

        public static var tag: Int {
            43023
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingReturnRateValuationEndDateOffsetDayType : String {

        public static var tag: Int {
            43024
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingReturnRateValuationEndDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43025
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43026
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationFrequencyUnit : String {

        public static var tag: Int {
            43027
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
        case Hour = "H"
        case Minute = "Min"
        case Second = "S"
        case Term = "T"
    }

    public enum UnderlyingReturnRateValuationFrequencyRollConvention : String {

        public static var tag: Int {
            43028
        }

        case FirstDay = "1"
        case SecondDay = "2"
        case ThirdDay = "3"
        case FourthDay = "4"
        case FifthDay = "5"
        case SixthDay = "6"
        case SeventhDay = "7"
        case EighthDay = "8"
        case NinthDay = "9"
        case TenthDay = "10"
        case EleventhDay = "11"
        case TwelvthDay = "12"
        case ThirteenthDay = "13"
        case ForteenthDay = "14"
        case FifteenthDay = "15"
        case SixteenthDay = "16"
        case SeventeenthDay = "17"
        case EighteenthDay = "18"
        case NineteenthDay = "19"
        case TwentiethDay = "20"
        case TwentyFirstDay = "21"
        case TwentySecondDay = "22"
        case TwentyThirdDay = "23"
        case TwentyFourthDay = "24"
        case TwentyFifthDay = "25"
        case TwentySixthDay = "26"
        case TwentySeventhDay = "27"
        case TwentyEigthDa28y = "28"
        case TwentyNinthDay = "29"
        case ThirtiethDay = "30"
        case EOM = "EOM"
        case FRN = "FRN"
        case IMM = "IMM"
        case IMMCAD = "IMMCAD"
        case IMMAUD = "IMMAUD"
        case IMMNZD = "IMMNZD"
        case SFE = "SFE"
        case NONE = "NONE"
        case TBILL = "TBILL"
        case MON = "MON"
        case TUE = "TUE"
        case WED = "WED"
        case THU = "THU"
        case FRI = "FRI"
        case SAT = "SAT"
        case SUN = "SUN"
    }

    public enum UnderlyingReturnRateValuationDateBusinessDayConvention : String {

        public static var tag: Int {
            43029
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum NoUnderlyingReturnRateFXConversions : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43030
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateFXCurrencySymbol : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43031
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateFXRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43032
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateFXRateCalc : String {

        public static var tag: Int {
            43033
        }

        case Multiply = "M"
        case Divide = "D"
    }

    public enum NoUnderlyingReturnRates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43034
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRatePriceSequence : String {

        public static var tag: Int {
            43035
        }

        case Initial = "0"
        case Interim = "1"
        case Final = "2"
    }

    public enum UnderlyingReturnRateCommissionBasis : String {

        public static var tag: Int {
            43036
        }

        case PerUnit = "1"
        case Percent = "2"
        case Absolute = "3"
        case PercentageWaivedCashDiscount = "4"
        case PercentageWaivedEnhancedUnits = "5"
        case PointsPerBondOrContract = "6"
        case BasisPoints = "7"
        case AmountPerContract = "8"
    }

    public enum UnderlyingReturnRateCommissionAmount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43037
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateCommissionCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43038
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateTotalCommissionPerTrade : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43039
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43040
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateAmountRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43041
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteMeasureType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43042
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteUnits : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43043
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteMethod : String {

        public static var tag: Int {
            43044
        }

        case Bid = "0"
        case Mid = "1"
        case Offer = "2"
    }

    public enum UnderlyingReturnRateQuoteCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43045
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteCurrencyType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43046
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteTimeType : String {

        public static var tag: Int {
            43047
        }

        case Open = "0"
        case OfficialSettlPx = "1"
        case Xetra = "2"
        case Close = "3"
        case DerivativesClose = "4"
        case High = "5"
        case Low = "6"
        case AsSpecifiedInMasterConfirmation = "7"
    }

    public enum UnderlyingReturnRateQuoteTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43048
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43049
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteExpirationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43050
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43051
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuoteExchange : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43052
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateQuotePricingModel : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43053
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateCashFlowType : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43054
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationTimeType : String {

        public static var tag: Int {
            43055
        }

        case Open = "0"
        case OfficialSettlPx = "1"
        case Xetra = "2"
        case Close = "3"
        case DerivativesClose = "4"
        case High = "5"
        case Low = "6"
        case AsSpecifiedInMasterConfirmation = "7"
    }

    public enum UnderlyingReturnRateValuationTime : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43056
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationTimeBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43057
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationPriceOption : String {

        public static var tag: Int {
            43058
        }

        case None = "0"
        case FuturesPrice = "1"
        case OptionsPrice = "2"
    }

    public enum UnderlyingReturnRateFinalPriceFallback : String {

        public static var tag: Int {
            43059
        }

        case Close = "0"
        case HedgeElection = "1"
    }

    public enum NoUnderlyingReturnRateInformationSources : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43060
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateInformationSource : String {

        public static var tag: Int {
            43061
        }

        case Bloomberg = "0"
        case Reuters = "1"
        case Telerate = "2"
        case ISDARateOption = "3"
        case Other = "99"
    }

    public enum UnderlyingReturnRateReferencePage : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43062
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateReferencePageHeading : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43063
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingReturnRatePrices : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43064
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRatePriceBasis : String {

        public static var tag: Int {
            43065
        }

        case Gross = "0"
        case Net = "1"
        case Accrued = "2"
        case CleanNet = "3"
    }

    public enum UnderlyingReturnRatePrice : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43066
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRatePriceCurrency : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43067
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRatePriceType : String {

        public static var tag: Int {
            43068
        }

        case AbsoluteTerms = "0"
        case PercentageOfNotional = "1"
    }

    public enum NoUnderlyingReturnRateValuationDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43069
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43070
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum NoUnderlyingReturnRateValuationDates : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43071
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43072
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingReturnRateValuationDateType : String {

        public static var tag: Int {
            43073
        }

        case Unadjusted = "0"
        case Adjusted = "1"
    }

    public enum NoUnderlyingSettlMethodElectionDateBusinessCenters : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43074
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethodElectionDateBusinessCenter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43075
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethodElectionDateUnadjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43076
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethodElectionDateBusinessDayConvention : String {

        public static var tag: Int {
            43077
        }

        case NotApplicable = "0"
        case None = "1"
        case FollowingDay = "2"
        case FloatingRateNote = "3"
        case ModifiedFollowingDay = "4"
        case PrecedingDay = "5"
        case ModifiedPrecedingDay = "6"
        case NearestDay = "7"
    }

    public enum UnderlyingSettlMethodElectionDateRelativeTo : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43078
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethodElectionDateOffsetPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43079
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingSettlMethodElectionDateOffsetUnit : String {

        public static var tag: Int {
            43080
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum UnderlyingSettlMethodElectionDateOffsetDayType : String {

        public static var tag: Int {
            43081
        }

        case Business = "0"
        case Calendar = "1"
        case CommodityBusiness = "2"
        case CurrencyBusiness = "3"
        case ExchangeBusiness = "4"
        case ScheduledTradingDay = "5"
    }

    public enum UnderlyingSettlMethodElectionDateAdjusted : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43082
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamVersion : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43083
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamVersionEffectiveDate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43084
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamNotionalDeterminationMethod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43085
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingStreamNotionalAdjustments : String {

        public static var tag: Int {
            43086
        }

        case Execution = "0"
        case PortfolioRebalancing = "1"
        case Standard = "2"
    }

    public enum PaymentDesc : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43087
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndexID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43088
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamRateIndexIDSource : String {

        public static var tag: Int {
            43089
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum PaymentStreamRateIndexID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43090
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamRateIndexIDSource : String {

        public static var tag: Int {
            43091
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum UnderlyingPaymentStreamRateIndexID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43092
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamRateIndexIDSource : String {

        public static var tag: Int {
            43093
        }

        case CUSIP = "1"
        case SEDOL = "2"
        case QUIK = "3"
        case ISINNumber = "4"
        case RICCode = "5"
        case ISOCurrencyCode = "6"
        case ISOCountryCode = "7"
        case ExchangeSymbol = "8"
        case ConsolidatedTapeAssociation = "9"
        case BloombergSymbol = "A"
        case Wertpapier = "B"
        case Dutch = "C"
        case Valoren = "D"
        case Sicovam = "E"
        case Belgian = "F"
        case Common = "G"
        case ClearingHouse = "H"
        case ISDAFpMLSpecification = "I"
        case OptionPriceReportingAuthority = "J"
        case ISDAFpMLURL = "K"
        case LetterOfCredit = "L"
        case MarketplaceAssignedIdentifier = "M"
        case MarkitREDEntityCLIP = "N"
        case MarkitREDPairCLIP = "P"
        case CFTCCommodityCode = "Q"
        case ISDACommodityReferencePrice = "R"
        case FinancialInstrumentGlobalIdentifier = "S"
        case LegalEntityIdentifier = "T"
        case Synthetic = "U"
        case FidessaInstrumentMnemonic = "V"
        case IndexName = "W"
        case UniformSymbol = "X"
    }

    public enum DeliveryStreamRouteOrCharter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43094
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegDeliveryStreamRouteOrCharter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43095
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingDeliveryStreamRouteOrCharter : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43096
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentFixedRate : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43097
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentFloatingRateIndex : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43098
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentFloatingRateIndexCurvePeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43099
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentFloatingRateIndexCurveUnit : String {

        public static var tag: Int {
            43100
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentFloatingRateSpread : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43101
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43102
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentFrequencyUnit : String {

        public static var tag: Int {
            43103
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentRateResetFrequencyPeriod : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43104
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentRateResetFrequencyUnit : String {

        public static var tag: Int {
            43105
        }

        case Day = "D"
        case Week = "Wk"
        case Month = "Mo"
        case Year = "Yr"
    }

    public enum PaymentStreamOtherDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43106
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamOtherDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43107
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamOtherDayCount : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43108
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum PaymentStreamFormulaLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43109
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum LegPaymentStreamFormulaLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43110
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum UnderlyingPaymentStreamFormulaLength : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            43111
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BatchID : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            50000
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BatchTotalMessages : RawRepresentable {

        public typealias RawValue = String

        public static var tag: Int {
            50001
        }

        public init?(rawValue: RawValue) {
            return nil        }

        public var rawValue: RawValue {
            return ""
        }

    }

    public enum BatchProcessMode : String {

        public static var tag: Int {
            50002
        }

        case Update = "0"
        case Snapshot = "1"
    }

}
